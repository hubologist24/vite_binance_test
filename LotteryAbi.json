{
    "abi": [
        {
            "inputs": [],
            "stateMutability": "nonpayable",
            "type": "constructor",
            "name": "constructor"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "previousOwner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "bytes32",
                    "name": "requestId",
                    "type": "bytes32"
                }
            ],
            "name": "RequestedRandomness",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "cantSendEthOwner",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "cantSendEthParticipants",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "cantSendEthWinner",
            "type": "event"
        },
        {
            "inputs": [],
            "name": "EntryFee",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "contractPercent",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "emergency",
            "outputs": [
                {
                    "internalType": "enum MyLottery.EMERGENCY",
                    "name": "",
                    "type": "uint8"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "end_lottery",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "enter_lottery",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "errorFlag",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "fee",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_tokenContractAddress",
                    "type": "address"
                }
            ],
            "name": "getBalance",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "name": "isUserEntered",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "keyhash",
            "outputs": [
                {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "lotteryDuration",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "lotteryEnd",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "lotteryPrepDuration",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "lotteryStart",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "lottery_state",
            "outputs": [
                {
                    "internalType": "enum MyLottery.LOTTERY_STATE",
                    "name": "",
                    "type": "uint8"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "maxTryCounter",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "maximumParticipants",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "minumumParticipants",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "owner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "ownerPercent",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "ownerSent",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "name": "players",
            "outputs": [
                {
                    "internalType": "address payable",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "pricePercent",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "randomness",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "recentWinner",
            "outputs": [
                {
                    "internalType": "address payable",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "recoverEth",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "tokenAddress",
                    "type": "address"
                }
            ],
            "name": "recoverTokens",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "renounceOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "retrySendPrizes",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "setEmergencyClose",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "setEmergencyOpen",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_entryFee",
                    "type": "uint256"
                }
            ],
            "name": "setEntranceFee",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_duration",
                    "type": "uint256"
                }
            ],
            "name": "setLotteryDuration",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_maximumParticipants",
                    "type": "uint256"
                }
            ],
            "name": "setMaximumParticipants",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_minumumParticipants",
                    "type": "uint256"
                }
            ],
            "name": "setMinumumParticipants",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_pricePercent",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "_ownerPercent",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "_contractPercent",
                    "type": "uint256"
                }
            ],
            "name": "setPrizePercents",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "start_lottery",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "transferOwner",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        }
    ],
    "allSourcePaths": {
        "0": "/home/edvirt/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.0/contracts/access/Ownable.sol",
        "1": "/home/edvirt/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.0/contracts/security/ReentrancyGuard.sol",
        "2": "/home/edvirt/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.0/contracts/utils/Context.sol",
        "3": "/home/edvirt/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.0/contracts/utils/Strings.sol",
        "4": "contracts/MyLottery.sol"
    },
    "ast": {
        "absolutePath": "contracts/MyLottery.sol",
        "exportedSymbols": {
            "Context": [
                1325
            ],
            "IERC20": [
                71
            ],
            "MyLottery": [
                924
            ],
            "Ownable": [
                1037
            ],
            "ReentrancyGuard": [
                1077
            ],
            "Strings": [
                1303
            ]
        },
        "id": 925,
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 1,
                "literals": [
                    "solidity",
                    "^",
                    "0.8",
                    ".13"
                ],
                "nodeType": "PragmaDirective",
                "src": "0:24:4"
            },
            {
                "absolutePath": "/home/edvirt/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.0/contracts/access/Ownable.sol",
                "file": "@openzeppelin/contracts/access/Ownable.sol",
                "id": 2,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 925,
                "sourceUnit": 1038,
                "src": "84:52:4",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/home/edvirt/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.0/contracts/security/ReentrancyGuard.sol",
                "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
                "id": 3,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 925,
                "sourceUnit": 1078,
                "src": "137:62:4",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/home/edvirt/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.0/contracts/utils/Strings.sol",
                "file": "@openzeppelin/contracts/utils/Strings.sol",
                "id": 4,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 925,
                "sourceUnit": 1304,
                "src": "341:51:4",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [],
                "canonicalName": "IERC20",
                "contractDependencies": [],
                "contractKind": "interface",
                "fullyImplemented": false,
                "id": 71,
                "linearizedBaseContracts": [
                    71
                ],
                "name": "IERC20",
                "nameLocation": "459:6:4",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "functionSelector": "18160ddd",
                        "id": 9,
                        "implemented": false,
                        "kind": "function",
                        "modifiers": [],
                        "name": "totalSupply",
                        "nameLocation": "481:11:4",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 5,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "492:2:4"
                        },
                        "returnParameters": {
                            "id": 8,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 7,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 9,
                                    "src": "518:7:4",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 6,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "518:7:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "517:9:4"
                        },
                        "scope": 71,
                        "src": "472:55:4",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "functionSelector": "70a08231",
                        "id": 16,
                        "implemented": false,
                        "kind": "function",
                        "modifiers": [],
                        "name": "balanceOf",
                        "nameLocation": "542:9:4",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 12,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 11,
                                    "mutability": "mutable",
                                    "name": "account",
                                    "nameLocation": "560:7:4",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 16,
                                    "src": "552:15:4",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 10,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "552:7:4",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "551:17:4"
                        },
                        "returnParameters": {
                            "id": 15,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 14,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 16,
                                    "src": "592:7:4",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 13,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "592:7:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "591:9:4"
                        },
                        "scope": 71,
                        "src": "533:68:4",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "functionSelector": "a9059cbb",
                        "id": 25,
                        "implemented": false,
                        "kind": "function",
                        "modifiers": [],
                        "name": "transfer",
                        "nameLocation": "616:8:4",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 21,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 18,
                                    "mutability": "mutable",
                                    "name": "recipient",
                                    "nameLocation": "633:9:4",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 25,
                                    "src": "625:17:4",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 17,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "625:7:4",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 20,
                                    "mutability": "mutable",
                                    "name": "amount",
                                    "nameLocation": "652:6:4",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 25,
                                    "src": "644:14:4",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 19,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "644:7:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "624:35:4"
                        },
                        "returnParameters": {
                            "id": 24,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 23,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 25,
                                    "src": "694:4:4",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                    },
                                    "typeName": {
                                        "id": 22,
                                        "name": "bool",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "694:4:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "693:6:4"
                        },
                        "scope": 71,
                        "src": "607:93:4",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "functionSelector": "dd62ed3e",
                        "id": 34,
                        "implemented": false,
                        "kind": "function",
                        "modifiers": [],
                        "name": "allowance",
                        "nameLocation": "715:9:4",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 30,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 27,
                                    "mutability": "mutable",
                                    "name": "owner",
                                    "nameLocation": "733:5:4",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 34,
                                    "src": "725:13:4",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 26,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "725:7:4",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 29,
                                    "mutability": "mutable",
                                    "name": "spender",
                                    "nameLocation": "748:7:4",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 34,
                                    "src": "740:15:4",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 28,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "740:7:4",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "724:32:4"
                        },
                        "returnParameters": {
                            "id": 33,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 32,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 34,
                                    "src": "804:7:4",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 31,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "804:7:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "803:9:4"
                        },
                        "scope": 71,
                        "src": "706:107:4",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "functionSelector": "095ea7b3",
                        "id": 43,
                        "implemented": false,
                        "kind": "function",
                        "modifiers": [],
                        "name": "approve",
                        "nameLocation": "828:7:4",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 39,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 36,
                                    "mutability": "mutable",
                                    "name": "spender",
                                    "nameLocation": "844:7:4",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 43,
                                    "src": "836:15:4",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 35,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "836:7:4",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 38,
                                    "mutability": "mutable",
                                    "name": "amount",
                                    "nameLocation": "861:6:4",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 43,
                                    "src": "853:14:4",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 37,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "853:7:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "835:33:4"
                        },
                        "returnParameters": {
                            "id": 42,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 41,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 43,
                                    "src": "887:4:4",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                    },
                                    "typeName": {
                                        "id": 40,
                                        "name": "bool",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "887:4:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "886:6:4"
                        },
                        "scope": 71,
                        "src": "819:74:4",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "functionSelector": "23b872dd",
                        "id": 54,
                        "implemented": false,
                        "kind": "function",
                        "modifiers": [],
                        "name": "transferFrom",
                        "nameLocation": "908:12:4",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 50,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 45,
                                    "mutability": "mutable",
                                    "name": "sender",
                                    "nameLocation": "938:6:4",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 54,
                                    "src": "930:14:4",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 44,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "930:7:4",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 47,
                                    "mutability": "mutable",
                                    "name": "recipient",
                                    "nameLocation": "962:9:4",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 54,
                                    "src": "954:17:4",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 46,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "954:7:4",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 49,
                                    "mutability": "mutable",
                                    "name": "amount",
                                    "nameLocation": "989:6:4",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 54,
                                    "src": "981:14:4",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 48,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "981:7:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "920:81:4"
                        },
                        "returnParameters": {
                            "id": 53,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 52,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 54,
                                    "src": "1020:4:4",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                    },
                                    "typeName": {
                                        "id": 51,
                                        "name": "bool",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1020:4:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1019:6:4"
                        },
                        "scope": 71,
                        "src": "899:127:4",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "anonymous": false,
                        "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
                        "id": 62,
                        "name": "Transfer",
                        "nameLocation": "1038:8:4",
                        "nodeType": "EventDefinition",
                        "parameters": {
                            "id": 61,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 56,
                                    "indexed": true,
                                    "mutability": "mutable",
                                    "name": "from",
                                    "nameLocation": "1063:4:4",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 62,
                                    "src": "1047:20:4",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 55,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1047:7:4",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 58,
                                    "indexed": true,
                                    "mutability": "mutable",
                                    "name": "to",
                                    "nameLocation": "1085:2:4",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 62,
                                    "src": "1069:18:4",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 57,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1069:7:4",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 60,
                                    "indexed": false,
                                    "mutability": "mutable",
                                    "name": "value",
                                    "nameLocation": "1097:5:4",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 62,
                                    "src": "1089:13:4",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 59,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1089:7:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1046:57:4"
                        },
                        "src": "1032:72:4"
                    },
                    {
                        "anonymous": false,
                        "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
                        "id": 70,
                        "name": "Approval",
                        "nameLocation": "1115:8:4",
                        "nodeType": "EventDefinition",
                        "parameters": {
                            "id": 69,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 64,
                                    "indexed": true,
                                    "mutability": "mutable",
                                    "name": "owner",
                                    "nameLocation": "1149:5:4",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 70,
                                    "src": "1133:21:4",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 63,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1133:7:4",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 66,
                                    "indexed": true,
                                    "mutability": "mutable",
                                    "name": "spender",
                                    "nameLocation": "1180:7:4",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 70,
                                    "src": "1164:23:4",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 65,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1164:7:4",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 68,
                                    "indexed": false,
                                    "mutability": "mutable",
                                    "name": "value",
                                    "nameLocation": "1205:5:4",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 70,
                                    "src": "1197:13:4",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 67,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1197:7:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1123:93:4"
                        },
                        "src": "1109:108:4"
                    }
                ],
                "scope": 925,
                "src": "449:770:4",
                "usedErrors": []
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 72,
                            "name": "Ownable",
                            "nameLocations": [
                                "1243:7:4"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1037,
                            "src": "1243:7:4"
                        },
                        "id": 73,
                        "nodeType": "InheritanceSpecifier",
                        "src": "1243:7:4"
                    },
                    {
                        "baseName": {
                            "id": 74,
                            "name": "ReentrancyGuard",
                            "nameLocations": [
                                "1252:15:4"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1077,
                            "src": "1252:15:4"
                        },
                        "id": 75,
                        "nodeType": "InheritanceSpecifier",
                        "src": "1252:15:4"
                    }
                ],
                "canonicalName": "MyLottery",
                "contractDependencies": [],
                "contractKind": "contract",
                "fullyImplemented": true,
                "id": 924,
                "linearizedBaseContracts": [
                    924,
                    1077,
                    1037,
                    1325
                ],
                "name": "MyLottery",
                "nameLocation": "1230:9:4",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "constant": false,
                        "functionSelector": "f71d96cb",
                        "id": 78,
                        "mutability": "mutable",
                        "name": "players",
                        "nameLocation": "1299:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 924,
                        "src": "1274:32:4",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                            "typeString": "address payable[]"
                        },
                        "typeName": {
                            "baseType": {
                                "id": 76,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1274:15:4",
                                "stateMutability": "payable",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                }
                            },
                            "id": 77,
                            "nodeType": "ArrayTypeName",
                            "src": "1274:17:4",
                            "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
                                "typeString": "address payable[]"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "4f8c70cf",
                        "id": 80,
                        "mutability": "mutable",
                        "name": "recentWinner",
                        "nameLocation": "1335:12:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 924,
                        "src": "1312:35:4",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                        },
                        "typeName": {
                            "id": 79,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1312:15:4",
                            "stateMutability": "payable",
                            "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "36013189",
                        "id": 82,
                        "mutability": "mutable",
                        "name": "randomness",
                        "nameLocation": "1395:10:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 924,
                        "src": "1380:25:4",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                        },
                        "typeName": {
                            "id": 81,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1380:7:4",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "a6d811ea",
                        "id": 84,
                        "mutability": "mutable",
                        "name": "minumumParticipants",
                        "nameLocation": "1426:19:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 924,
                        "src": "1411:34:4",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                        },
                        "typeName": {
                            "id": 83,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1411:7:4",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "04283412",
                        "id": 86,
                        "mutability": "mutable",
                        "name": "maximumParticipants",
                        "nameLocation": "1466:19:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 924,
                        "src": "1451:34:4",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                        },
                        "typeName": {
                            "id": 85,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1451:7:4",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "59fe8c84",
                        "id": 88,
                        "mutability": "mutable",
                        "name": "EntryFee",
                        "nameLocation": "1506:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 924,
                        "src": "1491:23:4",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                        },
                        "typeName": {
                            "id": 87,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1491:7:4",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "be55c9c9",
                        "id": 92,
                        "mutability": "mutable",
                        "name": "isUserEntered",
                        "nameLocation": "1552:13:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 924,
                        "src": "1520:45:4",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                        },
                        "typeName": {
                            "id": 91,
                            "keyType": {
                                "id": 89,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1528:7:4",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                }
                            },
                            "nodeType": "Mapping",
                            "src": "1520:24:4",
                            "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                            },
                            "valueType": {
                                "id": 90,
                                "name": "bool",
                                "nodeType": "ElementaryTypeName",
                                "src": "1539:4:4",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                }
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "81fb84fb",
                        "id": 94,
                        "mutability": "mutable",
                        "name": "pricePercent",
                        "nameLocation": "1640:12:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 924,
                        "src": "1625:27:4",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                        },
                        "typeName": {
                            "id": 93,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1625:7:4",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "95d12000",
                        "id": 96,
                        "mutability": "mutable",
                        "name": "ownerPercent",
                        "nameLocation": "1673:12:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 924,
                        "src": "1658:27:4",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                        },
                        "typeName": {
                            "id": 95,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1658:7:4",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "9bb57718",
                        "id": 98,
                        "mutability": "mutable",
                        "name": "contractPercent",
                        "nameLocation": "1706:15:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 924,
                        "src": "1691:30:4",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                        },
                        "typeName": {
                            "id": 97,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1691:7:4",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "501d0780",
                        "id": 100,
                        "mutability": "mutable",
                        "name": "maxTryCounter",
                        "nameLocation": "1742:13:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 924,
                        "src": "1727:28:4",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                        },
                        "typeName": {
                            "id": 99,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1727:7:4",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "faea18c6",
                        "id": 102,
                        "mutability": "mutable",
                        "name": "errorFlag",
                        "nameLocation": "1776:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 924,
                        "src": "1761:24:4",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                        },
                        "typeName": {
                            "id": 101,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1761:7:4",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "cd8cc844",
                        "id": 104,
                        "mutability": "mutable",
                        "name": "lotteryStart",
                        "nameLocation": "1806:12:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 924,
                        "src": "1791:27:4",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                        },
                        "typeName": {
                            "id": 103,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1791:7:4",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "d70fa7de",
                        "id": 106,
                        "mutability": "mutable",
                        "name": "lotteryEnd",
                        "nameLocation": "1839:10:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 924,
                        "src": "1824:25:4",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                        },
                        "typeName": {
                            "id": 105,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1824:7:4",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "2d97902f",
                        "id": 108,
                        "mutability": "mutable",
                        "name": "lotteryDuration",
                        "nameLocation": "1870:15:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 924,
                        "src": "1855:30:4",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                        },
                        "typeName": {
                            "id": 107,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1855:7:4",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "cf23aa38",
                        "id": 110,
                        "mutability": "mutable",
                        "name": "lotteryPrepDuration",
                        "nameLocation": "1906:19:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 924,
                        "src": "1891:34:4",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                        },
                        "typeName": {
                            "id": 109,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1891:7:4",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "0b3ff280",
                        "id": 112,
                        "mutability": "mutable",
                        "name": "ownerSent",
                        "nameLocation": "1943:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 924,
                        "src": "1931:21:4",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                        },
                        "typeName": {
                            "id": 111,
                            "name": "bool",
                            "nodeType": "ElementaryTypeName",
                            "src": "1931:4:4",
                            "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "canonicalName": "MyLottery.LOTTERY_STATE",
                        "id": 116,
                        "members": [
                            {
                                "id": 113,
                                "name": "OPEN",
                                "nameLocation": "2385:4:4",
                                "nodeType": "EnumValue",
                                "src": "2385:4:4"
                            },
                            {
                                "id": 114,
                                "name": "CLOSED",
                                "nameLocation": "2399:6:4",
                                "nodeType": "EnumValue",
                                "src": "2399:6:4"
                            },
                            {
                                "id": 115,
                                "name": "CALCULATING_WINNER",
                                "nameLocation": "2415:18:4",
                                "nodeType": "EnumValue",
                                "src": "2415:18:4"
                            }
                        ],
                        "name": "LOTTERY_STATE",
                        "nameLocation": "2361:13:4",
                        "nodeType": "EnumDefinition",
                        "src": "2356:83:4"
                    },
                    {
                        "constant": false,
                        "functionSelector": "81447999",
                        "id": 119,
                        "mutability": "mutable",
                        "name": "lottery_state",
                        "nameLocation": "2465:13:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 924,
                        "src": "2444:34:4",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_enum$_LOTTERY_STATE_$116",
                            "typeString": "enum MyLottery.LOTTERY_STATE"
                        },
                        "typeName": {
                            "id": 118,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                                "id": 117,
                                "name": "LOTTERY_STATE",
                                "nameLocations": [
                                    "2444:13:4"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 116,
                                "src": "2444:13:4"
                            },
                            "referencedDeclaration": 116,
                            "src": "2444:13:4",
                            "typeDescriptions": {
                                "typeIdentifier": "t_enum$_LOTTERY_STATE_$116",
                                "typeString": "enum MyLottery.LOTTERY_STATE"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "canonicalName": "MyLottery.EMERGENCY",
                        "id": 122,
                        "members": [
                            {
                                "id": 120,
                                "name": "STOPPED",
                                "nameLocation": "2510:7:4",
                                "nodeType": "EnumValue",
                                "src": "2510:7:4"
                            },
                            {
                                "id": 121,
                                "name": "NOT_STOPPED",
                                "nameLocation": "2527:11:4",
                                "nodeType": "EnumValue",
                                "src": "2527:11:4"
                            }
                        ],
                        "name": "EMERGENCY",
                        "nameLocation": "2490:9:4",
                        "nodeType": "EnumDefinition",
                        "src": "2485:59:4"
                    },
                    {
                        "constant": false,
                        "functionSelector": "caa6fea4",
                        "id": 125,
                        "mutability": "mutable",
                        "name": "emergency",
                        "nameLocation": "2566:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 924,
                        "src": "2549:26:4",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_enum$_EMERGENCY_$122",
                            "typeString": "enum MyLottery.EMERGENCY"
                        },
                        "typeName": {
                            "id": 124,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                                "id": 123,
                                "name": "EMERGENCY",
                                "nameLocations": [
                                    "2549:9:4"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 122,
                                "src": "2549:9:4"
                            },
                            "referencedDeclaration": 122,
                            "src": "2549:9:4",
                            "typeDescriptions": {
                                "typeIdentifier": "t_enum$_EMERGENCY_$122",
                                "typeString": "enum MyLottery.EMERGENCY"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "ddca3f43",
                        "id": 127,
                        "mutability": "mutable",
                        "name": "fee",
                        "nameLocation": "2596:3:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 924,
                        "src": "2581:18:4",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                        },
                        "typeName": {
                            "id": 126,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2581:7:4",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "69ebe78e",
                        "id": 129,
                        "mutability": "mutable",
                        "name": "keyhash",
                        "nameLocation": "2620:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 924,
                        "src": "2605:22:4",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                        },
                        "typeName": {
                            "id": 128,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "2605:7:4",
                            "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "anonymous": false,
                        "eventSelector": "e5f5b44d72d4143c278eb745c4acc0695c4a5bc616be5beecf46abe29661780e",
                        "id": 133,
                        "name": "RequestedRandomness",
                        "nameLocation": "2639:19:4",
                        "nodeType": "EventDefinition",
                        "parameters": {
                            "id": 132,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 131,
                                    "indexed": false,
                                    "mutability": "mutable",
                                    "name": "requestId",
                                    "nameLocation": "2667:9:4",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 133,
                                    "src": "2659:17:4",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                    },
                                    "typeName": {
                                        "id": 130,
                                        "name": "bytes32",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2659:7:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "2658:19:4"
                        },
                        "src": "2633:45:4"
                    },
                    {
                        "anonymous": false,
                        "eventSelector": "7a4c4fdf5d3172470d96d64c965b30de694852175efc7a6b546fb3bdbf76d178",
                        "id": 139,
                        "name": "cantSendEthOwner",
                        "nameLocation": "2738:16:4",
                        "nodeType": "EventDefinition",
                        "parameters": {
                            "id": 138,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 135,
                                    "indexed": true,
                                    "mutability": "mutable",
                                    "name": "to",
                                    "nameLocation": "2771:2:4",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 139,
                                    "src": "2755:18:4",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 134,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2755:7:4",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 137,
                                    "indexed": false,
                                    "mutability": "mutable",
                                    "name": "value",
                                    "nameLocation": "2783:5:4",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 139,
                                    "src": "2775:13:4",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 136,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2775:7:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "2754:35:4"
                        },
                        "src": "2732:58:4"
                    },
                    {
                        "anonymous": false,
                        "eventSelector": "977e2c32be07c8aa27bfe58f2bf200e11eca859b94d36e76e645fcaf1d4cc946",
                        "id": 145,
                        "name": "cantSendEthWinner",
                        "nameLocation": "2801:17:4",
                        "nodeType": "EventDefinition",
                        "parameters": {
                            "id": 144,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 141,
                                    "indexed": true,
                                    "mutability": "mutable",
                                    "name": "to",
                                    "nameLocation": "2835:2:4",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 145,
                                    "src": "2819:18:4",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 140,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2819:7:4",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 143,
                                    "indexed": false,
                                    "mutability": "mutable",
                                    "name": "value",
                                    "nameLocation": "2847:5:4",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 145,
                                    "src": "2839:13:4",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 142,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2839:7:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "2818:35:4"
                        },
                        "src": "2795:59:4"
                    },
                    {
                        "anonymous": false,
                        "eventSelector": "1198b3902400a4722f08a21eb834e8f872109a5dab83213639d3670a10d8d40a",
                        "id": 151,
                        "name": "cantSendEthParticipants",
                        "nameLocation": "2865:23:4",
                        "nodeType": "EventDefinition",
                        "parameters": {
                            "id": 150,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 147,
                                    "indexed": true,
                                    "mutability": "mutable",
                                    "name": "to",
                                    "nameLocation": "2905:2:4",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 151,
                                    "src": "2889:18:4",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 146,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2889:7:4",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 149,
                                    "indexed": false,
                                    "mutability": "mutable",
                                    "name": "value",
                                    "nameLocation": "2917:5:4",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 151,
                                    "src": "2909:13:4",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 148,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2909:7:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "2888:35:4"
                        },
                        "src": "2859:65:4"
                    },
                    {
                        "body": {
                            "id": 205,
                            "nodeType": "Block",
                            "src": "2979:448:4",
                            "statements": [
                                {
                                    "expression": {
                                        "id": 161,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 154,
                                            "name": "EntryFee",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 88,
                                            "src": "2989:8:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "commonType": {
                                                "typeIdentifier": "t_rational_50000000000000000_by_1",
                                                "typeString": "int_const 50000000000000000"
                                            },
                                            "id": 160,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                                "hexValue": "302e3035",
                                                "id": 155,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "3000:4:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_1_by_20",
                                                    "typeString": "rational_const 1 / 20"
                                                },
                                                "value": "0.05"
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "*",
                                            "rightExpression": {
                                                "components": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                                            "typeString": "int_const 1000000000000000000"
                                                        },
                                                        "id": 158,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "hexValue": "3130",
                                                            "id": 156,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "3008:2:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_10_by_1",
                                                                "typeString": "int_const 10"
                                                            },
                                                            "value": "10"
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "**",
                                                        "rightExpression": {
                                                            "hexValue": "3138",
                                                            "id": 157,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "3012:2:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_18_by_1",
                                                                "typeString": "int_const 18"
                                                            },
                                                            "value": "18"
                                                        },
                                                        "src": "3008:6:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                                            "typeString": "int_const 1000000000000000000"
                                                        }
                                                    }
                                                ],
                                                "id": 159,
                                                "isConstant": false,
                                                "isInlineArray": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "TupleExpression",
                                                "src": "3007:8:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                                    "typeString": "int_const 1000000000000000000"
                                                }
                                            },
                                            "src": "3000:15:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_50000000000000000_by_1",
                                                "typeString": "int_const 50000000000000000"
                                            }
                                        },
                                        "src": "2989:26:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 162,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2989:26:4"
                                },
                                {
                                    "expression": {
                                        "id": 166,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 163,
                                            "name": "lottery_state",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 119,
                                            "src": "3040:13:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_enum$_LOTTERY_STATE_$116",
                                                "typeString": "enum MyLottery.LOTTERY_STATE"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "expression": {
                                                "id": 164,
                                                "name": "LOTTERY_STATE",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 116,
                                                "src": "3056:13:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$116_$",
                                                    "typeString": "type(enum MyLottery.LOTTERY_STATE)"
                                                }
                                            },
                                            "id": 165,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberLocation": "3070:6:4",
                                            "memberName": "CLOSED",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 114,
                                            "src": "3056:20:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_enum$_LOTTERY_STATE_$116",
                                                "typeString": "enum MyLottery.LOTTERY_STATE"
                                            }
                                        },
                                        "src": "3040:36:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_LOTTERY_STATE_$116",
                                            "typeString": "enum MyLottery.LOTTERY_STATE"
                                        }
                                    },
                                    "id": 167,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3040:36:4"
                                },
                                {
                                    "expression": {
                                        "id": 171,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 168,
                                            "name": "emergency",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 125,
                                            "src": "3086:9:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_enum$_EMERGENCY_$122",
                                                "typeString": "enum MyLottery.EMERGENCY"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "expression": {
                                                "id": 169,
                                                "name": "EMERGENCY",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 122,
                                                "src": "3098:9:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_enum$_EMERGENCY_$122_$",
                                                    "typeString": "type(enum MyLottery.EMERGENCY)"
                                                }
                                            },
                                            "id": 170,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberLocation": "3108:11:4",
                                            "memberName": "NOT_STOPPED",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 121,
                                            "src": "3098:21:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_enum$_EMERGENCY_$122",
                                                "typeString": "enum MyLottery.EMERGENCY"
                                            }
                                        },
                                        "src": "3086:33:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_EMERGENCY_$122",
                                            "typeString": "enum MyLottery.EMERGENCY"
                                        }
                                    },
                                    "id": 172,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3086:33:4"
                                },
                                {
                                    "expression": {
                                        "id": 175,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 173,
                                            "name": "minumumParticipants",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 84,
                                            "src": "3129:19:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "hexValue": "3130",
                                            "id": 174,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "3151:2:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_10_by_1",
                                                "typeString": "int_const 10"
                                            },
                                            "value": "10"
                                        },
                                        "src": "3129:24:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 176,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3129:24:4"
                                },
                                {
                                    "expression": {
                                        "id": 179,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 177,
                                            "name": "maximumParticipants",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 86,
                                            "src": "3163:19:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "hexValue": "313530",
                                            "id": 178,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "3185:3:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_150_by_1",
                                                "typeString": "int_const 150"
                                            },
                                            "value": "150"
                                        },
                                        "src": "3163:25:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 180,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3163:25:4"
                                },
                                {
                                    "expression": {
                                        "id": 183,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 181,
                                            "name": "pricePercent",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 94,
                                            "src": "3198:12:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "hexValue": "3730",
                                            "id": 182,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "3213:2:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_70_by_1",
                                                "typeString": "int_const 70"
                                            },
                                            "value": "70"
                                        },
                                        "src": "3198:17:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 184,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3198:17:4"
                                },
                                {
                                    "expression": {
                                        "id": 187,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 185,
                                            "name": "ownerPercent",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 96,
                                            "src": "3225:12:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "hexValue": "3230",
                                            "id": 186,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "3240:2:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_20_by_1",
                                                "typeString": "int_const 20"
                                            },
                                            "value": "20"
                                        },
                                        "src": "3225:17:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 188,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3225:17:4"
                                },
                                {
                                    "expression": {
                                        "id": 191,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 189,
                                            "name": "contractPercent",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 98,
                                            "src": "3252:15:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "hexValue": "3130",
                                            "id": 190,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "3270:2:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_10_by_1",
                                                "typeString": "int_const 10"
                                            },
                                            "value": "10"
                                        },
                                        "src": "3252:20:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 192,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3252:20:4"
                                },
                                {
                                    "expression": {
                                        "id": 195,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 193,
                                            "name": "maxTryCounter",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 100,
                                            "src": "3282:13:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "hexValue": "33",
                                            "id": 194,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "3298:1:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_3_by_1",
                                                "typeString": "int_const 3"
                                            },
                                            "value": "3"
                                        },
                                        "src": "3282:17:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 196,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3282:17:4"
                                },
                                {
                                    "expression": {
                                        "id": 199,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 197,
                                            "name": "lotteryDuration",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 108,
                                            "src": "3309:15:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "hexValue": "323539323030",
                                            "id": 198,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "3327:6:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_259200_by_1",
                                                "typeString": "int_const 259200"
                                            },
                                            "value": "259200"
                                        },
                                        "src": "3309:24:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 200,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3309:24:4"
                                },
                                {
                                    "expression": {
                                        "id": 203,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 201,
                                            "name": "lotteryPrepDuration",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 110,
                                            "src": "3370:19:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "hexValue": "3134343030",
                                            "id": 202,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "3392:5:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_14400_by_1",
                                                "typeString": "int_const 14400"
                                            },
                                            "value": "14400"
                                        },
                                        "src": "3370:27:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 204,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3370:27:4"
                                }
                            ]
                        },
                        "id": 206,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [],
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 152,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "2969:2:4"
                        },
                        "returnParameters": {
                            "id": 153,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "2979:0:4"
                        },
                        "scope": 924,
                        "src": "2958:469:4",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 291,
                            "nodeType": "Block",
                            "src": "3507:736:4",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                "id": 217,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "baseExpression": {
                                                        "id": 212,
                                                        "name": "isUserEntered",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 92,
                                                        "src": "3525:13:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                                            "typeString": "mapping(address => bool)"
                                                        }
                                                    },
                                                    "id": 215,
                                                    "indexExpression": {
                                                        "expression": {
                                                            "id": 213,
                                                            "name": "msg",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": -15,
                                                            "src": "3539:3:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_magic_message",
                                                                "typeString": "msg"
                                                            }
                                                        },
                                                        "id": 214,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberLocation": "3543:6:4",
                                                        "memberName": "sender",
                                                        "nodeType": "MemberAccess",
                                                        "src": "3539:10:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "IndexAccess",
                                                    "src": "3525:25:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                    "hexValue": "66616c7365",
                                                    "id": 216,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "bool",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "3554:5:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    },
                                                    "value": "false"
                                                },
                                                "src": "3525:34:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "416c726561647920656e7465726564",
                                                "id": 218,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "3561:17:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_deb4b8a8201ed6a00a5b44f6de73097d57e1dd1992298f73c80fd116035f4ed8",
                                                    "typeString": "literal_string \"Already entered\""
                                                },
                                                "value": "Already entered"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_deb4b8a8201ed6a00a5b44f6de73097d57e1dd1992298f73c80fd116035f4ed8",
                                                    "typeString": "literal_string \"Already entered\""
                                                }
                                            ],
                                            "id": 211,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                -18,
                                                -18
                                            ],
                                            "referencedDeclaration": -18,
                                            "src": "3517:7:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 219,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3517:62:4",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 220,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3517:62:4"
                                },
                                {
                                    "expression": {
                                        "id": 226,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "baseExpression": {
                                                "id": 221,
                                                "name": "isUserEntered",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 92,
                                                "src": "3589:13:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                                    "typeString": "mapping(address => bool)"
                                                }
                                            },
                                            "id": 224,
                                            "indexExpression": {
                                                "expression": {
                                                    "id": 222,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": -15,
                                                    "src": "3603:3:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 223,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "3607:6:4",
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "3603:10:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": true,
                                            "nodeType": "IndexAccess",
                                            "src": "3589:25:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "hexValue": "74727565",
                                            "id": 225,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "bool",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "3617:4:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "value": "true"
                                        },
                                        "src": "3589:32:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 227,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3589:32:4"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_enum$_LOTTERY_STATE_$116",
                                                    "typeString": "enum MyLottery.LOTTERY_STATE"
                                                },
                                                "id": 232,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 229,
                                                    "name": "lottery_state",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 119,
                                                    "src": "3639:13:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$116",
                                                        "typeString": "enum MyLottery.LOTTERY_STATE"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                    "expression": {
                                                        "id": 230,
                                                        "name": "LOTTERY_STATE",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 116,
                                                        "src": "3656:13:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$116_$",
                                                            "typeString": "type(enum MyLottery.LOTTERY_STATE)"
                                                        }
                                                    },
                                                    "id": 231,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberLocation": "3670:4:4",
                                                    "memberName": "OPEN",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 113,
                                                    "src": "3656:18:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$116",
                                                        "typeString": "enum MyLottery.LOTTERY_STATE"
                                                    }
                                                },
                                                "src": "3639:35:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "4c6f7474657279204e6f742073746172746564",
                                                "id": 233,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "3676:21:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_59b9ae2af78a944fc7c743d60bb0157c373d3a4689f86567d16ecbd7d6fe94f4",
                                                    "typeString": "literal_string \"Lottery Not started\""
                                                },
                                                "value": "Lottery Not started"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_59b9ae2af78a944fc7c743d60bb0157c373d3a4689f86567d16ecbd7d6fe94f4",
                                                    "typeString": "literal_string \"Lottery Not started\""
                                                }
                                            ],
                                            "id": 228,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                -18,
                                                -18
                                            ],
                                            "referencedDeclaration": -18,
                                            "src": "3631:7:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 234,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3631:67:4",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 235,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3631:67:4"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "components": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_enum$_EMERGENCY_$122",
                                                            "typeString": "enum MyLottery.EMERGENCY"
                                                        },
                                                        "id": 240,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "id": 237,
                                                            "name": "emergency",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 125,
                                                            "src": "3717:9:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_enum$_EMERGENCY_$122",
                                                                "typeString": "enum MyLottery.EMERGENCY"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "==",
                                                        "rightExpression": {
                                                            "expression": {
                                                                "id": 238,
                                                                "name": "EMERGENCY",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 122,
                                                                "src": "3730:9:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_type$_t_enum$_EMERGENCY_$122_$",
                                                                    "typeString": "type(enum MyLottery.EMERGENCY)"
                                                                }
                                                            },
                                                            "id": 239,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "memberLocation": "3740:11:4",
                                                            "memberName": "NOT_STOPPED",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 121,
                                                            "src": "3730:21:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_enum$_EMERGENCY_$122",
                                                                "typeString": "enum MyLottery.EMERGENCY"
                                                            }
                                                        },
                                                        "src": "3717:34:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    }
                                                ],
                                                "id": 241,
                                                "isConstant": false,
                                                "isInlineArray": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "TupleExpression",
                                                "src": "3716:36:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "4c6f74746572792053746f70706564",
                                                "id": 242,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "3754:17:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_0f8669caf5886a57764c35e07aa907034f7333a8c64b85e82e330c678f3eff52",
                                                    "typeString": "literal_string \"Lottery Stopped\""
                                                },
                                                "value": "Lottery Stopped"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_0f8669caf5886a57764c35e07aa907034f7333a8c64b85e82e330c678f3eff52",
                                                    "typeString": "literal_string \"Lottery Stopped\""
                                                }
                                            ],
                                            "id": 236,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                -18,
                                                -18
                                            ],
                                            "referencedDeclaration": -18,
                                            "src": "3708:7:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 243,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3708:64:4",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 244,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3708:64:4"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 249,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "expression": {
                                                        "id": 246,
                                                        "name": "msg",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": -15,
                                                        "src": "3803:3:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_message",
                                                            "typeString": "msg"
                                                        }
                                                    },
                                                    "id": 247,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberLocation": "3807:5:4",
                                                    "memberName": "value",
                                                    "nodeType": "MemberAccess",
                                                    "src": "3803:9:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                    "id": 248,
                                                    "name": "EntryFee",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 88,
                                                    "src": "3816:8:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "3803:21:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "arguments": [
                                                    {
                                                        "hexValue": "456e74727920666565206d75737420626520657175616c20746f3a20",
                                                        "id": 253,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "3869:30:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_df696564c2d0cbc18ba0582b88bd73b59cb1a08f930115fa1905a3f2d4fff617",
                                                            "typeString": "literal_string \"Entry fee must be equal to: \""
                                                        },
                                                        "value": "Entry fee must be equal to: "
                                                    },
                                                    {
                                                        "arguments": [
                                                            {
                                                                "id": 256,
                                                                "name": "EntryFee",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 88,
                                                                "src": "3934:8:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "id": 254,
                                                                "name": "Strings",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 1303,
                                                                "src": "3917:7:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_type$_t_contract$_Strings_$1303_$",
                                                                    "typeString": "type(library Strings)"
                                                                }
                                                            },
                                                            "id": 255,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberLocation": "3925:8:4",
                                                            "memberName": "toString",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 1165,
                                                            "src": "3917:16:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                                                "typeString": "function (uint256) pure returns (string memory)"
                                                            }
                                                        },
                                                        "id": 257,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "nameLocations": [],
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "3917:26:4",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_string_memory_ptr",
                                                            "typeString": "string memory"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "20457468",
                                                        "id": 258,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "3961:6:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_b6ee96e7166402c66a60c745b2e54bae2a950cd694d6fc5ed31c4730260033f8",
                                                            "typeString": "literal_string \" Eth\""
                                                        },
                                                        "value": " Eth"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_stringliteral_df696564c2d0cbc18ba0582b88bd73b59cb1a08f930115fa1905a3f2d4fff617",
                                                            "typeString": "literal_string \"Entry fee must be equal to: \""
                                                        },
                                                        {
                                                            "typeIdentifier": "t_string_memory_ptr",
                                                            "typeString": "string memory"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_b6ee96e7166402c66a60c745b2e54bae2a950cd694d6fc5ed31c4730260033f8",
                                                            "typeString": "literal_string \" Eth\""
                                                        }
                                                    ],
                                                    "expression": {
                                                        "id": 251,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "nodeType": "ElementaryTypeNameExpression",
                                                        "src": "3838:6:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                                            "typeString": "type(string storage pointer)"
                                                        },
                                                        "typeName": {
                                                            "id": 250,
                                                            "name": "string",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "3838:6:4",
                                                            "typeDescriptions": {}
                                                        }
                                                    },
                                                    "id": 252,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberLocation": "3845:6:4",
                                                    "memberName": "concat",
                                                    "nodeType": "MemberAccess",
                                                    "src": "3838:13:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
                                                        "typeString": "function () pure returns (string memory)"
                                                    }
                                                },
                                                "id": 259,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "3838:143:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_string_memory_ptr",
                                                    "typeString": "string memory"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_string_memory_ptr",
                                                    "typeString": "string memory"
                                                }
                                            ],
                                            "id": 245,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                -18,
                                                -18
                                            ],
                                            "referencedDeclaration": -18,
                                            "src": "3782:7:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 260,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3782:209:4",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 261,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3782:209:4"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 266,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "expression": {
                                                        "id": 263,
                                                        "name": "players",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 78,
                                                        "src": "4022:7:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                                            "typeString": "address payable[] storage ref"
                                                        }
                                                    },
                                                    "id": 264,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberLocation": "4030:6:4",
                                                    "memberName": "length",
                                                    "nodeType": "MemberAccess",
                                                    "src": "4022:14:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "<=",
                                                "rightExpression": {
                                                    "id": 265,
                                                    "name": "maximumParticipants",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 86,
                                                    "src": "4040:19:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "4022:37:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "4d6178696d756d204e756d626572207265616368656420666f7220206c6f7474657279",
                                                "id": 267,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "4073:37:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_9aa3901f561e302bc0fa3d7d8001b37fece8b2ac86462524d93a201586e85418",
                                                    "typeString": "literal_string \"Maximum Number reached for  lottery\""
                                                },
                                                "value": "Maximum Number reached for  lottery"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_9aa3901f561e302bc0fa3d7d8001b37fece8b2ac86462524d93a201586e85418",
                                                    "typeString": "literal_string \"Maximum Number reached for  lottery\""
                                                }
                                            ],
                                            "id": 262,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                -18,
                                                -18
                                            ],
                                            "referencedDeclaration": -18,
                                            "src": "4001:7:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 268,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4001:119:4",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 269,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4001:119:4"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 277,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "expression": {
                                                        "expression": {
                                                            "components": [
                                                                {
                                                                    "expression": {
                                                                        "id": 271,
                                                                        "name": "msg",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": -15,
                                                                        "src": "4139:3:4",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_magic_message",
                                                                            "typeString": "msg"
                                                                        }
                                                                    },
                                                                    "id": 272,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "memberLocation": "4143:6:4",
                                                                    "memberName": "sender",
                                                                    "nodeType": "MemberAccess",
                                                                    "src": "4139:10:4",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    }
                                                                }
                                                            ],
                                                            "id": 273,
                                                            "isConstant": false,
                                                            "isInlineArray": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "nodeType": "TupleExpression",
                                                            "src": "4138:12:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "id": 274,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberLocation": "4151:4:4",
                                                        "memberName": "code",
                                                        "nodeType": "MemberAccess",
                                                        "src": "4138:17:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes_memory_ptr",
                                                            "typeString": "bytes memory"
                                                        }
                                                    },
                                                    "id": 275,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberLocation": "4156:6:4",
                                                    "memberName": "length",
                                                    "nodeType": "MemberAccess",
                                                    "src": "4138:24:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "<=",
                                                "rightExpression": {
                                                    "hexValue": "30",
                                                    "id": 276,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "4166:1:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_0_by_1",
                                                        "typeString": "int_const 0"
                                                    },
                                                    "value": "0"
                                                },
                                                "src": "4138:29:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "436f6e74726163742063616e6e6f7420656e746572",
                                                "id": 278,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "4169:23:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_598e1c2341bbebbb6aa55fead8db94fcb57a8d50553af9d607fcd9cf010d07dc",
                                                    "typeString": "literal_string \"Contract cannot enter\""
                                                },
                                                "value": "Contract cannot enter"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_598e1c2341bbebbb6aa55fead8db94fcb57a8d50553af9d607fcd9cf010d07dc",
                                                    "typeString": "literal_string \"Contract cannot enter\""
                                                }
                                            ],
                                            "id": 270,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                -18,
                                                -18
                                            ],
                                            "referencedDeclaration": -18,
                                            "src": "4130:7:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 279,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4130:63:4",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 280,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4130:63:4"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "expression": {
                                                            "id": 286,
                                                            "name": "msg",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": -15,
                                                            "src": "4224:3:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_magic_message",
                                                                "typeString": "msg"
                                                            }
                                                        },
                                                        "id": 287,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberLocation": "4228:6:4",
                                                        "memberName": "sender",
                                                        "nodeType": "MemberAccess",
                                                        "src": "4224:10:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 285,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "4216:8:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_payable_$",
                                                        "typeString": "type(address payable)"
                                                    },
                                                    "typeName": {
                                                        "id": 284,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "4216:8:4",
                                                        "stateMutability": "payable",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 288,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "4216:19:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            ],
                                            "expression": {
                                                "id": 281,
                                                "name": "players",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 78,
                                                "src": "4203:7:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                                    "typeString": "address payable[] storage ref"
                                                }
                                            },
                                            "id": 283,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "4211:4:4",
                                            "memberName": "push",
                                            "nodeType": "MemberAccess",
                                            "src": "4203:12:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_payable_$dyn_storage_ptr_$_t_address_payable_$returns$__$bound_to$_t_array$_t_address_payable_$dyn_storage_ptr_$",
                                                "typeString": "function (address payable[] storage pointer,address payable)"
                                            }
                                        },
                                        "id": 289,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4203:33:4",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 290,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4203:33:4"
                                }
                            ]
                        },
                        "functionSelector": "382e5e7a",
                        "id": 292,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 209,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 208,
                                    "name": "nonReentrant",
                                    "nameLocations": [
                                        "3494:12:4"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 1076,
                                    "src": "3494:12:4"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "3494:12:4"
                            }
                        ],
                        "name": "enter_lottery",
                        "nameLocation": "3463:13:4",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 207,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "3476:2:4"
                        },
                        "returnParameters": {
                            "id": 210,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "3507:0:4"
                        },
                        "scope": 924,
                        "src": "3454:789:4",
                        "stateMutability": "payable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 338,
                            "nodeType": "Block",
                            "src": "4294:449:4",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_enum$_LOTTERY_STATE_$116",
                                                    "typeString": "enum MyLottery.LOTTERY_STATE"
                                                },
                                                "id": 301,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 298,
                                                    "name": "lottery_state",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 119,
                                                    "src": "4325:13:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$116",
                                                        "typeString": "enum MyLottery.LOTTERY_STATE"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                    "expression": {
                                                        "id": 299,
                                                        "name": "LOTTERY_STATE",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 116,
                                                        "src": "4342:13:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$116_$",
                                                            "typeString": "type(enum MyLottery.LOTTERY_STATE)"
                                                        }
                                                    },
                                                    "id": 300,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberLocation": "4356:6:4",
                                                    "memberName": "CLOSED",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 114,
                                                    "src": "4342:20:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$116",
                                                        "typeString": "enum MyLottery.LOTTERY_STATE"
                                                    }
                                                },
                                                "src": "4325:37:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "4c6f747465727920416c72656164792073746172746564",
                                                "id": 302,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "4376:25:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_7fe149e6b25e5d1c4cb2a0f7706a1c16a526c3bf763601c97d5007c09f2cfb61",
                                                    "typeString": "literal_string \"Lottery Already started\""
                                                },
                                                "value": "Lottery Already started"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_7fe149e6b25e5d1c4cb2a0f7706a1c16a526c3bf763601c97d5007c09f2cfb61",
                                                    "typeString": "literal_string \"Lottery Already started\""
                                                }
                                            ],
                                            "id": 297,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                -18,
                                                -18
                                            ],
                                            "referencedDeclaration": -18,
                                            "src": "4304:7:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 303,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4304:107:4",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 304,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4304:107:4"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_enum$_EMERGENCY_$122",
                                                    "typeString": "enum MyLottery.EMERGENCY"
                                                },
                                                "id": 309,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 306,
                                                    "name": "emergency",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 125,
                                                    "src": "4429:9:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_enum$_EMERGENCY_$122",
                                                        "typeString": "enum MyLottery.EMERGENCY"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                    "expression": {
                                                        "id": 307,
                                                        "name": "EMERGENCY",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 122,
                                                        "src": "4442:9:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_enum$_EMERGENCY_$122_$",
                                                            "typeString": "type(enum MyLottery.EMERGENCY)"
                                                        }
                                                    },
                                                    "id": 308,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberLocation": "4452:11:4",
                                                    "memberName": "NOT_STOPPED",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 121,
                                                    "src": "4442:21:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_enum$_EMERGENCY_$122",
                                                        "typeString": "enum MyLottery.EMERGENCY"
                                                    }
                                                },
                                                "src": "4429:34:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "4c6f74746572792053746f70706564",
                                                "id": 310,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "4465:17:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_0f8669caf5886a57764c35e07aa907034f7333a8c64b85e82e330c678f3eff52",
                                                    "typeString": "literal_string \"Lottery Stopped\""
                                                },
                                                "value": "Lottery Stopped"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_0f8669caf5886a57764c35e07aa907034f7333a8c64b85e82e330c678f3eff52",
                                                    "typeString": "literal_string \"Lottery Stopped\""
                                                }
                                            ],
                                            "id": 305,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                -18,
                                                -18
                                            ],
                                            "referencedDeclaration": -18,
                                            "src": "4421:7:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 311,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4421:62:4",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 312,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4421:62:4"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 320,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "expression": {
                                                        "id": 314,
                                                        "name": "block",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": -4,
                                                        "src": "4514:5:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_block",
                                                            "typeString": "block"
                                                        }
                                                    },
                                                    "id": 315,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberLocation": "4520:9:4",
                                                    "memberName": "timestamp",
                                                    "nodeType": "MemberAccess",
                                                    "src": "4514:15:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": ">",
                                                "rightExpression": {
                                                    "components": [
                                                        {
                                                            "commonType": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            },
                                                            "id": 318,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftExpression": {
                                                                "id": 316,
                                                                "name": "lotteryEnd",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 106,
                                                                "src": "4533:10:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            },
                                                            "nodeType": "BinaryOperation",
                                                            "operator": "+",
                                                            "rightExpression": {
                                                                "id": 317,
                                                                "name": "lotteryPrepDuration",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 110,
                                                                "src": "4546:19:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            },
                                                            "src": "4533:32:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        }
                                                    ],
                                                    "id": 319,
                                                    "isConstant": false,
                                                    "isInlineArray": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "TupleExpression",
                                                    "src": "4532:34:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "4514:52:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "6d696e206c6f74746572792070726570206475726174696f6e206e6f7420706173736564",
                                                "id": 321,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "4580:38:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_6c7ea112fb4c4485b83632bdcab40376ac75ef7d5dc5d16ed2fa68c582a50a81",
                                                    "typeString": "literal_string \"min lottery prep duration not passed\""
                                                },
                                                "value": "min lottery prep duration not passed"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_6c7ea112fb4c4485b83632bdcab40376ac75ef7d5dc5d16ed2fa68c582a50a81",
                                                    "typeString": "literal_string \"min lottery prep duration not passed\""
                                                }
                                            ],
                                            "id": 313,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                -18,
                                                -18
                                            ],
                                            "referencedDeclaration": -18,
                                            "src": "4493:7:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 322,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4493:135:4",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 323,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4493:135:4"
                                },
                                {
                                    "expression": {
                                        "id": 327,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 324,
                                            "name": "lottery_state",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 119,
                                            "src": "4638:13:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_enum$_LOTTERY_STATE_$116",
                                                "typeString": "enum MyLottery.LOTTERY_STATE"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "expression": {
                                                "id": 325,
                                                "name": "LOTTERY_STATE",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 116,
                                                "src": "4654:13:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$116_$",
                                                    "typeString": "type(enum MyLottery.LOTTERY_STATE)"
                                                }
                                            },
                                            "id": 326,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberLocation": "4668:4:4",
                                            "memberName": "OPEN",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 113,
                                            "src": "4654:18:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_enum$_LOTTERY_STATE_$116",
                                                "typeString": "enum MyLottery.LOTTERY_STATE"
                                            }
                                        },
                                        "src": "4638:34:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_LOTTERY_STATE_$116",
                                            "typeString": "enum MyLottery.LOTTERY_STATE"
                                        }
                                    },
                                    "id": 328,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4638:34:4"
                                },
                                {
                                    "expression": {
                                        "id": 331,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 329,
                                            "name": "randomness",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 82,
                                            "src": "4682:10:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "hexValue": "30",
                                            "id": 330,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "4695:1:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                        },
                                        "src": "4682:14:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 332,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4682:14:4"
                                },
                                {
                                    "expression": {
                                        "id": 336,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 333,
                                            "name": "lotteryStart",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 104,
                                            "src": "4706:12:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "expression": {
                                                "id": 334,
                                                "name": "block",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -4,
                                                "src": "4721:5:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_block",
                                                    "typeString": "block"
                                                }
                                            },
                                            "id": 335,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "4727:9:4",
                                            "memberName": "timestamp",
                                            "nodeType": "MemberAccess",
                                            "src": "4721:15:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "4706:30:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 337,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4706:30:4"
                                }
                            ]
                        },
                        "functionSelector": "ee44abb2",
                        "id": 339,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 295,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 294,
                                    "name": "nonReentrant",
                                    "nameLocations": [
                                        "4281:12:4"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 1076,
                                    "src": "4281:12:4"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "4281:12:4"
                            }
                        ],
                        "name": "start_lottery",
                        "nameLocation": "4258:13:4",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 293,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "4271:2:4"
                        },
                        "returnParameters": {
                            "id": 296,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "4294:0:4"
                        },
                        "scope": 924,
                        "src": "4249:494:4",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 400,
                            "nodeType": "Block",
                            "src": "4792:687:4",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_enum$_LOTTERY_STATE_$116",
                                                    "typeString": "enum MyLottery.LOTTERY_STATE"
                                                },
                                                "id": 348,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 345,
                                                    "name": "lottery_state",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 119,
                                                    "src": "4810:13:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$116",
                                                        "typeString": "enum MyLottery.LOTTERY_STATE"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                    "expression": {
                                                        "id": 346,
                                                        "name": "LOTTERY_STATE",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 116,
                                                        "src": "4827:13:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$116_$",
                                                            "typeString": "type(enum MyLottery.LOTTERY_STATE)"
                                                        }
                                                    },
                                                    "id": 347,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberLocation": "4841:4:4",
                                                    "memberName": "OPEN",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 113,
                                                    "src": "4827:18:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$116",
                                                        "typeString": "enum MyLottery.LOTTERY_STATE"
                                                    }
                                                },
                                                "src": "4810:35:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "4c6f7474657279204e6f742073746172746564",
                                                "id": 349,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "4847:21:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_59b9ae2af78a944fc7c743d60bb0157c373d3a4689f86567d16ecbd7d6fe94f4",
                                                    "typeString": "literal_string \"Lottery Not started\""
                                                },
                                                "value": "Lottery Not started"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_59b9ae2af78a944fc7c743d60bb0157c373d3a4689f86567d16ecbd7d6fe94f4",
                                                    "typeString": "literal_string \"Lottery Not started\""
                                                }
                                            ],
                                            "id": 344,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                -18,
                                                -18
                                            ],
                                            "referencedDeclaration": -18,
                                            "src": "4802:7:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 350,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4802:67:4",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 351,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4802:67:4"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_enum$_EMERGENCY_$122",
                                                    "typeString": "enum MyLottery.EMERGENCY"
                                                },
                                                "id": 356,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 353,
                                                    "name": "emergency",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 125,
                                                    "src": "4887:9:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_enum$_EMERGENCY_$122",
                                                        "typeString": "enum MyLottery.EMERGENCY"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                    "expression": {
                                                        "id": 354,
                                                        "name": "EMERGENCY",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 122,
                                                        "src": "4900:9:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_enum$_EMERGENCY_$122_$",
                                                            "typeString": "type(enum MyLottery.EMERGENCY)"
                                                        }
                                                    },
                                                    "id": 355,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberLocation": "4910:11:4",
                                                    "memberName": "NOT_STOPPED",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 121,
                                                    "src": "4900:21:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_enum$_EMERGENCY_$122",
                                                        "typeString": "enum MyLottery.EMERGENCY"
                                                    }
                                                },
                                                "src": "4887:34:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "4c6f74746572792053746f70706564",
                                                "id": 357,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "4923:17:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_0f8669caf5886a57764c35e07aa907034f7333a8c64b85e82e330c678f3eff52",
                                                    "typeString": "literal_string \"Lottery Stopped\""
                                                },
                                                "value": "Lottery Stopped"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_0f8669caf5886a57764c35e07aa907034f7333a8c64b85e82e330c678f3eff52",
                                                    "typeString": "literal_string \"Lottery Stopped\""
                                                }
                                            ],
                                            "id": 352,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                -18,
                                                -18
                                            ],
                                            "referencedDeclaration": -18,
                                            "src": "4879:7:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 358,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4879:62:4",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 359,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4879:62:4"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 367,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "expression": {
                                                        "id": 361,
                                                        "name": "block",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": -4,
                                                        "src": "4972:5:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_block",
                                                            "typeString": "block"
                                                        }
                                                    },
                                                    "id": 362,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberLocation": "4978:9:4",
                                                    "memberName": "timestamp",
                                                    "nodeType": "MemberAccess",
                                                    "src": "4972:15:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": ">",
                                                "rightExpression": {
                                                    "components": [
                                                        {
                                                            "commonType": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            },
                                                            "id": 365,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftExpression": {
                                                                "id": 363,
                                                                "name": "lotteryStart",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 104,
                                                                "src": "4991:12:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            },
                                                            "nodeType": "BinaryOperation",
                                                            "operator": "+",
                                                            "rightExpression": {
                                                                "id": 364,
                                                                "name": "lotteryDuration",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 108,
                                                                "src": "5006:15:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            },
                                                            "src": "4991:30:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        }
                                                    ],
                                                    "id": 366,
                                                    "isConstant": false,
                                                    "isInlineArray": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "TupleExpression",
                                                    "src": "4990:32:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "4972:50:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "6d696e206c6f7474657279206475726174696f6e206e6f7420706173736564",
                                                "id": 368,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "5036:33:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_f7f296de8cd88a125ebac456b653a90a0e9b7bda92c5e8cc3362ac1d92e969d9",
                                                    "typeString": "literal_string \"min lottery duration not passed\""
                                                },
                                                "value": "min lottery duration not passed"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_f7f296de8cd88a125ebac456b653a90a0e9b7bda92c5e8cc3362ac1d92e969d9",
                                                    "typeString": "literal_string \"min lottery duration not passed\""
                                                }
                                            ],
                                            "id": 360,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                -18,
                                                -18
                                            ],
                                            "referencedDeclaration": -18,
                                            "src": "4951:7:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 369,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4951:128:4",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 370,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4951:128:4"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 378,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "expression": {
                                                        "expression": {
                                                            "components": [
                                                                {
                                                                    "expression": {
                                                                        "id": 372,
                                                                        "name": "msg",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": -15,
                                                                        "src": "5098:3:4",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_magic_message",
                                                                            "typeString": "msg"
                                                                        }
                                                                    },
                                                                    "id": 373,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "memberLocation": "5102:6:4",
                                                                    "memberName": "sender",
                                                                    "nodeType": "MemberAccess",
                                                                    "src": "5098:10:4",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                    }
                                                                }
                                                            ],
                                                            "id": 374,
                                                            "isConstant": false,
                                                            "isInlineArray": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "nodeType": "TupleExpression",
                                                            "src": "5097:12:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "id": 375,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberLocation": "5110:4:4",
                                                        "memberName": "code",
                                                        "nodeType": "MemberAccess",
                                                        "src": "5097:17:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes_memory_ptr",
                                                            "typeString": "bytes memory"
                                                        }
                                                    },
                                                    "id": 376,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberLocation": "5115:6:4",
                                                    "memberName": "length",
                                                    "nodeType": "MemberAccess",
                                                    "src": "5097:24:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "<=",
                                                "rightExpression": {
                                                    "hexValue": "30",
                                                    "id": 377,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "5125:1:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_0_by_1",
                                                        "typeString": "int_const 0"
                                                    },
                                                    "value": "0"
                                                },
                                                "src": "5097:29:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "436f6e74726163742063616e6e6f7420656e746572",
                                                "id": 379,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "5128:23:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_598e1c2341bbebbb6aa55fead8db94fcb57a8d50553af9d607fcd9cf010d07dc",
                                                    "typeString": "literal_string \"Contract cannot enter\""
                                                },
                                                "value": "Contract cannot enter"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_598e1c2341bbebbb6aa55fead8db94fcb57a8d50553af9d607fcd9cf010d07dc",
                                                    "typeString": "literal_string \"Contract cannot enter\""
                                                }
                                            ],
                                            "id": 371,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                -18,
                                                -18
                                            ],
                                            "referencedDeclaration": -18,
                                            "src": "5089:7:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 380,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "5089:63:4",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 381,
                                    "nodeType": "ExpressionStatement",
                                    "src": "5089:63:4"
                                },
                                {
                                    "condition": {
                                        "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        },
                                        "id": 385,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "expression": {
                                                "id": 382,
                                                "name": "players",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 78,
                                                "src": "5221:7:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                                    "typeString": "address payable[] storage ref"
                                                }
                                            },
                                            "id": 383,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "5229:6:4",
                                            "memberName": "length",
                                            "nodeType": "MemberAccess",
                                            "src": "5221:14:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "<",
                                        "rightExpression": {
                                            "id": 384,
                                            "name": "minumumParticipants",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 84,
                                            "src": "5238:19:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "5221:36:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "falseBody": {
                                        "id": 398,
                                        "nodeType": "Block",
                                        "src": "5314:105:4",
                                        "statements": [
                                            {
                                                "expression": {
                                                    "id": 393,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftHandSide": {
                                                        "id": 390,
                                                        "name": "lottery_state",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 119,
                                                        "src": "5328:13:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_enum$_LOTTERY_STATE_$116",
                                                            "typeString": "enum MyLottery.LOTTERY_STATE"
                                                        }
                                                    },
                                                    "nodeType": "Assignment",
                                                    "operator": "=",
                                                    "rightHandSide": {
                                                        "expression": {
                                                            "id": 391,
                                                            "name": "LOTTERY_STATE",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 116,
                                                            "src": "5344:13:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$116_$",
                                                                "typeString": "type(enum MyLottery.LOTTERY_STATE)"
                                                            }
                                                        },
                                                        "id": 392,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "memberLocation": "5358:18:4",
                                                        "memberName": "CALCULATING_WINNER",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 115,
                                                        "src": "5344:32:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_enum$_LOTTERY_STATE_$116",
                                                            "typeString": "enum MyLottery.LOTTERY_STATE"
                                                        }
                                                    },
                                                    "src": "5328:48:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$116",
                                                        "typeString": "enum MyLottery.LOTTERY_STATE"
                                                    }
                                                },
                                                "id": 394,
                                                "nodeType": "ExpressionStatement",
                                                "src": "5328:48:4"
                                            },
                                            {
                                                "expression": {
                                                    "arguments": [],
                                                    "expression": {
                                                        "argumentTypes": [],
                                                        "id": 395,
                                                        "name": "calculate_winner",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 435,
                                                        "src": "5390:16:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                                            "typeString": "function ()"
                                                        }
                                                    },
                                                    "id": 396,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "nameLocations": [],
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "5390:18:4",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_tuple$__$",
                                                        "typeString": "tuple()"
                                                    }
                                                },
                                                "id": 397,
                                                "nodeType": "ExpressionStatement",
                                                "src": "5390:18:4"
                                            }
                                        ]
                                    },
                                    "id": 399,
                                    "nodeType": "IfStatement",
                                    "src": "5217:202:4",
                                    "trueBody": {
                                        "id": 389,
                                        "nodeType": "Block",
                                        "src": "5259:49:4",
                                        "statements": [
                                            {
                                                "expression": {
                                                    "arguments": [],
                                                    "expression": {
                                                        "argumentTypes": [],
                                                        "id": 386,
                                                        "name": "not_enough_participant",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 860,
                                                        "src": "5273:22:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                                            "typeString": "function ()"
                                                        }
                                                    },
                                                    "id": 387,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "nameLocations": [],
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "5273:24:4",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_tuple$__$",
                                                        "typeString": "tuple()"
                                                    }
                                                },
                                                "id": 388,
                                                "nodeType": "ExpressionStatement",
                                                "src": "5273:24:4"
                                            }
                                        ]
                                    }
                                }
                            ]
                        },
                        "functionSelector": "d718aea9",
                        "id": 401,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 342,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 341,
                                    "name": "nonReentrant",
                                    "nameLocations": [
                                        "4779:12:4"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 1076,
                                    "src": "4779:12:4"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "4779:12:4"
                            }
                        ],
                        "name": "end_lottery",
                        "nameLocation": "4758:11:4",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 340,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "4769:2:4"
                        },
                        "returnParameters": {
                            "id": 343,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "4792:0:4"
                        },
                        "scope": 924,
                        "src": "4749:730:4",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 434,
                            "nodeType": "Block",
                            "src": "5842:511:4",
                            "statements": [
                                {
                                    "expression": {
                                        "id": 429,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 404,
                                            "name": "randomness",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 82,
                                            "src": "5929:10:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "arguments": [
                                                {
                                                    "arguments": [
                                                        {
                                                            "arguments": [
                                                                {
                                                                    "baseExpression": {
                                                                        "id": 410,
                                                                        "name": "players",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 78,
                                                                        "src": "6028:7:4",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                                                            "typeString": "address payable[] storage ref"
                                                                        }
                                                                    },
                                                                    "id": 412,
                                                                    "indexExpression": {
                                                                        "hexValue": "30",
                                                                        "id": 411,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": true,
                                                                        "kind": "number",
                                                                        "lValueRequested": false,
                                                                        "nodeType": "Literal",
                                                                        "src": "6036:1:4",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_rational_0_by_1",
                                                                            "typeString": "int_const 0"
                                                                        },
                                                                        "value": "0"
                                                                    },
                                                                    "isConstant": false,
                                                                    "isLValue": true,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "nodeType": "IndexAccess",
                                                                    "src": "6028:10:4",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address_payable",
                                                                        "typeString": "address payable"
                                                                    }
                                                                },
                                                                {
                                                                    "baseExpression": {
                                                                        "id": 413,
                                                                        "name": "players",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 78,
                                                                        "src": "6073:7:4",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                                                            "typeString": "address payable[] storage ref"
                                                                        }
                                                                    },
                                                                    "id": 415,
                                                                    "indexExpression": {
                                                                        "hexValue": "31",
                                                                        "id": 414,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": true,
                                                                        "kind": "number",
                                                                        "lValueRequested": false,
                                                                        "nodeType": "Literal",
                                                                        "src": "6081:1:4",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_rational_1_by_1",
                                                                            "typeString": "int_const 1"
                                                                        },
                                                                        "value": "1"
                                                                    },
                                                                    "isConstant": false,
                                                                    "isLValue": true,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "nodeType": "IndexAccess",
                                                                    "src": "6073:10:4",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address_payable",
                                                                        "typeString": "address payable"
                                                                    }
                                                                },
                                                                {
                                                                    "baseExpression": {
                                                                        "id": 416,
                                                                        "name": "players",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 78,
                                                                        "src": "6105:7:4",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                                                            "typeString": "address payable[] storage ref"
                                                                        }
                                                                    },
                                                                    "id": 421,
                                                                    "indexExpression": {
                                                                        "commonType": {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        },
                                                                        "id": 420,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "lValueRequested": false,
                                                                        "leftExpression": {
                                                                            "expression": {
                                                                                "id": 417,
                                                                                "name": "players",
                                                                                "nodeType": "Identifier",
                                                                                "overloadedDeclarations": [],
                                                                                "referencedDeclaration": 78,
                                                                                "src": "6113:7:4",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                                                                    "typeString": "address payable[] storage ref"
                                                                                }
                                                                            },
                                                                            "id": 418,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": false,
                                                                            "lValueRequested": false,
                                                                            "memberLocation": "6121:6:4",
                                                                            "memberName": "length",
                                                                            "nodeType": "MemberAccess",
                                                                            "src": "6113:14:4",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_uint256",
                                                                                "typeString": "uint256"
                                                                            }
                                                                        },
                                                                        "nodeType": "BinaryOperation",
                                                                        "operator": "-",
                                                                        "rightExpression": {
                                                                            "hexValue": "31",
                                                                            "id": 419,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": true,
                                                                            "kind": "number",
                                                                            "lValueRequested": false,
                                                                            "nodeType": "Literal",
                                                                            "src": "6130:1:4",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_rational_1_by_1",
                                                                                "typeString": "int_const 1"
                                                                            },
                                                                            "value": "1"
                                                                        },
                                                                        "src": "6113:18:4",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        }
                                                                    },
                                                                    "isConstant": false,
                                                                    "isLValue": true,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "nodeType": "IndexAccess",
                                                                    "src": "6105:27:4",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address_payable",
                                                                        "typeString": "address payable"
                                                                    }
                                                                },
                                                                {
                                                                    "expression": {
                                                                        "id": 422,
                                                                        "name": "block",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": -4,
                                                                        "src": "6154:5:4",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_magic_block",
                                                                            "typeString": "block"
                                                                        }
                                                                    },
                                                                    "id": 423,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "memberLocation": "6160:10:4",
                                                                    "memberName": "difficulty",
                                                                    "nodeType": "MemberAccess",
                                                                    "src": "6154:16:4",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    }
                                                                },
                                                                {
                                                                    "expression": {
                                                                        "id": 424,
                                                                        "name": "block",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": -4,
                                                                        "src": "6238:5:4",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_magic_block",
                                                                            "typeString": "block"
                                                                        }
                                                                    },
                                                                    "id": 425,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "memberLocation": "6244:9:4",
                                                                    "memberName": "timestamp",
                                                                    "nodeType": "MemberAccess",
                                                                    "src": "6238:15:4",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    }
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_address_payable",
                                                                        "typeString": "address payable"
                                                                    },
                                                                    {
                                                                        "typeIdentifier": "t_address_payable",
                                                                        "typeString": "address payable"
                                                                    },
                                                                    {
                                                                        "typeIdentifier": "t_address_payable",
                                                                        "typeString": "address payable"
                                                                    },
                                                                    {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    },
                                                                    {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "id": 408,
                                                                    "name": "abi",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": -1,
                                                                    "src": "5990:3:4",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_magic_abi",
                                                                        "typeString": "abi"
                                                                    }
                                                                },
                                                                "id": 409,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "lValueRequested": false,
                                                                "memberLocation": "5994:12:4",
                                                                "memberName": "encodePacked",
                                                                "nodeType": "MemberAccess",
                                                                "src": "5990:16:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                                                    "typeString": "function () pure returns (bytes memory)"
                                                                }
                                                            },
                                                            "id": 426,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "nameLocations": [],
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "5990:309:4",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bytes_memory_ptr",
                                                                "typeString": "bytes memory"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_bytes_memory_ptr",
                                                                "typeString": "bytes memory"
                                                            }
                                                        ],
                                                        "id": 407,
                                                        "name": "keccak256",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": -8,
                                                        "src": "5963:9:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                                            "typeString": "function (bytes memory) pure returns (bytes32)"
                                                        }
                                                    },
                                                    "id": 427,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "nameLocations": [],
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "5963:350:4",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bytes32",
                                                        "typeString": "bytes32"
                                                    }
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_bytes32",
                                                        "typeString": "bytes32"
                                                    }
                                                ],
                                                "id": 406,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "ElementaryTypeNameExpression",
                                                "src": "5942:7:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_uint256_$",
                                                    "typeString": "type(uint256)"
                                                },
                                                "typeName": {
                                                    "id": 405,
                                                    "name": "uint256",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "5942:7:4",
                                                    "typeDescriptions": {}
                                                }
                                            },
                                            "id": 428,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "5942:381:4",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "5929:394:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 430,
                                    "nodeType": "ExpressionStatement",
                                    "src": "5929:394:4"
                                },
                                {
                                    "expression": {
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "id": 431,
                                            "name": "afterFinish",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 701,
                                            "src": "6333:11:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                                "typeString": "function ()"
                                            }
                                        },
                                        "id": 432,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "6333:13:4",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 433,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6333:13:4"
                                }
                            ]
                        },
                        "id": 435,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "calculate_winner",
                        "nameLocation": "5814:16:4",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 402,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "5830:2:4"
                        },
                        "returnParameters": {
                            "id": 403,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "5842:0:4"
                        },
                        "scope": 924,
                        "src": "5805:548:4",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "internal"
                    },
                    {
                        "body": {
                            "id": 484,
                            "nodeType": "Block",
                            "src": "6506:434:4",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_enum$_LOTTERY_STATE_$116",
                                                    "typeString": "enum MyLottery.LOTTERY_STATE"
                                                },
                                                "id": 450,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 447,
                                                    "name": "lottery_state",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 119,
                                                    "src": "6537:13:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$116",
                                                        "typeString": "enum MyLottery.LOTTERY_STATE"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                    "expression": {
                                                        "id": 448,
                                                        "name": "LOTTERY_STATE",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 116,
                                                        "src": "6554:13:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$116_$",
                                                            "typeString": "type(enum MyLottery.LOTTERY_STATE)"
                                                        }
                                                    },
                                                    "id": 449,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberLocation": "6568:6:4",
                                                    "memberName": "CLOSED",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 114,
                                                    "src": "6554:20:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$116",
                                                        "typeString": "enum MyLottery.LOTTERY_STATE"
                                                    }
                                                },
                                                "src": "6537:37:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "43616e204e6f74207768696c65206c6f7474657279206f6e676f696e67",
                                                "id": 451,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "6588:31:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_b70540337450fef93869ea887ea40f00d8d4c9d4336bf28b8a7afba6c94d1437",
                                                    "typeString": "literal_string \"Can Not while lottery ongoing\""
                                                },
                                                "value": "Can Not while lottery ongoing"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_b70540337450fef93869ea887ea40f00d8d4c9d4336bf28b8a7afba6c94d1437",
                                                    "typeString": "literal_string \"Can Not while lottery ongoing\""
                                                }
                                            ],
                                            "id": 446,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                -18,
                                                -18
                                            ],
                                            "referencedDeclaration": -18,
                                            "src": "6516:7:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 452,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "6516:113:4",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 453,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6516:113:4"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 461,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "commonType": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    },
                                                    "id": 459,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                        "commonType": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        },
                                                        "id": 457,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "id": 455,
                                                            "name": "_pricePercent",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 437,
                                                            "src": "6660:13:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "+",
                                                        "rightExpression": {
                                                            "id": 456,
                                                            "name": "_ownerPercent",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 439,
                                                            "src": "6676:13:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "src": "6660:29:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "+",
                                                    "rightExpression": {
                                                        "id": 458,
                                                        "name": "_contractPercent",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 441,
                                                        "src": "6692:16:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "src": "6660:48:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "<=",
                                                "rightExpression": {
                                                    "hexValue": "313030",
                                                    "id": 460,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "6712:3:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_100_by_1",
                                                        "typeString": "int_const 100"
                                                    },
                                                    "value": "100"
                                                },
                                                "src": "6660:55:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "63616e206e6f74206f76657220313030",
                                                "id": 462,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "6729:18:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_8d15d6626eb5bcbf0af7b1610f8f7e5cbac4dae9613582ff6e4d6f34a92d9802",
                                                    "typeString": "literal_string \"can not over 100\""
                                                },
                                                "value": "can not over 100"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_8d15d6626eb5bcbf0af7b1610f8f7e5cbac4dae9613582ff6e4d6f34a92d9802",
                                                    "typeString": "literal_string \"can not over 100\""
                                                }
                                            ],
                                            "id": 454,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                -18,
                                                -18
                                            ],
                                            "referencedDeclaration": -18,
                                            "src": "6639:7:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 463,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "6639:118:4",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 464,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6639:118:4"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 468,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 466,
                                                    "name": "_pricePercent",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 437,
                                                    "src": "6775:13:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "<",
                                                "rightExpression": {
                                                    "hexValue": "3530",
                                                    "id": 467,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "6791:2:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_50_by_1",
                                                        "typeString": "int_const 50"
                                                    },
                                                    "value": "50"
                                                },
                                                "src": "6775:18:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "63616e206e6f74206c657373203530",
                                                "id": 469,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "6795:17:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_18154d65b3536c6b4be44752ffc5ee7b5de682a34850193a3fb7d196e570d107",
                                                    "typeString": "literal_string \"can not less 50\""
                                                },
                                                "value": "can not less 50"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_18154d65b3536c6b4be44752ffc5ee7b5de682a34850193a3fb7d196e570d107",
                                                    "typeString": "literal_string \"can not less 50\""
                                                }
                                            ],
                                            "id": 465,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                -18,
                                                -18
                                            ],
                                            "referencedDeclaration": -18,
                                            "src": "6767:7:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 470,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "6767:46:4",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 471,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6767:46:4"
                                },
                                {
                                    "expression": {
                                        "id": 474,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 472,
                                            "name": "pricePercent",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 94,
                                            "src": "6823:12:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "id": 473,
                                            "name": "_pricePercent",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 437,
                                            "src": "6838:13:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "6823:28:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 475,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6823:28:4"
                                },
                                {
                                    "expression": {
                                        "id": 478,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 476,
                                            "name": "ownerPercent",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 96,
                                            "src": "6861:12:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "id": 477,
                                            "name": "_ownerPercent",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 439,
                                            "src": "6876:13:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "6861:28:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 479,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6861:28:4"
                                },
                                {
                                    "expression": {
                                        "id": 482,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 480,
                                            "name": "contractPercent",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 98,
                                            "src": "6899:15:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "id": 481,
                                            "name": "_contractPercent",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 441,
                                            "src": "6917:16:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "6899:34:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 483,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6899:34:4"
                                }
                            ]
                        },
                        "functionSelector": "f2640e10",
                        "id": 485,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 444,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 443,
                                    "name": "onlyOwner",
                                    "nameLocations": [
                                        "6496:9:4"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 956,
                                    "src": "6496:9:4"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "6496:9:4"
                            }
                        ],
                        "name": "setPrizePercents",
                        "nameLocation": "6368:16:4",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 442,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 437,
                                    "mutability": "mutable",
                                    "name": "_pricePercent",
                                    "nameLocation": "6402:13:4",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 485,
                                    "src": "6394:21:4",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 436,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "6394:7:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 439,
                                    "mutability": "mutable",
                                    "name": "_ownerPercent",
                                    "nameLocation": "6433:13:4",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 485,
                                    "src": "6425:21:4",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 438,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "6425:7:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 441,
                                    "mutability": "mutable",
                                    "name": "_contractPercent",
                                    "nameLocation": "6464:16:4",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 485,
                                    "src": "6456:24:4",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 440,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "6456:7:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "6384:102:4"
                        },
                        "returnParameters": {
                            "id": 445,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "6506:0:4"
                        },
                        "scope": 924,
                        "src": "6359:581:4",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "body": {
                            "id": 496,
                            "nodeType": "Block",
                            "src": "7047:59:4",
                            "statements": [
                                {
                                    "expression": {
                                        "id": 494,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 492,
                                            "name": "minumumParticipants",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 84,
                                            "src": "7057:19:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "id": 493,
                                            "name": "_minumumParticipants",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 487,
                                            "src": "7079:20:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "7057:42:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 495,
                                    "nodeType": "ExpressionStatement",
                                    "src": "7057:42:4"
                                }
                            ]
                        },
                        "functionSelector": "b4989917",
                        "id": 497,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 490,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 489,
                                    "name": "onlyOwner",
                                    "nameLocations": [
                                        "7033:9:4"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 956,
                                    "src": "7033:9:4"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "7033:9:4"
                            }
                        ],
                        "name": "setMinumumParticipants",
                        "nameLocation": "6955:22:4",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 488,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 487,
                                    "mutability": "mutable",
                                    "name": "_minumumParticipants",
                                    "nameLocation": "6986:20:4",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 497,
                                    "src": "6978:28:4",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 486,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "6978:7:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "6977:30:4"
                        },
                        "returnParameters": {
                            "id": 491,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "7047:0:4"
                        },
                        "scope": 924,
                        "src": "6946:160:4",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "body": {
                            "id": 508,
                            "nodeType": "Block",
                            "src": "7178:44:4",
                            "statements": [
                                {
                                    "expression": {
                                        "id": 506,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 504,
                                            "name": "lotteryDuration",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 108,
                                            "src": "7188:15:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "id": 505,
                                            "name": "_duration",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 499,
                                            "src": "7206:9:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "7188:27:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 507,
                                    "nodeType": "ExpressionStatement",
                                    "src": "7188:27:4"
                                }
                            ]
                        },
                        "functionSelector": "2b58150b",
                        "id": 509,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 502,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 501,
                                    "name": "onlyOwner",
                                    "nameLocations": [
                                        "7168:9:4"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 956,
                                    "src": "7168:9:4"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "7168:9:4"
                            }
                        ],
                        "name": "setLotteryDuration",
                        "nameLocation": "7121:18:4",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 500,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 499,
                                    "mutability": "mutable",
                                    "name": "_duration",
                                    "nameLocation": "7148:9:4",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 509,
                                    "src": "7140:17:4",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 498,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7140:7:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "7139:19:4"
                        },
                        "returnParameters": {
                            "id": 503,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "7178:0:4"
                        },
                        "scope": 924,
                        "src": "7112:110:4",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "body": {
                            "id": 519,
                            "nodeType": "Block",
                            "src": "7275:50:4",
                            "statements": [
                                {
                                    "expression": {
                                        "id": 517,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 514,
                                            "name": "emergency",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 125,
                                            "src": "7285:9:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_enum$_EMERGENCY_$122",
                                                "typeString": "enum MyLottery.EMERGENCY"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "expression": {
                                                "id": 515,
                                                "name": "EMERGENCY",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 122,
                                                "src": "7297:9:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_enum$_EMERGENCY_$122_$",
                                                    "typeString": "type(enum MyLottery.EMERGENCY)"
                                                }
                                            },
                                            "id": 516,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberLocation": "7307:11:4",
                                            "memberName": "NOT_STOPPED",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 121,
                                            "src": "7297:21:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_enum$_EMERGENCY_$122",
                                                "typeString": "enum MyLottery.EMERGENCY"
                                            }
                                        },
                                        "src": "7285:33:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_EMERGENCY_$122",
                                            "typeString": "enum MyLottery.EMERGENCY"
                                        }
                                    },
                                    "id": 518,
                                    "nodeType": "ExpressionStatement",
                                    "src": "7285:33:4"
                                }
                            ]
                        },
                        "functionSelector": "6531e5c4",
                        "id": 520,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 512,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 511,
                                    "name": "onlyOwner",
                                    "nameLocations": [
                                        "7265:9:4"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 956,
                                    "src": "7265:9:4"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "7265:9:4"
                            }
                        ],
                        "name": "setEmergencyOpen",
                        "nameLocation": "7237:16:4",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 510,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "7253:2:4"
                        },
                        "returnParameters": {
                            "id": 513,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "7275:0:4"
                        },
                        "scope": 924,
                        "src": "7228:97:4",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "body": {
                            "id": 530,
                            "nodeType": "Block",
                            "src": "7379:46:4",
                            "statements": [
                                {
                                    "expression": {
                                        "id": 528,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 525,
                                            "name": "emergency",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 125,
                                            "src": "7389:9:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_enum$_EMERGENCY_$122",
                                                "typeString": "enum MyLottery.EMERGENCY"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "expression": {
                                                "id": 526,
                                                "name": "EMERGENCY",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 122,
                                                "src": "7401:9:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_enum$_EMERGENCY_$122_$",
                                                    "typeString": "type(enum MyLottery.EMERGENCY)"
                                                }
                                            },
                                            "id": 527,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberLocation": "7411:7:4",
                                            "memberName": "STOPPED",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 120,
                                            "src": "7401:17:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_enum$_EMERGENCY_$122",
                                                "typeString": "enum MyLottery.EMERGENCY"
                                            }
                                        },
                                        "src": "7389:29:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_EMERGENCY_$122",
                                            "typeString": "enum MyLottery.EMERGENCY"
                                        }
                                    },
                                    "id": 529,
                                    "nodeType": "ExpressionStatement",
                                    "src": "7389:29:4"
                                }
                            ]
                        },
                        "functionSelector": "1b30d5df",
                        "id": 531,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 523,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 522,
                                    "name": "onlyOwner",
                                    "nameLocations": [
                                        "7369:9:4"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 956,
                                    "src": "7369:9:4"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "7369:9:4"
                            }
                        ],
                        "name": "setEmergencyClose",
                        "nameLocation": "7340:17:4",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 521,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "7357:2:4"
                        },
                        "returnParameters": {
                            "id": 524,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "7379:0:4"
                        },
                        "scope": 924,
                        "src": "7331:94:4",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "body": {
                            "id": 550,
                            "nodeType": "Block",
                            "src": "7493:160:4",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_enum$_LOTTERY_STATE_$116",
                                                    "typeString": "enum MyLottery.LOTTERY_STATE"
                                                },
                                                "id": 542,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 539,
                                                    "name": "lottery_state",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 119,
                                                    "src": "7524:13:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$116",
                                                        "typeString": "enum MyLottery.LOTTERY_STATE"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                    "expression": {
                                                        "id": 540,
                                                        "name": "LOTTERY_STATE",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 116,
                                                        "src": "7541:13:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$116_$",
                                                            "typeString": "type(enum MyLottery.LOTTERY_STATE)"
                                                        }
                                                    },
                                                    "id": 541,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberLocation": "7555:6:4",
                                                    "memberName": "CLOSED",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 114,
                                                    "src": "7541:20:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$116",
                                                        "typeString": "enum MyLottery.LOTTERY_STATE"
                                                    }
                                                },
                                                "src": "7524:37:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "43616e204e6f74207768696c65206c6f7474657279206f6e676f696e67",
                                                "id": 543,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "7575:31:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_b70540337450fef93869ea887ea40f00d8d4c9d4336bf28b8a7afba6c94d1437",
                                                    "typeString": "literal_string \"Can Not while lottery ongoing\""
                                                },
                                                "value": "Can Not while lottery ongoing"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_b70540337450fef93869ea887ea40f00d8d4c9d4336bf28b8a7afba6c94d1437",
                                                    "typeString": "literal_string \"Can Not while lottery ongoing\""
                                                }
                                            ],
                                            "id": 538,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                -18,
                                                -18
                                            ],
                                            "referencedDeclaration": -18,
                                            "src": "7503:7:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 544,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "7503:113:4",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 545,
                                    "nodeType": "ExpressionStatement",
                                    "src": "7503:113:4"
                                },
                                {
                                    "expression": {
                                        "id": 548,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 546,
                                            "name": "EntryFee",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 88,
                                            "src": "7626:8:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "id": 547,
                                            "name": "_entryFee",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 533,
                                            "src": "7637:9:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "7626:20:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 549,
                                    "nodeType": "ExpressionStatement",
                                    "src": "7626:20:4"
                                }
                            ]
                        },
                        "functionSelector": "fe56f5a0",
                        "id": 551,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 536,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 535,
                                    "name": "onlyOwner",
                                    "nameLocations": [
                                        "7483:9:4"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 956,
                                    "src": "7483:9:4"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "7483:9:4"
                            }
                        ],
                        "name": "setEntranceFee",
                        "nameLocation": "7440:14:4",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 534,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 533,
                                    "mutability": "mutable",
                                    "name": "_entryFee",
                                    "nameLocation": "7463:9:4",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 551,
                                    "src": "7455:17:4",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 532,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7455:7:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "7454:19:4"
                        },
                        "returnParameters": {
                            "id": 537,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "7493:0:4"
                        },
                        "scope": 924,
                        "src": "7431:222:4",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "body": {
                            "id": 562,
                            "nodeType": "Block",
                            "src": "7760:59:4",
                            "statements": [
                                {
                                    "expression": {
                                        "id": 560,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 558,
                                            "name": "maximumParticipants",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 86,
                                            "src": "7770:19:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "id": 559,
                                            "name": "_maximumParticipants",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 553,
                                            "src": "7792:20:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "7770:42:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 561,
                                    "nodeType": "ExpressionStatement",
                                    "src": "7770:42:4"
                                }
                            ]
                        },
                        "functionSelector": "56923710",
                        "id": 563,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 556,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 555,
                                    "name": "onlyOwner",
                                    "nameLocations": [
                                        "7746:9:4"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 956,
                                    "src": "7746:9:4"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "7746:9:4"
                            }
                        ],
                        "name": "setMaximumParticipants",
                        "nameLocation": "7668:22:4",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 554,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 553,
                                    "mutability": "mutable",
                                    "name": "_maximumParticipants",
                                    "nameLocation": "7699:20:4",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 563,
                                    "src": "7691:28:4",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 552,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7691:7:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "7690:30:4"
                        },
                        "returnParameters": {
                            "id": 557,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "7760:0:4"
                        },
                        "scope": 924,
                        "src": "7659:160:4",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "body": {
                            "id": 584,
                            "nodeType": "Block",
                            "src": "7934:135:4",
                            "statements": [
                                {
                                    "assignments": [
                                        571
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 571,
                                            "mutability": "mutable",
                                            "name": "balance",
                                            "nameLocation": "7952:7:4",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 584,
                                            "src": "7944:15:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 570,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "7944:7:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 581,
                                    "initialValue": {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "id": 578,
                                                        "name": "this",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": -28,
                                                        "src": "8023:4:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_MyLottery_$924",
                                                            "typeString": "contract MyLottery"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_contract$_MyLottery_$924",
                                                            "typeString": "contract MyLottery"
                                                        }
                                                    ],
                                                    "id": 577,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "8015:7:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_$",
                                                        "typeString": "type(address)"
                                                    },
                                                    "typeName": {
                                                        "id": 576,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "8015:7:4",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 579,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "8015:13:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            ],
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "id": 573,
                                                        "name": "_tokenContractAddress",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 565,
                                                        "src": "7969:21:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 572,
                                                    "name": "IERC20",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 71,
                                                    "src": "7962:6:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$71_$",
                                                        "typeString": "type(contract IERC20)"
                                                    }
                                                },
                                                "id": 574,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "7962:29:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IERC20_$71",
                                                    "typeString": "contract IERC20"
                                                }
                                            },
                                            "id": 575,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "7992:9:4",
                                            "memberName": "balanceOf",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 16,
                                            "src": "7962:39:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                                "typeString": "function (address) view external returns (uint256)"
                                            }
                                        },
                                        "id": 580,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "7962:76:4",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "7944:94:4"
                                },
                                {
                                    "expression": {
                                        "id": 582,
                                        "name": "balance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 571,
                                        "src": "8055:7:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "functionReturnParameters": 569,
                                    "id": 583,
                                    "nodeType": "Return",
                                    "src": "8048:14:4"
                                }
                            ]
                        },
                        "functionSelector": "f8b2cb4f",
                        "id": 585,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "getBalance",
                        "nameLocation": "7834:10:4",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 566,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 565,
                                    "mutability": "mutable",
                                    "name": "_tokenContractAddress",
                                    "nameLocation": "7853:21:4",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 585,
                                    "src": "7845:29:4",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 564,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7845:7:4",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "7844:31:4"
                        },
                        "returnParameters": {
                            "id": 569,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 568,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 585,
                                    "src": "7921:7:4",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 567,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7921:7:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "7920:9:4"
                        },
                        "scope": 924,
                        "src": "7825:244:4",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 611,
                            "nodeType": "Block",
                            "src": "8116:191:4",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_enum$_LOTTERY_STATE_$116",
                                                    "typeString": "enum MyLottery.LOTTERY_STATE"
                                                },
                                                "id": 594,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 591,
                                                    "name": "lottery_state",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 119,
                                                    "src": "8147:13:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$116",
                                                        "typeString": "enum MyLottery.LOTTERY_STATE"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                    "expression": {
                                                        "id": 592,
                                                        "name": "LOTTERY_STATE",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 116,
                                                        "src": "8164:13:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$116_$",
                                                            "typeString": "type(enum MyLottery.LOTTERY_STATE)"
                                                        }
                                                    },
                                                    "id": 593,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberLocation": "8178:6:4",
                                                    "memberName": "CLOSED",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 114,
                                                    "src": "8164:20:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$116",
                                                        "typeString": "enum MyLottery.LOTTERY_STATE"
                                                    }
                                                },
                                                "src": "8147:37:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "43616e204e6f74207768696c65206c6f7474657279206f6e676f696e67",
                                                "id": 595,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "8198:31:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_b70540337450fef93869ea887ea40f00d8d4c9d4336bf28b8a7afba6c94d1437",
                                                    "typeString": "literal_string \"Can Not while lottery ongoing\""
                                                },
                                                "value": "Can Not while lottery ongoing"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_b70540337450fef93869ea887ea40f00d8d4c9d4336bf28b8a7afba6c94d1437",
                                                    "typeString": "literal_string \"Can Not while lottery ongoing\""
                                                }
                                            ],
                                            "id": 590,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                -18,
                                                -18
                                            ],
                                            "referencedDeclaration": -18,
                                            "src": "8126:7:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 596,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "8126:113:4",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 597,
                                    "nodeType": "ExpressionStatement",
                                    "src": "8126:113:4"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "arguments": [
                                                        {
                                                            "id": 606,
                                                            "name": "this",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": -28,
                                                            "src": "8286:4:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_contract$_MyLottery_$924",
                                                                "typeString": "contract MyLottery"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_contract$_MyLottery_$924",
                                                                "typeString": "contract MyLottery"
                                                            }
                                                        ],
                                                        "id": 605,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "nodeType": "ElementaryTypeNameExpression",
                                                        "src": "8278:7:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_address_$",
                                                            "typeString": "type(address)"
                                                        },
                                                        "typeName": {
                                                            "id": 604,
                                                            "name": "address",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "8278:7:4",
                                                            "typeDescriptions": {}
                                                        }
                                                    },
                                                    "id": 607,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "nameLocations": [],
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "8278:13:4",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "id": 608,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "8292:7:4",
                                                "memberName": "balance",
                                                "nodeType": "MemberAccess",
                                                "src": "8278:21:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "expression": {
                                                            "id": 600,
                                                            "name": "msg",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": -15,
                                                            "src": "8257:3:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_magic_message",
                                                                "typeString": "msg"
                                                            }
                                                        },
                                                        "id": 601,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberLocation": "8261:6:4",
                                                        "memberName": "sender",
                                                        "nodeType": "MemberAccess",
                                                        "src": "8257:10:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 599,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "8249:8:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_payable_$",
                                                        "typeString": "type(address payable)"
                                                    },
                                                    "typeName": {
                                                        "id": 598,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "8249:8:4",
                                                        "stateMutability": "payable",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 602,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "8249:19:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            },
                                            "id": 603,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "8269:8:4",
                                            "memberName": "transfer",
                                            "nodeType": "MemberAccess",
                                            "src": "8249:28:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                                "typeString": "function (uint256)"
                                            }
                                        },
                                        "id": 609,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "8249:51:4",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 610,
                                    "nodeType": "ExpressionStatement",
                                    "src": "8249:51:4"
                                }
                            ]
                        },
                        "functionSelector": "bcdb446b",
                        "id": 612,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 588,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 587,
                                    "name": "onlyOwner",
                                    "nameLocations": [
                                        "8106:9:4"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 956,
                                    "src": "8106:9:4"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "8106:9:4"
                            }
                        ],
                        "name": "recoverEth",
                        "nameLocation": "8084:10:4",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 586,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "8094:2:4"
                        },
                        "returnParameters": {
                            "id": 589,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "8116:0:4"
                        },
                        "scope": 924,
                        "src": "8075:232:4",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "body": {
                            "id": 640,
                            "nodeType": "Block",
                            "src": "8377:120:4",
                            "statements": [
                                {
                                    "assignments": [
                                        621
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 621,
                                            "mutability": "mutable",
                                            "name": "token",
                                            "nameLocation": "8394:5:4",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 640,
                                            "src": "8387:12:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IERC20_$71",
                                                "typeString": "contract IERC20"
                                            },
                                            "typeName": {
                                                "id": 620,
                                                "nodeType": "UserDefinedTypeName",
                                                "pathNode": {
                                                    "id": 619,
                                                    "name": "IERC20",
                                                    "nameLocations": [
                                                        "8387:6:4"
                                                    ],
                                                    "nodeType": "IdentifierPath",
                                                    "referencedDeclaration": 71,
                                                    "src": "8387:6:4"
                                                },
                                                "referencedDeclaration": 71,
                                                "src": "8387:6:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IERC20_$71",
                                                    "typeString": "contract IERC20"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 625,
                                    "initialValue": {
                                        "arguments": [
                                            {
                                                "id": 623,
                                                "name": "tokenAddress",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 614,
                                                "src": "8409:12:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            ],
                                            "id": 622,
                                            "name": "IERC20",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 71,
                                            "src": "8402:6:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_IERC20_$71_$",
                                                "typeString": "type(contract IERC20)"
                                            }
                                        },
                                        "id": 624,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "8402:20:4",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$71",
                                            "typeString": "contract IERC20"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "8387:35:4"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "id": 629,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": -15,
                                                    "src": "8447:3:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 630,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "8451:6:4",
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "8447:10:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "arguments": [
                                                    {
                                                        "arguments": [
                                                            {
                                                                "id": 635,
                                                                "name": "this",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": -28,
                                                                "src": "8483:4:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_contract$_MyLottery_$924",
                                                                    "typeString": "contract MyLottery"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_contract$_MyLottery_$924",
                                                                    "typeString": "contract MyLottery"
                                                                }
                                                            ],
                                                            "id": 634,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "nodeType": "ElementaryTypeNameExpression",
                                                            "src": "8475:7:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_address_$",
                                                                "typeString": "type(address)"
                                                            },
                                                            "typeName": {
                                                                "id": 633,
                                                                "name": "address",
                                                                "nodeType": "ElementaryTypeName",
                                                                "src": "8475:7:4",
                                                                "typeDescriptions": {}
                                                            }
                                                        },
                                                        "id": 636,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "typeConversion",
                                                        "lValueRequested": false,
                                                        "nameLocations": [],
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "8475:13:4",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "id": 631,
                                                        "name": "token",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 621,
                                                        "src": "8459:5:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_IERC20_$71",
                                                            "typeString": "contract IERC20"
                                                        }
                                                    },
                                                    "id": 632,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberLocation": "8465:9:4",
                                                    "memberName": "balanceOf",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 16,
                                                    "src": "8459:15:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                                        "typeString": "function (address) view external returns (uint256)"
                                                    }
                                                },
                                                "id": 637,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "8459:30:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "id": 626,
                                                "name": "token",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 621,
                                                "src": "8432:5:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IERC20_$71",
                                                    "typeString": "contract IERC20"
                                                }
                                            },
                                            "id": 628,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "8438:8:4",
                                            "memberName": "transfer",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 25,
                                            "src": "8432:14:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                                "typeString": "function (address,uint256) external returns (bool)"
                                            }
                                        },
                                        "id": 638,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "8432:58:4",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 639,
                                    "nodeType": "ExpressionStatement",
                                    "src": "8432:58:4"
                                }
                            ]
                        },
                        "functionSelector": "16114acd",
                        "id": 641,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 617,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 616,
                                    "name": "onlyOwner",
                                    "nameLocations": [
                                        "8367:9:4"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 956,
                                    "src": "8367:9:4"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "8367:9:4"
                            }
                        ],
                        "name": "recoverTokens",
                        "nameLocation": "8322:13:4",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 615,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 614,
                                    "mutability": "mutable",
                                    "name": "tokenAddress",
                                    "nameLocation": "8344:12:4",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 641,
                                    "src": "8336:20:4",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 613,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "8336:7:4",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "8335:22:4"
                        },
                        "returnParameters": {
                            "id": 618,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "8377:0:4"
                        },
                        "scope": 924,
                        "src": "8313:184:4",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "body": {
                            "id": 700,
                            "nodeType": "Block",
                            "src": "8535:579:4",
                            "statements": [
                                {
                                    "assignments": [
                                        645
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 645,
                                            "mutability": "mutable",
                                            "name": "sentFlag",
                                            "nameLocation": "8584:8:4",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 700,
                                            "src": "8576:16:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 644,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "8576:7:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 647,
                                    "initialValue": {
                                        "hexValue": "30",
                                        "id": 646,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "8595:1:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "8576:20:4"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 651,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 649,
                                                    "name": "randomness",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 82,
                                                    "src": "8614:10:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "!=",
                                                "rightExpression": {
                                                    "hexValue": "30",
                                                    "id": 650,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "8628:1:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_0_by_1",
                                                        "typeString": "int_const 0"
                                                    },
                                                    "value": "0"
                                                },
                                                "src": "8614:15:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "63616e742066696e642072616e646f6d6e657373",
                                                "id": 652,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "8631:22:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_5441f3fd1ea83df00dcd2998e273d86785fb084ab473a08bbf2ee67978b23a60",
                                                    "typeString": "literal_string \"cant find randomness\""
                                                },
                                                "value": "cant find randomness"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_5441f3fd1ea83df00dcd2998e273d86785fb084ab473a08bbf2ee67978b23a60",
                                                    "typeString": "literal_string \"cant find randomness\""
                                                }
                                            ],
                                            "id": 648,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                -18,
                                                -18
                                            ],
                                            "referencedDeclaration": -18,
                                            "src": "8606:7:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 653,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "8606:48:4",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 654,
                                    "nodeType": "ExpressionStatement",
                                    "src": "8606:48:4"
                                },
                                {
                                    "assignments": [
                                        656
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 656,
                                            "mutability": "mutable",
                                            "name": "indexOfWinner",
                                            "nameLocation": "8672:13:4",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 700,
                                            "src": "8664:21:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 655,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "8664:7:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 661,
                                    "initialValue": {
                                        "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        },
                                        "id": 660,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "id": 657,
                                            "name": "randomness",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 82,
                                            "src": "8688:10:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "%",
                                        "rightExpression": {
                                            "expression": {
                                                "id": 658,
                                                "name": "players",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 78,
                                                "src": "8701:7:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                                    "typeString": "address payable[] storage ref"
                                                }
                                            },
                                            "id": 659,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "8709:6:4",
                                            "memberName": "length",
                                            "nodeType": "MemberAccess",
                                            "src": "8701:14:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "8688:27:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "8664:51:4"
                                },
                                {
                                    "expression": {
                                        "id": 666,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 662,
                                            "name": "recentWinner",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 80,
                                            "src": "8725:12:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address_payable",
                                                "typeString": "address payable"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "baseExpression": {
                                                "id": 663,
                                                "name": "players",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 78,
                                                "src": "8740:7:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                                    "typeString": "address payable[] storage ref"
                                                }
                                            },
                                            "id": 665,
                                            "indexExpression": {
                                                "id": 664,
                                                "name": "indexOfWinner",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 656,
                                                "src": "8748:13:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "8740:22:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address_payable",
                                                "typeString": "address payable"
                                            }
                                        },
                                        "src": "8725:37:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address_payable",
                                            "typeString": "address payable"
                                        }
                                    },
                                    "id": 667,
                                    "nodeType": "ExpressionStatement",
                                    "src": "8725:37:4"
                                },
                                {
                                    "expression": {
                                        "id": 671,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 668,
                                            "name": "sentFlag",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 645,
                                            "src": "8773:8:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "arguments": [],
                                            "expression": {
                                                "argumentTypes": [],
                                                "id": 669,
                                                "name": "sendPrizes",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 808,
                                                "src": "8784:10:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
                                                    "typeString": "function () returns (uint256)"
                                                }
                                            },
                                            "id": 670,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "8784:12:4",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "8773:23:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 672,
                                    "nodeType": "ExpressionStatement",
                                    "src": "8773:23:4"
                                },
                                {
                                    "condition": {
                                        "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        },
                                        "id": 675,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "id": 673,
                                            "name": "sentFlag",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 645,
                                            "src": "8811:8:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                            "hexValue": "30",
                                            "id": 674,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "8823:1:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                        },
                                        "src": "8811:13:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "falseBody": {
                                        "id": 698,
                                        "nodeType": "Block",
                                        "src": "8871:187:4",
                                        "statements": [
                                            {
                                                "expression": {
                                                    "id": 684,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftHandSide": {
                                                        "id": 680,
                                                        "name": "errorFlag",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 102,
                                                        "src": "8885:9:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "nodeType": "Assignment",
                                                    "operator": "=",
                                                    "rightHandSide": {
                                                        "commonType": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        },
                                                        "id": 683,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "id": 681,
                                                            "name": "errorFlag",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 102,
                                                            "src": "8897:9:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "+",
                                                        "rightExpression": {
                                                            "hexValue": "31",
                                                            "id": 682,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "8909:1:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_1_by_1",
                                                                "typeString": "int_const 1"
                                                            },
                                                            "value": "1"
                                                        },
                                                        "src": "8897:13:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "src": "8885:25:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "id": 685,
                                                "nodeType": "ExpressionStatement",
                                                "src": "8885:25:4"
                                            },
                                            {
                                                "condition": {
                                                    "commonType": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    },
                                                    "id": 688,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                        "id": 686,
                                                        "name": "errorFlag",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 102,
                                                        "src": "8928:9:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "==",
                                                    "rightExpression": {
                                                        "hexValue": "33",
                                                        "id": 687,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "8941:1:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_rational_3_by_1",
                                                            "typeString": "int_const 3"
                                                        },
                                                        "value": "3"
                                                    },
                                                    "src": "8928:14:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "id": 697,
                                                "nodeType": "IfStatement",
                                                "src": "8924:124:4",
                                                "trueBody": {
                                                    "id": 696,
                                                    "nodeType": "Block",
                                                    "src": "8944:104:4",
                                                    "statements": [
                                                        {
                                                            "expression": {
                                                                "id": 691,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "leftHandSide": {
                                                                    "id": 689,
                                                                    "name": "errorFlag",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 102,
                                                                    "src": "8962:9:4",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    }
                                                                },
                                                                "nodeType": "Assignment",
                                                                "operator": "=",
                                                                "rightHandSide": {
                                                                    "hexValue": "30",
                                                                    "id": 690,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "kind": "number",
                                                                    "lValueRequested": false,
                                                                    "nodeType": "Literal",
                                                                    "src": "8974:1:4",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_rational_0_by_1",
                                                                        "typeString": "int_const 0"
                                                                    },
                                                                    "value": "0"
                                                                },
                                                                "src": "8962:13:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            },
                                                            "id": 692,
                                                            "nodeType": "ExpressionStatement",
                                                            "src": "8962:13:4"
                                                        },
                                                        {
                                                            "expression": {
                                                                "arguments": [],
                                                                "expression": {
                                                                    "argumentTypes": [],
                                                                    "id": 693,
                                                                    "name": "calculate_winner",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 435,
                                                                    "src": "8993:16:4",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                                                        "typeString": "function ()"
                                                                    }
                                                                },
                                                                "id": 694,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "kind": "functionCall",
                                                                "lValueRequested": false,
                                                                "nameLocations": [],
                                                                "names": [],
                                                                "nodeType": "FunctionCall",
                                                                "src": "8993:18:4",
                                                                "tryCall": false,
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_tuple$__$",
                                                                    "typeString": "tuple()"
                                                                }
                                                            },
                                                            "id": 695,
                                                            "nodeType": "ExpressionStatement",
                                                            "src": "8993:18:4"
                                                        }
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "id": 699,
                                    "nodeType": "IfStatement",
                                    "src": "8807:251:4",
                                    "trueBody": {
                                        "id": 679,
                                        "nodeType": "Block",
                                        "src": "8826:39:4",
                                        "statements": [
                                            {
                                                "expression": {
                                                    "arguments": [],
                                                    "expression": {
                                                        "argumentTypes": [],
                                                        "id": 676,
                                                        "name": "clearPlayers",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 923,
                                                        "src": "8840:12:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                                            "typeString": "function ()"
                                                        }
                                                    },
                                                    "id": 677,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "nameLocations": [],
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "8840:14:4",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_tuple$__$",
                                                        "typeString": "tuple()"
                                                    }
                                                },
                                                "id": 678,
                                                "nodeType": "ExpressionStatement",
                                                "src": "8840:14:4"
                                            }
                                        ]
                                    }
                                }
                            ]
                        },
                        "id": 701,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "afterFinish",
                        "nameLocation": "8512:11:4",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 642,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "8523:2:4"
                        },
                        "returnParameters": {
                            "id": 643,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "8535:0:4"
                        },
                        "scope": 924,
                        "src": "8503:611:4",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "internal"
                    },
                    {
                        "body": {
                            "id": 709,
                            "nodeType": "Block",
                            "src": "9166:29:4",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "id": 706,
                                            "name": "sendPrizes",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 808,
                                            "src": "9176:10:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
                                                "typeString": "function () returns (uint256)"
                                            }
                                        },
                                        "id": 707,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "9176:12:4",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 708,
                                    "nodeType": "ExpressionStatement",
                                    "src": "9176:12:4"
                                }
                            ]
                        },
                        "functionSelector": "4a8466e9",
                        "id": 710,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 704,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 703,
                                    "name": "onlyOwner",
                                    "nameLocations": [
                                        "9156:9:4"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 956,
                                    "src": "9156:9:4"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "9156:9:4"
                            }
                        ],
                        "name": "retrySendPrizes",
                        "nameLocation": "9129:15:4",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 702,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "9144:2:4"
                        },
                        "returnParameters": {
                            "id": 705,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "9166:0:4"
                        },
                        "scope": 924,
                        "src": "9120:75:4",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "body": {
                            "id": 807,
                            "nodeType": "Block",
                            "src": "9250:1027:4",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_enum$_LOTTERY_STATE_$116",
                                                    "typeString": "enum MyLottery.LOTTERY_STATE"
                                                },
                                                "id": 719,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 716,
                                                    "name": "lottery_state",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 119,
                                                    "src": "9281:13:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$116",
                                                        "typeString": "enum MyLottery.LOTTERY_STATE"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                    "expression": {
                                                        "id": 717,
                                                        "name": "LOTTERY_STATE",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 116,
                                                        "src": "9298:13:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$116_$",
                                                            "typeString": "type(enum MyLottery.LOTTERY_STATE)"
                                                        }
                                                    },
                                                    "id": 718,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberLocation": "9312:18:4",
                                                    "memberName": "CALCULATING_WINNER",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 115,
                                                    "src": "9298:32:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$116",
                                                        "typeString": "enum MyLottery.LOTTERY_STATE"
                                                    }
                                                },
                                                "src": "9281:49:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "2073656e64207072697a652077726f6e67207374617465",
                                                "id": 720,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "9344:25:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_8c0c3e57c3343e0ccbbc77fd237f0edc8ba109dcef4b530e8d84e381423d9023",
                                                    "typeString": "literal_string \" send prize wrong state\""
                                                },
                                                "value": " send prize wrong state"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_8c0c3e57c3343e0ccbbc77fd237f0edc8ba109dcef4b530e8d84e381423d9023",
                                                    "typeString": "literal_string \" send prize wrong state\""
                                                }
                                            ],
                                            "id": 715,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                -18,
                                                -18
                                            ],
                                            "referencedDeclaration": -18,
                                            "src": "9260:7:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 721,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "9260:119:4",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 722,
                                    "nodeType": "ExpressionStatement",
                                    "src": "9260:119:4"
                                },
                                {
                                    "assignments": [
                                        724
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 724,
                                            "mutability": "mutable",
                                            "name": "total_prize",
                                            "nameLocation": "9397:11:4",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 807,
                                            "src": "9389:19:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 723,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "9389:7:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 730,
                                    "initialValue": {
                                        "expression": {
                                            "arguments": [
                                                {
                                                    "id": 727,
                                                    "name": "this",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": -28,
                                                    "src": "9419:4:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_contract$_MyLottery_$924",
                                                        "typeString": "contract MyLottery"
                                                    }
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_contract$_MyLottery_$924",
                                                        "typeString": "contract MyLottery"
                                                    }
                                                ],
                                                "id": 726,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "ElementaryTypeNameExpression",
                                                "src": "9411:7:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_address_$",
                                                    "typeString": "type(address)"
                                                },
                                                "typeName": {
                                                    "id": 725,
                                                    "name": "address",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "9411:7:4",
                                                    "typeDescriptions": {}
                                                }
                                            },
                                            "id": 728,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "9411:13:4",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "id": 729,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "9425:7:4",
                                        "memberName": "balance",
                                        "nodeType": "MemberAccess",
                                        "src": "9411:21:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "9389:43:4"
                                },
                                {
                                    "condition": {
                                        "id": 732,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "UnaryOperation",
                                        "operator": "!",
                                        "prefix": true,
                                        "src": "9459:10:4",
                                        "subExpression": {
                                            "id": 731,
                                            "name": "ownerSent",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 112,
                                            "src": "9460:9:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 772,
                                    "nodeType": "IfStatement",
                                    "src": "9442:496:4",
                                    "trueBody": {
                                        "id": 771,
                                        "nodeType": "Block",
                                        "src": "9549:389:4",
                                        "statements": [
                                            {
                                                "assignments": [
                                                    734,
                                                    736
                                                ],
                                                "declarations": [
                                                    {
                                                        "constant": false,
                                                        "id": 734,
                                                        "mutability": "mutable",
                                                        "name": "sent",
                                                        "nameLocation": "9569:4:4",
                                                        "nodeType": "VariableDeclaration",
                                                        "scope": 771,
                                                        "src": "9564:9:4",
                                                        "stateVariable": false,
                                                        "storageLocation": "default",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        "typeName": {
                                                            "id": 733,
                                                            "name": "bool",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "9564:4:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            }
                                                        },
                                                        "visibility": "internal"
                                                    },
                                                    {
                                                        "constant": false,
                                                        "id": 736,
                                                        "mutability": "mutable",
                                                        "name": "data",
                                                        "nameLocation": "9588:4:4",
                                                        "nodeType": "VariableDeclaration",
                                                        "scope": 771,
                                                        "src": "9575:17:4",
                                                        "stateVariable": false,
                                                        "storageLocation": "memory",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes_memory_ptr",
                                                            "typeString": "bytes"
                                                        },
                                                        "typeName": {
                                                            "id": 735,
                                                            "name": "bytes",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "9575:5:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bytes_storage_ptr",
                                                                "typeString": "bytes"
                                                            }
                                                        },
                                                        "visibility": "internal"
                                                    }
                                                ],
                                                "id": 749,
                                                "initialValue": {
                                                    "arguments": [
                                                        {
                                                            "hexValue": "",
                                                            "id": 747,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "string",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "9682:2:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                                                "typeString": "literal_string \"\""
                                                            },
                                                            "value": ""
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                                                "typeString": "literal_string \"\""
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                                                    "typeString": "literal_string \"\""
                                                                }
                                                            ],
                                                            "expression": {
                                                                "arguments": [],
                                                                "expression": {
                                                                    "argumentTypes": [],
                                                                    "id": 737,
                                                                    "name": "owner",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 965,
                                                                    "src": "9596:5:4",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                                                        "typeString": "function () view returns (address)"
                                                                    }
                                                                },
                                                                "id": 738,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "kind": "functionCall",
                                                                "lValueRequested": false,
                                                                "nameLocations": [],
                                                                "names": [],
                                                                "nodeType": "FunctionCall",
                                                                "src": "9596:7:4",
                                                                "tryCall": false,
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            },
                                                            "id": 739,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberLocation": "9604:4:4",
                                                            "memberName": "call",
                                                            "nodeType": "MemberAccess",
                                                            "src": "9596:12:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                                            }
                                                        },
                                                        "id": 746,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "names": [
                                                            "value"
                                                        ],
                                                        "nodeType": "FunctionCallOptions",
                                                        "options": [
                                                            {
                                                                "commonType": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                },
                                                                "id": 745,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "leftExpression": {
                                                                    "components": [
                                                                        {
                                                                            "commonType": {
                                                                                "typeIdentifier": "t_uint256",
                                                                                "typeString": "uint256"
                                                                            },
                                                                            "id": 742,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": false,
                                                                            "lValueRequested": false,
                                                                            "leftExpression": {
                                                                                "id": 740,
                                                                                "name": "total_prize",
                                                                                "nodeType": "Identifier",
                                                                                "overloadedDeclarations": [],
                                                                                "referencedDeclaration": 724,
                                                                                "src": "9634:11:4",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_uint256",
                                                                                    "typeString": "uint256"
                                                                                }
                                                                            },
                                                                            "nodeType": "BinaryOperation",
                                                                            "operator": "*",
                                                                            "rightExpression": {
                                                                                "id": 741,
                                                                                "name": "ownerPercent",
                                                                                "nodeType": "Identifier",
                                                                                "overloadedDeclarations": [],
                                                                                "referencedDeclaration": 96,
                                                                                "src": "9648:12:4",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_uint256",
                                                                                    "typeString": "uint256"
                                                                                }
                                                                            },
                                                                            "src": "9634:26:4",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_uint256",
                                                                                "typeString": "uint256"
                                                                            }
                                                                        }
                                                                    ],
                                                                    "id": 743,
                                                                    "isConstant": false,
                                                                    "isInlineArray": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "nodeType": "TupleExpression",
                                                                    "src": "9633:28:4",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    }
                                                                },
                                                                "nodeType": "BinaryOperation",
                                                                "operator": "/",
                                                                "rightExpression": {
                                                                    "hexValue": "313030",
                                                                    "id": 744,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "kind": "number",
                                                                    "lValueRequested": false,
                                                                    "nodeType": "Literal",
                                                                    "src": "9664:3:4",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_rational_100_by_1",
                                                                        "typeString": "int_const 100"
                                                                    },
                                                                    "value": "100"
                                                                },
                                                                "src": "9633:34:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            }
                                                        ],
                                                        "src": "9596:85:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                                            "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                                        }
                                                    },
                                                    "id": 748,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "nameLocations": [],
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "9596:89:4",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                                        "typeString": "tuple(bool,bytes memory)"
                                                    }
                                                },
                                                "nodeType": "VariableDeclarationStatement",
                                                "src": "9563:122:4"
                                            },
                                            {
                                                "expression": {
                                                    "id": 752,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftHandSide": {
                                                        "id": 750,
                                                        "name": "ownerSent",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 112,
                                                        "src": "9699:9:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    "nodeType": "Assignment",
                                                    "operator": "=",
                                                    "rightHandSide": {
                                                        "id": 751,
                                                        "name": "sent",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 734,
                                                        "src": "9711:4:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    "src": "9699:16:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "id": 753,
                                                "nodeType": "ExpressionStatement",
                                                "src": "9699:16:4"
                                            },
                                            {
                                                "condition": {
                                                    "id": 755,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "UnaryOperation",
                                                    "operator": "!",
                                                    "prefix": true,
                                                    "src": "9733:10:4",
                                                    "subExpression": {
                                                        "id": 754,
                                                        "name": "ownerSent",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 112,
                                                        "src": "9734:9:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "id": 770,
                                                "nodeType": "IfStatement",
                                                "src": "9729:199:4",
                                                "trueBody": {
                                                    "id": 769,
                                                    "nodeType": "Block",
                                                    "src": "9745:183:4",
                                                    "statements": [
                                                        {
                                                            "eventCall": {
                                                                "arguments": [
                                                                    {
                                                                        "arguments": [],
                                                                        "expression": {
                                                                            "argumentTypes": [],
                                                                            "id": 757,
                                                                            "name": "owner",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 965,
                                                                            "src": "9806:5:4",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                                                                "typeString": "function () view returns (address)"
                                                                            }
                                                                        },
                                                                        "id": 758,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "kind": "functionCall",
                                                                        "lValueRequested": false,
                                                                        "nameLocations": [],
                                                                        "names": [],
                                                                        "nodeType": "FunctionCall",
                                                                        "src": "9806:7:4",
                                                                        "tryCall": false,
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_address",
                                                                            "typeString": "address"
                                                                        }
                                                                    },
                                                                    {
                                                                        "commonType": {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        },
                                                                        "id": 764,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "lValueRequested": false,
                                                                        "leftExpression": {
                                                                            "components": [
                                                                                {
                                                                                    "commonType": {
                                                                                        "typeIdentifier": "t_uint256",
                                                                                        "typeString": "uint256"
                                                                                    },
                                                                                    "id": 761,
                                                                                    "isConstant": false,
                                                                                    "isLValue": false,
                                                                                    "isPure": false,
                                                                                    "lValueRequested": false,
                                                                                    "leftExpression": {
                                                                                        "id": 759,
                                                                                        "name": "total_prize",
                                                                                        "nodeType": "Identifier",
                                                                                        "overloadedDeclarations": [],
                                                                                        "referencedDeclaration": 724,
                                                                                        "src": "9836:11:4",
                                                                                        "typeDescriptions": {
                                                                                            "typeIdentifier": "t_uint256",
                                                                                            "typeString": "uint256"
                                                                                        }
                                                                                    },
                                                                                    "nodeType": "BinaryOperation",
                                                                                    "operator": "*",
                                                                                    "rightExpression": {
                                                                                        "id": 760,
                                                                                        "name": "ownerPercent",
                                                                                        "nodeType": "Identifier",
                                                                                        "overloadedDeclarations": [],
                                                                                        "referencedDeclaration": 96,
                                                                                        "src": "9850:12:4",
                                                                                        "typeDescriptions": {
                                                                                            "typeIdentifier": "t_uint256",
                                                                                            "typeString": "uint256"
                                                                                        }
                                                                                    },
                                                                                    "src": "9836:26:4",
                                                                                    "typeDescriptions": {
                                                                                        "typeIdentifier": "t_uint256",
                                                                                        "typeString": "uint256"
                                                                                    }
                                                                                }
                                                                            ],
                                                                            "id": 762,
                                                                            "isConstant": false,
                                                                            "isInlineArray": false,
                                                                            "isLValue": false,
                                                                            "isPure": false,
                                                                            "lValueRequested": false,
                                                                            "nodeType": "TupleExpression",
                                                                            "src": "9835:28:4",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_uint256",
                                                                                "typeString": "uint256"
                                                                            }
                                                                        },
                                                                        "nodeType": "BinaryOperation",
                                                                        "operator": "/",
                                                                        "rightExpression": {
                                                                            "hexValue": "313030",
                                                                            "id": 763,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": true,
                                                                            "kind": "number",
                                                                            "lValueRequested": false,
                                                                            "nodeType": "Literal",
                                                                            "src": "9866:3:4",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_rational_100_by_1",
                                                                                "typeString": "int_const 100"
                                                                            },
                                                                            "value": "100"
                                                                        },
                                                                        "src": "9835:34:4",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        }
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "argumentTypes": [
                                                                        {
                                                                            "typeIdentifier": "t_address",
                                                                            "typeString": "address"
                                                                        },
                                                                        {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        }
                                                                    ],
                                                                    "id": 756,
                                                                    "name": "cantSendEthOwner",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 139,
                                                                    "src": "9768:16:4",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                                        "typeString": "function (address,uint256)"
                                                                    }
                                                                },
                                                                "id": 765,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "kind": "functionCall",
                                                                "lValueRequested": false,
                                                                "nameLocations": [],
                                                                "names": [],
                                                                "nodeType": "FunctionCall",
                                                                "src": "9768:119:4",
                                                                "tryCall": false,
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_tuple$__$",
                                                                    "typeString": "tuple()"
                                                                }
                                                            },
                                                            "id": 766,
                                                            "nodeType": "EmitStatement",
                                                            "src": "9763:124:4"
                                                        },
                                                        {
                                                            "expression": {
                                                                "hexValue": "31",
                                                                "id": 767,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "kind": "number",
                                                                "lValueRequested": false,
                                                                "nodeType": "Literal",
                                                                "src": "9912:1:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_rational_1_by_1",
                                                                    "typeString": "int_const 1"
                                                                },
                                                                "value": "1"
                                                            },
                                                            "functionReturnParameters": 714,
                                                            "id": 768,
                                                            "nodeType": "Return",
                                                            "src": "9905:8:4"
                                                        }
                                                    ]
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "assignments": [
                                        774,
                                        776
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 774,
                                            "mutability": "mutable",
                                            "name": "sent",
                                            "nameLocation": "9954:4:4",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 807,
                                            "src": "9949:9:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "typeName": {
                                                "id": 773,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "9949:4:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 776,
                                            "mutability": "mutable",
                                            "name": "data",
                                            "nameLocation": "9973:4:4",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 807,
                                            "src": "9960:17:4",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bytes_memory_ptr",
                                                "typeString": "bytes"
                                            },
                                            "typeName": {
                                                "id": 775,
                                                "name": "bytes",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "9960:5:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes_storage_ptr",
                                                    "typeString": "bytes"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 788,
                                    "initialValue": {
                                        "arguments": [
                                            {
                                                "hexValue": "",
                                                "id": 786,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "10064:2:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                                    "typeString": "literal_string \"\""
                                                },
                                                "value": ""
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                                    "typeString": "literal_string \"\""
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                                        "typeString": "literal_string \"\""
                                                    }
                                                ],
                                                "expression": {
                                                    "id": 777,
                                                    "name": "recentWinner",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 80,
                                                    "src": "9981:12:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address_payable",
                                                        "typeString": "address payable"
                                                    }
                                                },
                                                "id": 778,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "9994:4:4",
                                                "memberName": "call",
                                                "nodeType": "MemberAccess",
                                                "src": "9981:17:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                                    "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                                }
                                            },
                                            "id": 785,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "names": [
                                                "value"
                                            ],
                                            "nodeType": "FunctionCallOptions",
                                            "options": [
                                                {
                                                    "commonType": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    },
                                                    "id": 784,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                        "components": [
                                                            {
                                                                "commonType": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                },
                                                                "id": 781,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "leftExpression": {
                                                                    "id": 779,
                                                                    "name": "total_prize",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 724,
                                                                    "src": "10020:11:4",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    }
                                                                },
                                                                "nodeType": "BinaryOperation",
                                                                "operator": "*",
                                                                "rightExpression": {
                                                                    "id": 780,
                                                                    "name": "pricePercent",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 94,
                                                                    "src": "10034:12:4",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    }
                                                                },
                                                                "src": "10020:26:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            }
                                                        ],
                                                        "id": 782,
                                                        "isConstant": false,
                                                        "isInlineArray": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "TupleExpression",
                                                        "src": "10019:28:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "/",
                                                    "rightExpression": {
                                                        "hexValue": "313030",
                                                        "id": 783,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "10050:3:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_rational_100_by_1",
                                                            "typeString": "int_const 100"
                                                        },
                                                        "value": "100"
                                                    },
                                                    "src": "10019:34:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                }
                                            ],
                                            "src": "9981:82:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                            }
                                        },
                                        "id": 787,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "9981:86:4",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                            "typeString": "tuple(bool,bytes memory)"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "9948:119:4"
                                },
                                {
                                    "condition": {
                                        "id": 790,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "UnaryOperation",
                                        "operator": "!",
                                        "prefix": true,
                                        "src": "10081:5:4",
                                        "subExpression": {
                                            "id": 789,
                                            "name": "sent",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 774,
                                            "src": "10082:4:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 804,
                                    "nodeType": "IfStatement",
                                    "src": "10077:176:4",
                                    "trueBody": {
                                        "id": 803,
                                        "nodeType": "Block",
                                        "src": "10088:165:4",
                                        "statements": [
                                            {
                                                "eventCall": {
                                                    "arguments": [
                                                        {
                                                            "id": 792,
                                                            "name": "recentWinner",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 80,
                                                            "src": "10142:12:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address_payable",
                                                                "typeString": "address payable"
                                                            }
                                                        },
                                                        {
                                                            "commonType": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            },
                                                            "id": 798,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftExpression": {
                                                                "components": [
                                                                    {
                                                                        "commonType": {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        },
                                                                        "id": 795,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "lValueRequested": false,
                                                                        "leftExpression": {
                                                                            "id": 793,
                                                                            "name": "total_prize",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 724,
                                                                            "src": "10173:11:4",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_uint256",
                                                                                "typeString": "uint256"
                                                                            }
                                                                        },
                                                                        "nodeType": "BinaryOperation",
                                                                        "operator": "*",
                                                                        "rightExpression": {
                                                                            "id": 794,
                                                                            "name": "pricePercent",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 94,
                                                                            "src": "10187:12:4",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_uint256",
                                                                                "typeString": "uint256"
                                                                            }
                                                                        },
                                                                        "src": "10173:26:4",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        }
                                                                    }
                                                                ],
                                                                "id": 796,
                                                                "isConstant": false,
                                                                "isInlineArray": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "nodeType": "TupleExpression",
                                                                "src": "10172:28:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            },
                                                            "nodeType": "BinaryOperation",
                                                            "operator": "/",
                                                            "rightExpression": {
                                                                "hexValue": "313030",
                                                                "id": 797,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "kind": "number",
                                                                "lValueRequested": false,
                                                                "nodeType": "Literal",
                                                                "src": "10203:3:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_rational_100_by_1",
                                                                    "typeString": "int_const 100"
                                                                },
                                                                "value": "100"
                                                            },
                                                            "src": "10172:34:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_address_payable",
                                                                "typeString": "address payable"
                                                            },
                                                            {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        ],
                                                        "id": 791,
                                                        "name": "cantSendEthWinner",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 145,
                                                        "src": "10107:17:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                            "typeString": "function (address,uint256)"
                                                        }
                                                    },
                                                    "id": 799,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "nameLocations": [],
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "10107:113:4",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_tuple$__$",
                                                        "typeString": "tuple()"
                                                    }
                                                },
                                                "id": 800,
                                                "nodeType": "EmitStatement",
                                                "src": "10102:118:4"
                                            },
                                            {
                                                "expression": {
                                                    "hexValue": "31",
                                                    "id": 801,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "10241:1:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_1_by_1",
                                                        "typeString": "int_const 1"
                                                    },
                                                    "value": "1"
                                                },
                                                "functionReturnParameters": 714,
                                                "id": 802,
                                                "nodeType": "Return",
                                                "src": "10234:8:4"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "expression": {
                                        "hexValue": "30",
                                        "id": 805,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "10269:1:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                    },
                                    "functionReturnParameters": 714,
                                    "id": 806,
                                    "nodeType": "Return",
                                    "src": "10262:8:4"
                                }
                            ]
                        },
                        "id": 808,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "sendPrizes",
                        "nameLocation": "9210:10:4",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 711,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "9220:2:4"
                        },
                        "returnParameters": {
                            "id": 714,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 713,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 808,
                                    "src": "9241:7:4",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 712,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9241:7:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "9240:9:4"
                        },
                        "scope": 924,
                        "src": "9201:1076:4",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "internal"
                    },
                    {
                        "body": {
                            "id": 859,
                            "nodeType": "Block",
                            "src": "10830:493:4",
                            "statements": [
                                {
                                    "body": {
                                        "id": 854,
                                        "nodeType": "Block",
                                        "src": "10883:410:4",
                                        "statements": [
                                            {
                                                "assignments": [
                                                    823,
                                                    825
                                                ],
                                                "declarations": [
                                                    {
                                                        "constant": false,
                                                        "id": 823,
                                                        "mutability": "mutable",
                                                        "name": "sent",
                                                        "nameLocation": "10982:4:4",
                                                        "nodeType": "VariableDeclaration",
                                                        "scope": 854,
                                                        "src": "10977:9:4",
                                                        "stateVariable": false,
                                                        "storageLocation": "default",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        "typeName": {
                                                            "id": 822,
                                                            "name": "bool",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "10977:4:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            }
                                                        },
                                                        "visibility": "internal"
                                                    },
                                                    {
                                                        "constant": false,
                                                        "id": 825,
                                                        "mutability": "mutable",
                                                        "name": "data",
                                                        "nameLocation": "11001:4:4",
                                                        "nodeType": "VariableDeclaration",
                                                        "scope": 854,
                                                        "src": "10988:17:4",
                                                        "stateVariable": false,
                                                        "storageLocation": "memory",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes_memory_ptr",
                                                            "typeString": "bytes"
                                                        },
                                                        "typeName": {
                                                            "id": 824,
                                                            "name": "bytes",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "10988:5:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bytes_storage_ptr",
                                                                "typeString": "bytes"
                                                            }
                                                        },
                                                        "visibility": "internal"
                                                    }
                                                ],
                                                "id": 834,
                                                "initialValue": {
                                                    "arguments": [
                                                        {
                                                            "hexValue": "",
                                                            "id": 832,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "string",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "11059:2:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                                                "typeString": "literal_string \"\""
                                                            },
                                                            "value": ""
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                                                "typeString": "literal_string \"\""
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                                                    "typeString": "literal_string \"\""
                                                                }
                                                            ],
                                                            "expression": {
                                                                "baseExpression": {
                                                                    "id": 826,
                                                                    "name": "players",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 78,
                                                                    "src": "11009:7:4",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                                                        "typeString": "address payable[] storage ref"
                                                                    }
                                                                },
                                                                "id": 828,
                                                                "indexExpression": {
                                                                    "id": 827,
                                                                    "name": "i",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 812,
                                                                    "src": "11017:1:4",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_uint8",
                                                                        "typeString": "uint8"
                                                                    }
                                                                },
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "nodeType": "IndexAccess",
                                                                "src": "11009:10:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address_payable",
                                                                    "typeString": "address payable"
                                                                }
                                                            },
                                                            "id": 829,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberLocation": "11020:4:4",
                                                            "memberName": "call",
                                                            "nodeType": "MemberAccess",
                                                            "src": "11009:15:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                                            }
                                                        },
                                                        "id": 831,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "names": [
                                                            "value"
                                                        ],
                                                        "nodeType": "FunctionCallOptions",
                                                        "options": [
                                                            {
                                                                "id": 830,
                                                                "name": "EntryFee",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 88,
                                                                "src": "11032:8:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            }
                                                        ],
                                                        "src": "11009:32:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                                            "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                                        }
                                                    },
                                                    "id": 833,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "nameLocations": [],
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "11009:66:4",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                                        "typeString": "tuple(bool,bytes memory)"
                                                    }
                                                },
                                                "nodeType": "VariableDeclarationStatement",
                                                "src": "10976:99:4"
                                            },
                                            {
                                                "expression": {
                                                    "id": 841,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftHandSide": {
                                                        "baseExpression": {
                                                            "id": 835,
                                                            "name": "isUserEntered",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 92,
                                                            "src": "11089:13:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                                                "typeString": "mapping(address => bool)"
                                                            }
                                                        },
                                                        "id": 839,
                                                        "indexExpression": {
                                                            "baseExpression": {
                                                                "id": 836,
                                                                "name": "players",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 78,
                                                                "src": "11103:7:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                                                    "typeString": "address payable[] storage ref"
                                                                }
                                                            },
                                                            "id": 838,
                                                            "indexExpression": {
                                                                "id": 837,
                                                                "name": "i",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 812,
                                                                "src": "11111:1:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint8",
                                                                    "typeString": "uint8"
                                                                }
                                                            },
                                                            "isConstant": false,
                                                            "isLValue": true,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "nodeType": "IndexAccess",
                                                            "src": "11103:10:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address_payable",
                                                                "typeString": "address payable"
                                                            }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": true,
                                                        "nodeType": "IndexAccess",
                                                        "src": "11089:25:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    "nodeType": "Assignment",
                                                    "operator": "=",
                                                    "rightHandSide": {
                                                        "hexValue": "66616c7365",
                                                        "id": 840,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "bool",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "11117:5:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        "value": "false"
                                                    },
                                                    "src": "11089:33:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "id": 842,
                                                "nodeType": "ExpressionStatement",
                                                "src": "11089:33:4"
                                            },
                                            {
                                                "condition": {
                                                    "id": 844,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "UnaryOperation",
                                                    "operator": "!",
                                                    "prefix": true,
                                                    "src": "11193:5:4",
                                                    "subExpression": {
                                                        "id": 843,
                                                        "name": "sent",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 823,
                                                        "src": "11194:4:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "id": 853,
                                                "nodeType": "IfStatement",
                                                "src": "11189:94:4",
                                                "trueBody": {
                                                    "id": 852,
                                                    "nodeType": "Block",
                                                    "src": "11200:83:4",
                                                    "statements": [
                                                        {
                                                            "eventCall": {
                                                                "arguments": [
                                                                    {
                                                                        "baseExpression": {
                                                                            "id": 846,
                                                                            "name": "players",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 78,
                                                                            "src": "11247:7:4",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                                                                "typeString": "address payable[] storage ref"
                                                                            }
                                                                        },
                                                                        "id": 848,
                                                                        "indexExpression": {
                                                                            "id": 847,
                                                                            "name": "i",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 812,
                                                                            "src": "11255:1:4",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_uint8",
                                                                                "typeString": "uint8"
                                                                            }
                                                                        },
                                                                        "isConstant": false,
                                                                        "isLValue": true,
                                                                        "isPure": false,
                                                                        "lValueRequested": false,
                                                                        "nodeType": "IndexAccess",
                                                                        "src": "11247:10:4",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_address_payable",
                                                                            "typeString": "address payable"
                                                                        }
                                                                    },
                                                                    {
                                                                        "id": 849,
                                                                        "name": "EntryFee",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 88,
                                                                        "src": "11259:8:4",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        }
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "argumentTypes": [
                                                                        {
                                                                            "typeIdentifier": "t_address_payable",
                                                                            "typeString": "address payable"
                                                                        },
                                                                        {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        }
                                                                    ],
                                                                    "id": 845,
                                                                    "name": "cantSendEthParticipants",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 151,
                                                                    "src": "11223:23:4",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                                        "typeString": "function (address,uint256)"
                                                                    }
                                                                },
                                                                "id": 850,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "kind": "functionCall",
                                                                "lValueRequested": false,
                                                                "nameLocations": [],
                                                                "names": [],
                                                                "nodeType": "FunctionCall",
                                                                "src": "11223:45:4",
                                                                "tryCall": false,
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_tuple$__$",
                                                                    "typeString": "tuple()"
                                                                }
                                                            },
                                                            "id": 851,
                                                            "nodeType": "EmitStatement",
                                                            "src": "11218:50:4"
                                                        }
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "condition": {
                                        "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        },
                                        "id": 818,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "id": 815,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 812,
                                            "src": "10858:1:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "<",
                                        "rightExpression": {
                                            "expression": {
                                                "id": 816,
                                                "name": "players",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 78,
                                                "src": "10862:7:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                                    "typeString": "address payable[] storage ref"
                                                }
                                            },
                                            "id": 817,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "10870:6:4",
                                            "memberName": "length",
                                            "nodeType": "MemberAccess",
                                            "src": "10862:14:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "10858:18:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 855,
                                    "initializationExpression": {
                                        "assignments": [
                                            812
                                        ],
                                        "declarations": [
                                            {
                                                "constant": false,
                                                "id": 812,
                                                "mutability": "mutable",
                                                "name": "i",
                                                "nameLocation": "10851:1:4",
                                                "nodeType": "VariableDeclaration",
                                                "scope": 855,
                                                "src": "10845:7:4",
                                                "stateVariable": false,
                                                "storageLocation": "default",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint8",
                                                    "typeString": "uint8"
                                                },
                                                "typeName": {
                                                    "id": 811,
                                                    "name": "uint8",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "10845:5:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint8",
                                                        "typeString": "uint8"
                                                    }
                                                },
                                                "visibility": "internal"
                                            }
                                        ],
                                        "id": 814,
                                        "initialValue": {
                                            "hexValue": "30",
                                            "id": 813,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "10855:1:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                        },
                                        "nodeType": "VariableDeclarationStatement",
                                        "src": "10845:11:4"
                                    },
                                    "loopExpression": {
                                        "expression": {
                                            "id": 820,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "UnaryOperation",
                                            "operator": "++",
                                            "prefix": false,
                                            "src": "10878:3:4",
                                            "subExpression": {
                                                "id": 819,
                                                "name": "i",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 812,
                                                "src": "10878:1:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint8",
                                                    "typeString": "uint8"
                                                }
                                            },
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                            }
                                        },
                                        "id": 821,
                                        "nodeType": "ExpressionStatement",
                                        "src": "10878:3:4"
                                    },
                                    "nodeType": "ForStatement",
                                    "src": "10840:453:4"
                                },
                                {
                                    "expression": {
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "id": 856,
                                            "name": "clearPlayers",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 923,
                                            "src": "11302:12:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                                "typeString": "function ()"
                                            }
                                        },
                                        "id": 857,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "11302:14:4",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 858,
                                    "nodeType": "ExpressionStatement",
                                    "src": "11302:14:4"
                                }
                            ]
                        },
                        "id": 860,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "not_enough_participant",
                        "nameLocation": "10796:22:4",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 809,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "10818:2:4"
                        },
                        "returnParameters": {
                            "id": 810,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "10830:0:4"
                        },
                        "scope": 924,
                        "src": "10787:536:4",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "internal"
                    },
                    {
                        "body": {
                            "id": 871,
                            "nodeType": "Block",
                            "src": "11389:44:4",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 868,
                                                "name": "newOwner",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 862,
                                                "src": "11417:8:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            ],
                                            "id": 867,
                                            "name": "transferOwnership",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1016,
                                            "src": "11399:17:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                                "typeString": "function (address)"
                                            }
                                        },
                                        "id": 869,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "11399:27:4",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 870,
                                    "nodeType": "ExpressionStatement",
                                    "src": "11399:27:4"
                                }
                            ]
                        },
                        "functionSelector": "4fb2e45d",
                        "id": 872,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 865,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 864,
                                    "name": "onlyOwner",
                                    "nameLocations": [
                                        "11379:9:4"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 956,
                                    "src": "11379:9:4"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "11379:9:4"
                            }
                        ],
                        "name": "transferOwner",
                        "nameLocation": "11338:13:4",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 863,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 862,
                                    "mutability": "mutable",
                                    "name": "newOwner",
                                    "nameLocation": "11360:8:4",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 872,
                                    "src": "11352:16:4",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 861,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "11352:7:4",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "11351:18:4"
                        },
                        "returnParameters": {
                            "id": 866,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "11389:0:4"
                        },
                        "scope": 924,
                        "src": "11329:104:4",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "body": {
                            "id": 922,
                            "nodeType": "Block",
                            "src": "11472:321:4",
                            "statements": [
                                {
                                    "body": {
                                        "id": 894,
                                        "nodeType": "Block",
                                        "src": "11525:58:4",
                                        "statements": [
                                            {
                                                "expression": {
                                                    "id": 892,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftHandSide": {
                                                        "baseExpression": {
                                                            "id": 886,
                                                            "name": "isUserEntered",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 92,
                                                            "src": "11539:13:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                                                "typeString": "mapping(address => bool)"
                                                            }
                                                        },
                                                        "id": 890,
                                                        "indexExpression": {
                                                            "baseExpression": {
                                                                "id": 887,
                                                                "name": "players",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 78,
                                                                "src": "11553:7:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                                                    "typeString": "address payable[] storage ref"
                                                                }
                                                            },
                                                            "id": 889,
                                                            "indexExpression": {
                                                                "id": 888,
                                                                "name": "i",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 876,
                                                                "src": "11561:1:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint8",
                                                                    "typeString": "uint8"
                                                                }
                                                            },
                                                            "isConstant": false,
                                                            "isLValue": true,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "nodeType": "IndexAccess",
                                                            "src": "11553:10:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address_payable",
                                                                "typeString": "address payable"
                                                            }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": true,
                                                        "nodeType": "IndexAccess",
                                                        "src": "11539:25:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    "nodeType": "Assignment",
                                                    "operator": "=",
                                                    "rightHandSide": {
                                                        "hexValue": "66616c7365",
                                                        "id": 891,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "bool",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "11567:5:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        "value": "false"
                                                    },
                                                    "src": "11539:33:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "id": 893,
                                                "nodeType": "ExpressionStatement",
                                                "src": "11539:33:4"
                                            }
                                        ]
                                    },
                                    "condition": {
                                        "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        },
                                        "id": 882,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "id": 879,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 876,
                                            "src": "11500:1:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "<",
                                        "rightExpression": {
                                            "expression": {
                                                "id": 880,
                                                "name": "players",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 78,
                                                "src": "11504:7:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                                    "typeString": "address payable[] storage ref"
                                                }
                                            },
                                            "id": 881,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "11512:6:4",
                                            "memberName": "length",
                                            "nodeType": "MemberAccess",
                                            "src": "11504:14:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "11500:18:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 895,
                                    "initializationExpression": {
                                        "assignments": [
                                            876
                                        ],
                                        "declarations": [
                                            {
                                                "constant": false,
                                                "id": 876,
                                                "mutability": "mutable",
                                                "name": "i",
                                                "nameLocation": "11493:1:4",
                                                "nodeType": "VariableDeclaration",
                                                "scope": 895,
                                                "src": "11487:7:4",
                                                "stateVariable": false,
                                                "storageLocation": "default",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint8",
                                                    "typeString": "uint8"
                                                },
                                                "typeName": {
                                                    "id": 875,
                                                    "name": "uint8",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "11487:5:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint8",
                                                        "typeString": "uint8"
                                                    }
                                                },
                                                "visibility": "internal"
                                            }
                                        ],
                                        "id": 878,
                                        "initialValue": {
                                            "hexValue": "30",
                                            "id": 877,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "11497:1:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                        },
                                        "nodeType": "VariableDeclarationStatement",
                                        "src": "11487:11:4"
                                    },
                                    "loopExpression": {
                                        "expression": {
                                            "id": 884,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "UnaryOperation",
                                            "operator": "++",
                                            "prefix": false,
                                            "src": "11520:3:4",
                                            "subExpression": {
                                                "id": 883,
                                                "name": "i",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 876,
                                                "src": "11520:1:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint8",
                                                    "typeString": "uint8"
                                                }
                                            },
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                            }
                                        },
                                        "id": 885,
                                        "nodeType": "ExpressionStatement",
                                        "src": "11520:3:4"
                                    },
                                    "nodeType": "ForStatement",
                                    "src": "11482:101:4"
                                },
                                {
                                    "expression": {
                                        "id": 902,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 896,
                                            "name": "players",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 78,
                                            "src": "11592:7:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                                "typeString": "address payable[] storage ref"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "arguments": [
                                                {
                                                    "hexValue": "30",
                                                    "id": 900,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "11624:1:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_0_by_1",
                                                        "typeString": "int_const 0"
                                                    },
                                                    "value": "0"
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_rational_0_by_1",
                                                        "typeString": "int_const 0"
                                                    }
                                                ],
                                                "id": 899,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "NewExpression",
                                                "src": "11602:21:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_payable_$dyn_memory_ptr_$",
                                                    "typeString": "function (uint256) pure returns (address payable[] memory)"
                                                },
                                                "typeName": {
                                                    "baseType": {
                                                        "id": 897,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "11606:15:4",
                                                        "stateMutability": "payable",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        }
                                                    },
                                                    "id": 898,
                                                    "nodeType": "ArrayTypeName",
                                                    "src": "11606:17:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
                                                        "typeString": "address payable[]"
                                                    }
                                                }
                                            },
                                            "id": 901,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "11602:24:4",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_address_payable_$dyn_memory_ptr",
                                                "typeString": "address payable[] memory"
                                            }
                                        },
                                        "src": "11592:34:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                            "typeString": "address payable[] storage ref"
                                        }
                                    },
                                    "id": 903,
                                    "nodeType": "ExpressionStatement",
                                    "src": "11592:34:4"
                                },
                                {
                                    "expression": {
                                        "id": 907,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 904,
                                            "name": "lottery_state",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 119,
                                            "src": "11636:13:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_enum$_LOTTERY_STATE_$116",
                                                "typeString": "enum MyLottery.LOTTERY_STATE"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "expression": {
                                                "id": 905,
                                                "name": "LOTTERY_STATE",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 116,
                                                "src": "11652:13:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$116_$",
                                                    "typeString": "type(enum MyLottery.LOTTERY_STATE)"
                                                }
                                            },
                                            "id": 906,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberLocation": "11666:6:4",
                                            "memberName": "CLOSED",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 114,
                                            "src": "11652:20:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_enum$_LOTTERY_STATE_$116",
                                                "typeString": "enum MyLottery.LOTTERY_STATE"
                                            }
                                        },
                                        "src": "11636:36:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_LOTTERY_STATE_$116",
                                            "typeString": "enum MyLottery.LOTTERY_STATE"
                                        }
                                    },
                                    "id": 908,
                                    "nodeType": "ExpressionStatement",
                                    "src": "11636:36:4"
                                },
                                {
                                    "expression": {
                                        "id": 911,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 909,
                                            "name": "errorFlag",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 102,
                                            "src": "11682:9:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "hexValue": "30",
                                            "id": 910,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "11694:1:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                        },
                                        "src": "11682:13:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 912,
                                    "nodeType": "ExpressionStatement",
                                    "src": "11682:13:4"
                                },
                                {
                                    "expression": {
                                        "id": 915,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 913,
                                            "name": "ownerSent",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 112,
                                            "src": "11705:9:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "hexValue": "66616c7365",
                                            "id": 914,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "bool",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "11717:5:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "value": "false"
                                        },
                                        "src": "11705:17:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 916,
                                    "nodeType": "ExpressionStatement",
                                    "src": "11705:17:4"
                                },
                                {
                                    "expression": {
                                        "id": 920,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 917,
                                            "name": "lotteryEnd",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 106,
                                            "src": "11732:10:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "expression": {
                                                "id": 918,
                                                "name": "block",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -4,
                                                "src": "11745:5:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_block",
                                                    "typeString": "block"
                                                }
                                            },
                                            "id": 919,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "11751:9:4",
                                            "memberName": "timestamp",
                                            "nodeType": "MemberAccess",
                                            "src": "11745:15:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "11732:28:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 921,
                                    "nodeType": "ExpressionStatement",
                                    "src": "11732:28:4"
                                }
                            ]
                        },
                        "id": 923,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "clearPlayers",
                        "nameLocation": "11448:12:4",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 873,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "11460:2:4"
                        },
                        "returnParameters": {
                            "id": 874,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "11472:0:4"
                        },
                        "scope": 924,
                        "src": "11439:354:4",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "internal"
                    }
                ],
                "scope": 925,
                "src": "1221:10574:4",
                "usedErrors": []
            }
        ],
        "src": "0:11796:4"
    },
    "bytecode": "608060405234801561001057600080fd5b5061001a33610069565b6001805566b1a2bc2ec500006007556012805462ffff00191662010100179055600a60058190556096600655604660095560148155600b556003600c556203f4806010556138406011556100b9565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b611bcc806100c86000396000f3fe6080604052600436106102305760003560e01c80638da5cb5b1161012e578063d70fa7de116100ab578063f2fde38b1161006f578063f2fde38b146105e2578063f71d96cb14610602578063f8b2cb4f14610622578063faea18c614610642578063fe56f5a01461065857600080fd5b8063d70fa7de1461056c578063d718aea914610582578063ddca3f4314610597578063ee44abb2146105ad578063f2640e10146105c257600080fd5b8063bcdb446b116100f2578063bcdb446b146104ce578063be55c9c9146104e3578063caa6fea414610513578063cd8cc84414610540578063cf23aa381461055657600080fd5b80638da5cb5b1461044e57806395d120001461046c5780639bb5771814610482578063a6d811ea14610498578063b4989917146104ae57600080fd5b80634f8c70cf116101bc5780636531e5c4116101805780636531e5c4146103cc57806369ebe78e146103e1578063715018a6146103f7578063814479991461040c57806381fb84fb1461043857600080fd5b80634f8c70cf146103285780634fb2e45d14610360578063501d078014610380578063569237101461039657806359fe8c84146103b657600080fd5b80632b58150b116102035780632b58150b146102bf5780632d97902f146102df57806336013189146102f5578063382e5e7a1461030b5780634a8466e91461031357600080fd5b806304283412146102355780630b3ff2801461025e57806316114acd146102885780631b30d5df146102aa575b600080fd5b34801561024157600080fd5b5061024b60065481565b6040519081526020015b60405180910390f35b34801561026a57600080fd5b506012546102789060ff1681565b6040519015158152602001610255565b34801561029457600080fd5b506102a86102a336600461186d565b610678565b005b3480156102b657600080fd5b506102a8610768565b3480156102cb57600080fd5b506102a86102da366004611896565b61078b565b3480156102eb57600080fd5b5061024b60105481565b34801561030157600080fd5b5061024b60045481565b6102a8610798565b34801561031f57600080fd5b506102a8610a0b565b34801561033457600080fd5b50600354610348906001600160a01b031681565b6040516001600160a01b039091168152602001610255565b34801561036c57600080fd5b506102a861037b36600461186d565b610a1e565b34801561038c57600080fd5b5061024b600c5481565b3480156103a257600080fd5b506102a86103b1366004611896565b610a2f565b3480156103c257600080fd5b5061024b60075481565b3480156103d857600080fd5b506102a8610a3c565b3480156103ed57600080fd5b5061024b60145481565b34801561040357600080fd5b506102a8610a5c565b34801561041857600080fd5b5060125461042b90610100900460ff1681565b60405161025591906118c5565b34801561044457600080fd5b5061024b60095481565b34801561045a57600080fd5b506000546001600160a01b0316610348565b34801561047857600080fd5b5061024b600a5481565b34801561048e57600080fd5b5061024b600b5481565b3480156104a457600080fd5b5061024b60055481565b3480156104ba57600080fd5b506102a86104c9366004611896565b610a70565b3480156104da57600080fd5b506102a8610a7d565b3480156104ef57600080fd5b506102786104fe36600461186d565b60086020526000908152604090205460ff1681565b34801561051f57600080fd5b506012546105339062010000900460ff1681565b60405161025591906118df565b34801561054c57600080fd5b5061024b600e5481565b34801561056257600080fd5b5061024b60115481565b34801561057857600080fd5b5061024b600f5481565b34801561058e57600080fd5b506102a8610aec565b3480156105a357600080fd5b5061024b60135481565b3480156105b957600080fd5b506102a8610c8b565b3480156105ce57600080fd5b506102a86105dd3660046118f3565b610ddd565b3480156105ee57600080fd5b506102a86105fd36600461186d565b610ec8565b34801561060e57600080fd5b5061034861061d366004611896565b610f3e565b34801561062e57600080fd5b5061024b61063d36600461186d565b610f68565b34801561064e57600080fd5b5061024b600d5481565b34801561066457600080fd5b506102a8610673366004611896565b610fdc565b610680611024565b6040516370a0823160e01b815230600482015281906001600160a01b0382169063a9059cbb90339083906370a0823190602401602060405180830381865afa1580156106d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f4919061191f565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af115801561073f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107639190611938565b505050565b610770611024565b601280546000919062ff0000191662010000835b0217905550565b610793611024565b601055565b6002600154036107c35760405162461bcd60e51b81526004016107ba9061195a565b60405180910390fd5b60026001553360009081526008602052604090205460ff161561081a5760405162461bcd60e51b815260206004820152600f60248201526e105b1c9958591e48195b9d195c9959608a1b60448201526064016107ba565b336000908152600860205260408120805460ff19166001179055601254610100900460ff166002811115610850576108506118af565b146108935760405162461bcd60e51b8152602060048201526013602482015272131bdd1d195c9e48139bdd081cdd185c9d1959606a1b60448201526064016107ba565b600160125462010000900460ff1660018111156108b2576108b26118af565b146108cf5760405162461bcd60e51b81526004016107ba90611991565b60075434146108df60075461107e565b6040516020016108ef91906119de565b6040516020818303038152906040529061091c5760405162461bcd60e51b81526004016107ba9190611a31565b50600654600254111561097d5760405162461bcd60e51b815260206004820152602360248201527f4d6178696d756d204e756d626572207265616368656420666f7220206c6f747460448201526265727960e81b60648201526084016107ba565b333b156109c45760405162461bcd60e51b815260206004820152601560248201527421b7b73a3930b1ba1031b0b73737ba1032b73a32b960591b60448201526064016107ba565b60028054600181810183556000929092527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b031916331790558055565b610a13611024565b610a1b611187565b50565b610a26611024565b610a1b81610ec8565b610a37611024565b600655565b610a44611024565b601280546001919062ff000019166201000083610784565b610a64611024565b610a6e60006113c9565b565b610a78611024565b600555565b610a85611024565b6001601254610100900460ff166002811115610aa357610aa36118af565b14610ac05760405162461bcd60e51b81526004016107ba90611a64565b60405133904780156108fc02916000818181858888f19350505050158015610a1b573d6000803e3d6000fd5b600260015403610b0e5760405162461bcd60e51b81526004016107ba9061195a565b60026001556000601254610100900460ff166002811115610b3157610b316118af565b14610b745760405162461bcd60e51b8152602060048201526013602482015272131bdd1d195c9e48139bdd081cdd185c9d1959606a1b60448201526064016107ba565b600160125462010000900460ff166001811115610b9357610b936118af565b14610bb05760405162461bcd60e51b81526004016107ba90611991565b601054600e54610bc09190611ab1565b4211610c0e5760405162461bcd60e51b815260206004820152601f60248201527f6d696e206c6f7474657279206475726174696f6e206e6f74207061737365640060448201526064016107ba565b333b15610c555760405162461bcd60e51b815260206004820152601560248201527421b7b73a3930b1ba1031b0b73737ba1032b73a32b960591b60448201526064016107ba565b6005546002541015610c6e57610c69611419565b610c85565b6012805461ff001916610200179055610c8561157a565b60018055565b600260015403610cad5760405162461bcd60e51b81526004016107ba9061195a565b60026001908155601254610100900460ff166002811115610cd057610cd06118af565b14610d1d5760405162461bcd60e51b815260206004820152601760248201527f4c6f747465727920416c7265616479207374617274656400000000000000000060448201526064016107ba565b600160125462010000900460ff166001811115610d3c57610d3c6118af565b14610d595760405162461bcd60e51b81526004016107ba90611991565b601154600f54610d699190611ab1565b4211610dc35760405162461bcd60e51b8152602060048201526024808201527f6d696e206c6f74746572792070726570206475726174696f6e206e6f742070616044820152631cdcd95960e21b60648201526084016107ba565b6012805461ff0019169055600060045542600e5560018055565b610de5611024565b6001601254610100900460ff166002811115610e0357610e036118af565b14610e205760405162461bcd60e51b81526004016107ba90611a64565b606481610e2d8486611ab1565b610e379190611ab1565b1115610e785760405162461bcd60e51b815260206004820152601060248201526f063616e206e6f74206f766572203130360841b60448201526064016107ba565b60328310610eba5760405162461bcd60e51b815260206004820152600f60248201526e063616e206e6f74206c65737320353608c1b60448201526064016107ba565b600992909255600a55600b55565b610ed0611024565b6001600160a01b038116610f355760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016107ba565b610a1b816113c9565b60028181548110610f4e57600080fd5b6000918252602090912001546001600160a01b0316905081565b6040516370a0823160e01b815230600482015260009081906001600160a01b038416906370a0823190602401602060405180830381865afa158015610fb1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fd5919061191f565b9392505050565b610fe4611024565b6001601254610100900460ff166002811115611002576110026118af565b1461101f5760405162461bcd60e51b81526004016107ba90611a64565b600755565b6000546001600160a01b03163314610a6e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016107ba565b6060816000036110a55750506040805180820190915260018152600360fc1b602082015290565b8160005b81156110cf57806110b981611aca565b91506110c89050600a83611af9565b91506110a9565b60008167ffffffffffffffff8111156110ea576110ea611b0d565b6040519080825280601f01601f191660200182016040528015611114576020820181803683370190505b5090505b841561117f57611129600183611b23565b9150611136600a86611b36565b611141906030611ab1565b60f81b81838151811061115657611156611b4a565b60200101906001600160f81b031916908160001a905350611178600a86611af9565b9450611118565b949350505050565b60006002601254610100900460ff1660028111156111a7576111a76118af565b146111f45760405162461bcd60e51b815260206004820152601760248201527f2073656e64207072697a652077726f6e6720737461746500000000000000000060448201526064016107ba565b601254479060ff16611305576000806112156000546001600160a01b031690565b6001600160a01b03166064600a548561122e9190611b60565b6112389190611af9565b604051600081818185875af1925050503d8060008114611274576040519150601f19603f3d011682016040523d82523d6000602084013e611279565b606091505b506012805460ff1916831515908117909155919350915060ff16611302576000546001600160a01b03166001600160a01b03167f7a4c4fdf5d3172470d96d64c965b30de694852175efc7a6b546fb3bdbf76d1786064600a54866112dd9190611b60565b6112e79190611af9565b60405190815260200160405180910390a26001935050505090565b50505b60035460095460009182916001600160a01b03909116906064906113299086611b60565b6113339190611af9565b604051600081818185875af1925050503d806000811461136f576040519150601f19603f3d011682016040523d82523d6000602084013e611374565b606091505b5091509150816113bf576003546009546001600160a01b03909116907f977e2c32be07c8aa27bfe58f2bf200e11eca859b94d36e76e645fcaf1d4cc946906064906112dd9087611b60565b6000935050505090565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60005b60025460ff821610156115715760008060028360ff168154811061144257611442611b4a565b60009182526020822001546007546040516001600160a01b039092169290919081818185875af1925050503d8060008114611499576040519150601f19603f3d011682016040523d82523d6000602084013e61149e565b606091505b509150915060006008600060028660ff16815481106114bf576114bf611b4a565b6000918252602080832091909101546001600160a01b031683528201929092526040019020805460ff19169115159190911790558161155c5760028360ff168154811061150e5761150e611b4a565b600091825260209182902001546007546040519081526001600160a01b03909116917f1198b3902400a4722f08a21eb834e8f872109a5dab83213639d3670a10d8d40a910160405180910390a25b5050808061156990611b77565b91505061141c565b50610a6e611666565b600260008154811061158e5761158e611b4a565b600091825260209091200154600280546001600160a01b039092169160019081106115bb576115bb611b4a565b600091825260209091200154600280546001600160a01b03909216916115e390600190611b23565b815481106115f3576115f3611b4a565b600091825260209182902001546040516bffffffffffffffffffffffff19606095861b81169382019390935292841b8216603484015290921b909116604882015244605c82015242607c820152609c0160408051601f198184030181529190528051602090910120600455610a6e611711565b60005b60025460ff821610156116d85760006008600060028460ff168154811061169257611692611b4a565b6000918252602080832091909101546001600160a01b031683528201929092526040019020805460ff1916911515919091179055806116d081611b77565b915050611669565b5060408051600081526020810191829052516116f6916002916117f3565b50601280546000600d5561ffff191661010017905542600f55565b600060045460000361175c5760405162461bcd60e51b815260206004820152601460248201527363616e742066696e642072616e646f6d6e65737360601b60448201526064016107ba565b60025460045460009161176e91611b36565b90506002818154811061178357611783611b4a565b600091825260209091200154600380546001600160a01b0319166001600160a01b039092169190911790556117b6611187565b9150816000036117cc576117c8611666565b5050565b600d546117da906001611ab1565b600d8190556003036117c8576000600d556117c861157a565b828054828255906000526020600020908101928215611848579160200282015b8281111561184857825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190611813565b50611854929150611858565b5090565b5b808211156118545760008155600101611859565b60006020828403121561187f57600080fd5b81356001600160a01b0381168114610fd557600080fd5b6000602082840312156118a857600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b60208101600383106118d9576118d96118af565b91905290565b60208101600283106118d9576118d96118af565b60008060006060848603121561190857600080fd5b505081359360208301359350604090920135919050565b60006020828403121561193157600080fd5b5051919050565b60006020828403121561194a57600080fd5b81518015158114610fd557600080fd5b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6020808252600f908201526e131bdd1d195c9e4814dd1bdc1c1959608a1b604082015260600190565b60005b838110156119d55781810151838201526020016119bd565b50506000910152565b7f456e74727920666565206d75737420626520657175616c20746f3a2000000000815260008251611a1681601c8501602087016119ba565b630408ae8d60e31b601c939091019283015250602001919050565b6020815260008251806020840152611a508160408501602087016119ba565b601f01601f19169190910160400192915050565b6020808252601d908201527f43616e204e6f74207768696c65206c6f7474657279206f6e676f696e67000000604082015260600190565b634e487b7160e01b600052601160045260246000fd5b80820180821115611ac457611ac4611a9b565b92915050565b600060018201611adc57611adc611a9b565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082611b0857611b08611ae3565b500490565b634e487b7160e01b600052604160045260246000fd5b81810381811115611ac457611ac4611a9b565b600082611b4557611b45611ae3565b500690565b634e487b7160e01b600052603260045260246000fd5b8082028115828204841417611ac457611ac4611a9b565b600060ff821660ff8103611b8d57611b8d611a9b565b6001019291505056fea2646970667358221220352a7081b20503a3bfedab958d060d94b2ec80a494b99366971e5a635420780d64736f6c63430008110033",
    "bytecodeSha1": "9f8a8714fca67679f4ee4a5e2fb145864e8ac3e0",
    "compiler": {
        "evm_version": "istanbul",
        "optimizer": {
            "enabled": true,
            "runs": 200
        },
        "version": "0.8.17+commit.8df45f5f"
    },
    "contractName": "MyLottery",
    "coverageMap": {
        "branches": {
            "0": {
                "Ownable._checkOwner": {
                    "107": [
                        1422,
                        1445,
                        true
                    ]
                },
                "Ownable.transferOwnership": {
                    "106": [
                        2169,
                        2191,
                        true
                    ]
                }
            },
            "1": {},
            "2": {},
            "3": {
                "Strings.toString": {
                    "108": [
                        665,
                        675,
                        false
                    ]
                }
            },
            "4": {
                "MyLottery.afterFinish": {
                    "103": [
                        8614,
                        8629,
                        true
                    ],
                    "104": [
                        8811,
                        8824,
                        false
                    ],
                    "105": [
                        8928,
                        8942,
                        false
                    ]
                },
                "MyLottery.end_lottery": {
                    "86": [
                        4810,
                        4845,
                        true
                    ],
                    "87": [
                        4887,
                        4921,
                        true
                    ],
                    "88": [
                        4972,
                        5022,
                        true
                    ],
                    "89": [
                        5097,
                        5126,
                        true
                    ],
                    "90": [
                        5221,
                        5257,
                        false
                    ]
                },
                "MyLottery.enter_lottery": {
                    "80": [
                        3525,
                        3559,
                        true
                    ],
                    "81": [
                        3639,
                        3674,
                        true
                    ],
                    "82": [
                        3803,
                        3824,
                        true
                    ],
                    "83": [
                        4022,
                        4059,
                        true
                    ],
                    "84": [
                        4138,
                        4167,
                        true
                    ]
                },
                "MyLottery.not_enough_participant": {
                    "102": [
                        11194,
                        11198,
                        false
                    ]
                },
                "MyLottery.recoverEth": {
                    "85": [
                        8147,
                        8184,
                        true
                    ]
                },
                "MyLottery.sendPrizes": {
                    "98": [
                        9281,
                        9330,
                        true
                    ],
                    "99": [
                        9460,
                        9469,
                        false
                    ],
                    "100": [
                        9734,
                        9743,
                        false
                    ],
                    "101": [
                        10082,
                        10086,
                        false
                    ]
                },
                "MyLottery.setEntranceFee": {
                    "97": [
                        7524,
                        7561,
                        true
                    ]
                },
                "MyLottery.setPrizePercents": {
                    "94": [
                        6537,
                        6574,
                        true
                    ],
                    "95": [
                        6660,
                        6715,
                        true
                    ],
                    "96": [
                        6775,
                        6793,
                        true
                    ]
                },
                "MyLottery.start_lottery": {
                    "91": [
                        4325,
                        4362,
                        true
                    ],
                    "92": [
                        4429,
                        4463,
                        true
                    ],
                    "93": [
                        4514,
                        4566,
                        true
                    ]
                }
            }
        },
        "statements": {
            "0": {
                "Ownable._checkOwner": {
                    "44": [
                        1414,
                        1482
                    ]
                },
                "Ownable._transferOwnership": {
                    "58": [
                        2541,
                        2558
                    ],
                    "59": [
                        2568,
                        2613
                    ]
                },
                "Ownable.owner": {
                    "0": [
                        1266,
                        1279
                    ]
                },
                "Ownable.renounceOwnership": {
                    "16": [
                        1895,
                        1925
                    ]
                },
                "Ownable.transferOwnership": {
                    "39": [
                        2161,
                        2234
                    ],
                    "40": [
                        2244,
                        2272
                    ]
                }
            },
            "1": {},
            "2": {
                "Context._msgSender": {
                    "43": [
                        712,
                        729
                    ]
                }
            },
            "3": {
                "Strings.toString": {
                    "45": [
                        691,
                        701
                    ],
                    "46": [
                        807,
                        815
                    ],
                    "47": [
                        829,
                        839
                    ],
                    "48": [
                        941,
                        952
                    ],
                    "49": [
                        966,
                        1022
                    ],
                    "50": [
                        1036,
                        1047
                    ],
                    "51": [
                        1067,
                        1088
                    ]
                }
            },
            "4": {
                "MyLottery.afterFinish": {
                    "73": [
                        8606,
                        8654
                    ],
                    "74": [
                        8725,
                        8762
                    ],
                    "75": [
                        8773,
                        8796
                    ],
                    "76": [
                        8840,
                        8854
                    ],
                    "77": [
                        8885,
                        8910
                    ],
                    "78": [
                        8962,
                        8975
                    ],
                    "79": [
                        8993,
                        9011
                    ]
                },
                "MyLottery.calculate_winner": {
                    "64": [
                        5929,
                        6323
                    ],
                    "65": [
                        6333,
                        6346
                    ]
                },
                "MyLottery.clearPlayers": {
                    "66": [
                        11539,
                        11572
                    ],
                    "67": [
                        11520,
                        11523
                    ],
                    "68": [
                        11592,
                        11626
                    ],
                    "69": [
                        11636,
                        11672
                    ],
                    "70": [
                        11682,
                        11695
                    ],
                    "71": [
                        11705,
                        11722
                    ],
                    "72": [
                        11732,
                        11760
                    ]
                },
                "MyLottery.end_lottery": {
                    "20": [
                        4802,
                        4869
                    ],
                    "21": [
                        4879,
                        4941
                    ],
                    "22": [
                        4951,
                        5079
                    ],
                    "23": [
                        5089,
                        5152
                    ],
                    "24": [
                        5273,
                        5297
                    ],
                    "25": [
                        5328,
                        5376
                    ],
                    "26": [
                        5390,
                        5408
                    ]
                },
                "MyLottery.enter_lottery": {
                    "4": [
                        3517,
                        3579
                    ],
                    "5": [
                        3589,
                        3621
                    ],
                    "6": [
                        3631,
                        3698
                    ],
                    "7": [
                        3708,
                        3772
                    ],
                    "8": [
                        3782,
                        3991
                    ],
                    "9": [
                        4001,
                        4120
                    ],
                    "10": [
                        4130,
                        4193
                    ],
                    "11": [
                        4203,
                        4236
                    ]
                },
                "MyLottery.not_enough_participant": {
                    "60": [
                        11089,
                        11122
                    ],
                    "61": [
                        11218,
                        11268
                    ],
                    "62": [
                        10878,
                        10881
                    ],
                    "63": [
                        11302,
                        11316
                    ]
                },
                "MyLottery.recoverEth": {
                    "18": [
                        8126,
                        8239
                    ],
                    "19": [
                        8249,
                        8300
                    ]
                },
                "MyLottery.recoverTokens": {
                    "1": [
                        8432,
                        8490
                    ]
                },
                "MyLottery.retrySendPrizes": {
                    "12": [
                        9176,
                        9188
                    ]
                },
                "MyLottery.sendPrizes": {
                    "52": [
                        9260,
                        9379
                    ],
                    "53": [
                        9699,
                        9715
                    ],
                    "54": [
                        9763,
                        9887
                    ],
                    "55": [
                        9905,
                        9913
                    ],
                    "56": [
                        10102,
                        10220
                    ],
                    "57": [
                        10262,
                        10270
                    ]
                },
                "MyLottery.setEmergencyClose": {
                    "2": [
                        7389,
                        7418
                    ]
                },
                "MyLottery.setEmergencyOpen": {
                    "15": [
                        7285,
                        7318
                    ]
                },
                "MyLottery.setEntranceFee": {
                    "41": [
                        7503,
                        7616
                    ],
                    "42": [
                        7626,
                        7646
                    ]
                },
                "MyLottery.setLotteryDuration": {
                    "3": [
                        7188,
                        7215
                    ]
                },
                "MyLottery.setMaximumParticipants": {
                    "14": [
                        7770,
                        7812
                    ]
                },
                "MyLottery.setMinumumParticipants": {
                    "17": [
                        7057,
                        7099
                    ]
                },
                "MyLottery.setPrizePercents": {
                    "33": [
                        6516,
                        6629
                    ],
                    "34": [
                        6639,
                        6757
                    ],
                    "35": [
                        6767,
                        6813
                    ],
                    "36": [
                        6823,
                        6851
                    ],
                    "37": [
                        6861,
                        6889
                    ],
                    "38": [
                        6899,
                        6933
                    ]
                },
                "MyLottery.start_lottery": {
                    "27": [
                        4304,
                        4411
                    ],
                    "28": [
                        4421,
                        4483
                    ],
                    "29": [
                        4493,
                        4628
                    ],
                    "30": [
                        4638,
                        4672
                    ],
                    "31": [
                        4682,
                        4696
                    ],
                    "32": [
                        4706,
                        4736
                    ]
                },
                "MyLottery.transferOwner": {
                    "13": [
                        11399,
                        11426
                    ]
                }
            }
        }
    },
    "dependencies": [
        "OpenZeppelin/openzeppelin-contracts@4.7.0/Context",
        "IERC20",
        "OpenZeppelin/openzeppelin-contracts@4.7.0/Ownable",
        "OpenZeppelin/openzeppelin-contracts@4.7.0/ReentrancyGuard",
        "OpenZeppelin/openzeppelin-contracts@4.7.0/Strings"
    ],
    "deployedBytecode": "",
    "deployedSourceMap": "1221:10574:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1451:34;;;;;;;;;;;;;;;;;;;160:25:5;;;148:2;133:18;1451:34:4;;;;;;;;1931:21;;;;;;;;;;-1:-1:-1;1931:21:4;;;;;;;;;;;361:14:5;;354:22;336:41;;324:2;309:18;1931:21:4;196:187:5;8313:184:4;;;;;;;;;;-1:-1:-1;8313:184:4;;;;;:::i;:::-;;:::i;:::-;;7331:94;;;;;;;;;;;;;:::i;7112:110::-;;;;;;;;;;-1:-1:-1;7112:110:4;;;;;:::i;:::-;;:::i;1855:30::-;;;;;;;;;;;;;;;;1380:25;;;;;;;;;;;;;;;;3454:789;;;:::i;9120:75::-;;;;;;;;;;;;;:::i;1312:35::-;;;;;;;;;;-1:-1:-1;1312:35:4;;;;-1:-1:-1;;;;;1312:35:4;;;;;;-1:-1:-1;;;;;1044:32:5;;;1026:51;;1014:2;999:18;1312:35:4;864:219:5;11329:104:4;;;;;;;;;;-1:-1:-1;11329:104:4;;;;;:::i;:::-;;:::i;1727:28::-;;;;;;;;;;;;;;;;7659:160;;;;;;;;;;-1:-1:-1;7659:160:4;;;;;:::i;:::-;;:::i;1491:23::-;;;;;;;;;;;;;;;;7228:97;;;;;;;;;;;;;:::i;2605:22::-;;;;;;;;;;;;;;;;1831:101:0;;;;;;;;;;;;;:::i;2444:34:4:-;;;;;;;;;;-1:-1:-1;2444:34:4;;;;;;;;;;;;;;;;;;:::i;1625:27::-;;;;;;;;;;;;;;;;1201:85:0;;;;;;;;;;-1:-1:-1;1247:7:0;1273:6;-1:-1:-1;;;;;1273:6:0;1201:85;;1658:27:4;;;;;;;;;;;;;;;;1691:30;;;;;;;;;;;;;;;;1411:34;;;;;;;;;;;;;;;;6946:160;;;;;;;;;;-1:-1:-1;6946:160:4;;;;;:::i;:::-;;:::i;8075:232::-;;;;;;;;;;;;;:::i;1520:45::-;;;;;;;;;;-1:-1:-1;1520:45:4;;;;;:::i;:::-;;;;;;;;;;;;;;;;2549:26;;;;;;;;;;-1:-1:-1;2549:26:4;;;;;;;;;;;;;;;;;;:::i;1791:27::-;;;;;;;;;;;;;;;;1891:34;;;;;;;;;;;;;;;;1824:25;;;;;;;;;;;;;;;;4749:730;;;;;;;;;;;;;:::i;2581:18::-;;;;;;;;;;;;;;;;4249:494;;;;;;;;;;;;;:::i;6359:581::-;;;;;;;;;;-1:-1:-1;6359:581:4;;;;;:::i;:::-;;:::i;2081:198:0:-;;;;;;;;;;-1:-1:-1;2081:198:0;;;;;:::i;:::-;;:::i;1274:32:4:-;;;;;;;;;;-1:-1:-1;1274:32:4;;;;;:::i;:::-;;:::i;7825:244::-;;;;;;;;;;-1:-1:-1;7825:244:4;;;;;:::i;:::-;;:::i;1761:24::-;;;;;;;;;;;;;;;;7431:222;;;;;;;;;;-1:-1:-1;7431:222:4;;;;;:::i;:::-;;:::i;8313:184::-;1094:13:0;:11;:13::i;:::-;8459:30:4::1;::::0;-1:-1:-1;;;8459:30:4;;8483:4:::1;8459:30;::::0;::::1;1026:51:5::0;8409:12:4;;-1:-1:-1;;;;;8432:14:4;::::1;::::0;::::1;::::0;8447:10:::1;::::0;8432:14;;8459:15:::1;::::0;999:18:5;;8459:30:4::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8432:58;::::0;-1:-1:-1;;;;;;8432:58:4::1;::::0;;;;;;-1:-1:-1;;;;;2814:32:5;;;8432:58:4::1;::::0;::::1;2796:51:5::0;2863:18;;;2856:34;2769:18;;8432:58:4::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8377:120;8313:184:::0;:::o;7331:94::-;1094:13:0;:11;:13::i;:::-;7389:9:4::1;:29:::0;;7401:17:::1;::::0;7389:9;-1:-1:-1;;7389:29:4::1;::::0;7401:17;7389:29:::1;;;;;;7331:94::o:0;7112:110::-;1094:13:0;:11;:13::i;:::-;7188:15:4::1;:27:::0;7112:110::o;3454:789::-;1744:1:1;2325:7;;:19;2317:63;;;;-1:-1:-1;;;2317:63:1;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;3539:10:4::1;3525:25;::::0;;;:13:::1;:25;::::0;;;;;::::1;;:34;3517:62;;;::::0;-1:-1:-1;;;3517:62:4;;3745:2:5;3517:62:4::1;::::0;::::1;3727:21:5::0;3784:2;3764:18;;;3757:30;-1:-1:-1;;;3803:18:5;;;3796:45;3858:18;;3517:62:4::1;3543:339:5::0;3517:62:4::1;3603:10;3589:25;::::0;;;:13:::1;:25;::::0;;;;:32;;-1:-1:-1;;3589:32:4::1;3617:4;3589:32;::::0;;3639:13:::1;::::0;::::1;::::0;::::1;;;:35;::::0;::::1;;;;;;:::i;:::-;;3631:67;;;::::0;-1:-1:-1;;;3631:67:4;;4089:2:5;3631:67:4::1;::::0;::::1;4071:21:5::0;4128:2;4108:18;;;4101:30;-1:-1:-1;;;4147:18:5;;;4140:49;4206:18;;3631:67:4::1;3887:343:5::0;3631:67:4::1;3730:21;3717:9;::::0;;;::::1;;;:34;::::0;::::1;;;;;;:::i;:::-;;3708:64;;;;-1:-1:-1::0;;;3708:64:4::1;;;;;;;:::i;:::-;3816:8;;3803:9;:21;3917:26;3934:8;;3917:16;:26::i;:::-;3838:143;;;;;;;;:::i;:::-;;;;;;;;;;;;;3782:209;;;;;-1:-1:-1::0;;;3782:209:4::1;;;;;;;;:::i;:::-;-1:-1:-1::0;4040:19:4::1;::::0;4022:7:::1;:14:::0;:37:::1;;4001:119;;;::::0;-1:-1:-1;;;4001:119:4;;6041:2:5;4001:119:4::1;::::0;::::1;6023:21:5::0;6080:2;6060:18;;;6053:30;6119:34;6099:18;;;6092:62;-1:-1:-1;;;6170:18:5;;;6163:33;6213:19;;4001:119:4::1;5839:399:5::0;4001:119:4::1;4139:10;4138:24;:29:::0;4130:63:::1;;;::::0;-1:-1:-1;;;4130:63:4;;6445:2:5;4130:63:4::1;::::0;::::1;6427:21:5::0;6484:2;6464:18;;;6457:30;-1:-1:-1;;;6503:18:5;;;6496:51;6564:18;;4130:63:4::1;6243:345:5::0;4130:63:4::1;4203:7;:33:::0;;::::1;::::0;;::::1;::::0;;-1:-1:-1;4203:33:4;;;;;::::1;::::0;;-1:-1:-1;;;;;;4203:33:4::1;4224:10;4203:33;::::0;;2628:22:1;;3454:789:4:o;9120:75::-;1094:13:0;:11;:13::i;:::-;9176:12:4::1;:10;:12::i;:::-;;9120:75::o:0;11329:104::-;1094:13:0;:11;:13::i;:::-;11399:27:4::1;11417:8;11399:17;:27::i;7659:160::-:0;1094:13:0;:11;:13::i;:::-;7770:19:4::1;:42:::0;7659:160::o;7228:97::-;1094:13:0;:11;:13::i;:::-;7285:9:4::1;:33:::0;;7297:21:::1;::::0;7285:9;-1:-1:-1;;7285:33:4::1;::::0;7297:21;7285:33:::1;::::0;1831:101:0;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;6946:160:4:-;1094:13:0;:11;:13::i;:::-;7057:19:4::1;:42:::0;6946:160::o;8075:232::-;1094:13:0;:11;:13::i;:::-;8164:20:4::1;8147:13;::::0;::::1;::::0;::::1;;;:37;::::0;::::1;;;;;;:::i;:::-;;8126:113;;;;-1:-1:-1::0;;;8126:113:4::1;;;;;;;:::i;:::-;8249:51;::::0;8257:10:::1;::::0;8278:21:::1;8249:51:::0;::::1;;;::::0;::::1;::::0;;;8278:21;8257:10;8249:51;::::1;;;;;;;;;;;;;::::0;::::1;;;;4749:730:::0;1744:1:1;2325:7;;:19;2317:63;;;;-1:-1:-1;;;2317:63:1;;;;;;;:::i;:::-;1744:1;2455:7;:18;4827::4::1;4810:13;::::0;::::1;::::0;::::1;;;:35;::::0;::::1;;;;;;:::i;:::-;;4802:67;;;::::0;-1:-1:-1;;;4802:67:4;;4089:2:5;4802:67:4::1;::::0;::::1;4071:21:5::0;4128:2;4108:18;;;4101:30;-1:-1:-1;;;4147:18:5;;;4140:49;4206:18;;4802:67:4::1;3887:343:5::0;4802:67:4::1;4900:21;4887:9;::::0;;;::::1;;;:34;::::0;::::1;;;;;;:::i;:::-;;4879:62;;;;-1:-1:-1::0;;;4879:62:4::1;;;;;;;:::i;:::-;5006:15;;4991:12;;:30;;;;:::i;:::-;4972:15;:50;4951:128;;;::::0;-1:-1:-1;;;4951:128:4;;7415:2:5;4951:128:4::1;::::0;::::1;7397:21:5::0;7454:2;7434:18;;;7427:30;7493:33;7473:18;;;7466:61;7544:18;;4951:128:4::1;7213:355:5::0;4951:128:4::1;5098:10;5097:24;:29:::0;5089:63:::1;;;::::0;-1:-1:-1;;;5089:63:4;;6445:2:5;5089:63:4::1;::::0;::::1;6427:21:5::0;6484:2;6464:18;;;6457:30;-1:-1:-1;;;6503:18:5;;;6496:51;6564:18;;5089:63:4::1;6243:345:5::0;5089:63:4::1;5238:19;::::0;5221:7:::1;:14:::0;:36:::1;5217:202;;;5273:24;:22;:24::i;:::-;5217:202;;;5328:13;:48:::0;;-1:-1:-1;;5328:48:4::1;::::0;::::1;::::0;;5390:18:::1;:16;:18::i;:::-;1701:1:1::0;2628:22;;4749:730:4:o;4249:494::-;1744:1:1;2325:7;;:19;2317:63;;;;-1:-1:-1;;;2317:63:1;;;;;;;:::i;:::-;1744:1;2455:7;:18;;;4325:13:4::1;::::0;::::1;::::0;::::1;;;:37;::::0;::::1;;;;;;:::i;:::-;;4304:107;;;::::0;-1:-1:-1;;;4304:107:4;;7775:2:5;4304:107:4::1;::::0;::::1;7757:21:5::0;7814:2;7794:18;;;7787:30;7853:25;7833:18;;;7826:53;7896:18;;4304:107:4::1;7573:347:5::0;4304:107:4::1;4442:21;4429:9;::::0;;;::::1;;;:34;::::0;::::1;;;;;;:::i;:::-;;4421:62;;;;-1:-1:-1::0;;;4421:62:4::1;;;;;;;:::i;:::-;4546:19;;4533:10;;:32;;;;:::i;:::-;4514:15;:52;4493:135;;;::::0;-1:-1:-1;;;4493:135:4;;8127:2:5;4493:135:4::1;::::0;::::1;8109:21:5::0;8166:2;8146:18;;;8139:30;8205:34;8185:18;;;8178:62;-1:-1:-1;;;8256:18:5;;;8249:34;8300:19;;4493:135:4::1;7925:400:5::0;4493:135:4::1;4638:13;:34:::0;;-1:-1:-1;;4638:34:4::1;::::0;;4654:18:::1;4682:10;:14:::0;4721:15:::1;-1:-1:-1::0;4706:30:4;-1:-1:-1;2628:22:1;;4249:494:4:o;6359:581::-;1094:13:0;:11;:13::i;:::-;6554:20:4::1;6537:13;::::0;::::1;::::0;::::1;;;:37;::::0;::::1;;;;;;:::i;:::-;;6516:113;;;;-1:-1:-1::0;;;6516:113:4::1;;;;;;;:::i;:::-;6712:3;6692:16:::0;6660:29:::1;6676:13:::0;6660;:29:::1;:::i;:::-;:48;;;;:::i;:::-;:55;;6639:118;;;::::0;-1:-1:-1;;;6639:118:4;;8532:2:5;6639:118:4::1;::::0;::::1;8514:21:5::0;8571:2;8551:18;;;8544:30;-1:-1:-1;;;8590:18:5;;;8583:46;8646:18;;6639:118:4::1;8330:340:5::0;6639:118:4::1;6791:2;6775:13;:18;6767:46;;;::::0;-1:-1:-1;;;6767:46:4;;8877:2:5;6767:46:4::1;::::0;::::1;8859:21:5::0;8916:2;8896:18;;;8889:30;-1:-1:-1;;;8935:18:5;;;8928:45;8990:18;;6767:46:4::1;8675:339:5::0;6767:46:4::1;6823:12;:28:::0;;;;6861:12:::1;:28:::0;6899:15:::1;:34:::0;6359:581::o;2081:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:0;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:0;;9221:2:5;2161:73:0::1;::::0;::::1;9203:21:5::0;9260:2;9240:18;;;9233:30;9299:34;9279:18;;;9272:62;-1:-1:-1;;;9350:18:5;;;9343:36;9396:19;;2161:73:0::1;9019:402:5::0;2161:73:0::1;2244:28;2263:8;2244:18;:28::i;1274:32:4:-:0;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1274:32:4;;-1:-1:-1;1274:32:4;:::o;7825:244::-;7962:76;;-1:-1:-1;;;7962:76:4;;8023:4;7962:76;;;1026:51:5;7921:7:4;;;;-1:-1:-1;;;;;7962:39:4;;;;;999:18:5;;7962:76:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7944:94;7825:244;-1:-1:-1;;;7825:244:4:o;7431:222::-;1094:13:0;:11;:13::i;:::-;7541:20:4::1;7524:13;::::0;::::1;::::0;::::1;;;:37;::::0;::::1;;;;;;:::i;:::-;;7503:113;;;;-1:-1:-1::0;;;7503:113:4::1;;;;;;;:::i;:::-;7626:8;:20:::0;7431:222::o;1359:130:0:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;719:10:2;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;9628:2:5;1414:68:0;;;9610:21:5;;;9647:18;;;9640:30;9706:34;9686:18;;;9679:62;9758:18;;1414:68:0;9426:356:5;392:703:3;448:13;665:5;674:1;665:10;661:51;;-1:-1:-1;;691:10:3;;;;;;;;;;;;-1:-1:-1;;;691:10:3;;;;;392:703::o;661:51::-;736:5;721:12;775:75;782:9;;775:75;;807:8;;;;:::i;:::-;;-1:-1:-1;829:10:3;;-1:-1:-1;837:2:3;829:10;;:::i;:::-;;;775:75;;;859:19;891:6;881:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;881:17:3;;859:39;;908:150;915:10;;908:150;;941:11;951:1;941:11;;:::i;:::-;;-1:-1:-1;1009:10:3;1017:2;1009:5;:10;:::i;:::-;996:24;;:2;:24;:::i;:::-;983:39;;966:6;973;966:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;966:56:3;;;;;;;;-1:-1:-1;1036:11:3;1045:2;1036:11;;:::i;:::-;;;908:150;;;1081:6;392:703;-1:-1:-1;;;;392:703:3:o;9201:1076:4:-;9241:7;9298:32;9281:13;;;;;;;:49;;;;;;;;:::i;:::-;;9260:119;;;;-1:-1:-1;;;9260:119:4;;10900:2:5;9260:119:4;;;10882:21:5;10939:2;10919:18;;;10912:30;10978:25;10958:18;;;10951:53;11021:18;;9260:119:4;10698:347:5;9260:119:4;9460:9;;9411:21;;9460:9;;9442:496;;9564:9;9575:17;9596:7;1247::0;1273:6;-1:-1:-1;;;;;1273:6:0;;1201:85;9596:7:4;-1:-1:-1;;;;;9596:12:4;9664:3;9648:12;;9634:11;:26;;;;:::i;:::-;9633:34;;;;:::i;:::-;9596:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9699:9:4;:16;;-1:-1:-1;;9699:16:4;;;;;;;;;;;;-1:-1:-1;9563:122:4;-1:-1:-1;9699:16:4;9734:9;9729:199;;1247:7:0;1273:6;-1:-1:-1;;;;;1273:6:0;-1:-1:-1;;;;;9768:119:4;;9866:3;9850:12;;9836:11;:26;;;;:::i;:::-;9835:34;;;;:::i;:::-;9768:119;;160:25:5;;;148:2;133:18;9768:119:4;;;;;;;9912:1;9905:8;;;;;9201:1076;:::o;9729:199::-;9549:389;;9442:496;9981:12;;10034;;9949:9;;;;-1:-1:-1;;;;;9981:12:4;;;;10050:3;;10020:26;;:11;:26;:::i;:::-;10019:34;;;;:::i;:::-;9981:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9948:119;;;;10082:4;10077:176;;10142:12;;10187;;-1:-1:-1;;;;;10142:12:4;;;;10107:113;;10203:3;;10173:26;;:11;:26;:::i;10077:176::-;10269:1;10262:8;;;;;9201:1076;:::o;2433:187:0:-;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;10787:536:4:-;10845:7;10840:453;10862:7;:14;10858:18;;;;10840:453;;;10977:9;10988:17;11009:7;11017:1;11009:10;;;;;;;;;;:::i;:::-;;;;;;;;;;11032:8;;11009:66;;-1:-1:-1;;;;;11009:10:4;;;;11032:8;;11009:66;;:10;:66;11032:8;11009:10;:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10976:99;;;;11117:5;11089:13;:25;11103:7;11111:1;11103:10;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;11103:10:4;11089:25;;;;;;;;;;;;:33;;-1:-1:-1;;11089:33:4;;;;;;;;;;11194:4;11189:94;;11247:7;11255:1;11247:10;;;;;;;;;;:::i;:::-;;;;;;;;;;;;11259:8;;11223:45;;160:25:5;;;-1:-1:-1;;;;;11247:10:4;;;;11223:45;;133:18:5;11223:45:4;;;;;;;11189:94;10883:410;;10878:3;;;;;:::i;:::-;;;;10840:453;;;;11302:14;:12;:14::i;5805:548::-;6028:7;6036:1;6028:10;;;;;;;;:::i;:::-;;;;;;;;;;;6073:7;:10;;-1:-1:-1;;;;;6028:10:4;;;;;;6073;;;;;;:::i;:::-;;;;;;;;;;;6105:7;6113:14;;-1:-1:-1;;;;;6073:10:4;;;;6113:18;;6073:10;;6113:18;:::i;:::-;6105:27;;;;;;;;:::i;:::-;;;;;;;;;;;;5990:309;;-1:-1:-1;;11972:2:5;11968:15;;;11964:24;;5990:309:4;;;11952:37:5;;;;12023:15;;;12019:24;;12005:12;;;11998:46;12078:15;;;;;;12060:12;;;12053:46;6154:16:4;12115:12:5;;;12108:28;6238:15:4;12152:12:5;;;12145:28;12189:13;;5990:309:4;;;-1:-1:-1;;5990:309:4;;;;;;;;;5963:350;;5990:309;5963:350;;;;5929:10;:394;6333:13;:11;:13::i;11439:354::-;11487:7;11482:101;11504:7;:14;11500:18;;;;11482:101;;;11567:5;11539:13;:25;11553:7;11561:1;11553:10;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;11553:10:4;11539:25;;;;;;;;;;;;:33;;-1:-1:-1;;11539:33:4;;;;;;;;;;11520:3;;;;:::i;:::-;;;;11482:101;;;-1:-1:-1;11602:24:4;;;11624:1;11602:24;;;;;;;;;11592:34;;;:7;;:34;:::i;:::-;-1:-1:-1;11636:13:4;:36;;-1:-1:-1;11682:9:4;:13;-1:-1:-1;;11705:17:4;11636:36;11705:17;;;11745:15;11732:10;:28;11439:354::o;8503:611::-;8576:16;8614:10;;8628:1;8614:15;8606:48;;;;-1:-1:-1;;;8606:48:4;;12415:2:5;8606:48:4;;;12397:21:5;12454:2;12434:18;;;12427:30;-1:-1:-1;;;12473:18:5;;;12466:50;12533:18;;8606:48:4;12213:344:5;8606:48:4;8701:7;:14;8688:10;;8664:21;;8688:27;;;:::i;:::-;8664:51;;8740:7;8748:13;8740:22;;;;;;;;:::i;:::-;;;;;;;;;;;8725:12;:37;;-1:-1:-1;;;;;;8725:37:4;-1:-1:-1;;;;;8740:22:4;;;8725:37;;;;;;8784:12;:10;:12::i;:::-;8773:23;;8811:8;8823:1;8811:13;8807:251;;8840:14;:12;:14::i;:::-;8535:579;;8503:611::o;8807:251::-;8897:9;;:13;;8909:1;8897:13;:::i;:::-;8885:9;:25;;;8941:1;8928:14;8924:124;;8974:1;8962:9;:13;8993:18;:16;:18::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;388:286:5;447:6;500:2;488:9;479:7;475:23;471:32;468:52;;;516:1;513;506:12;468:52;542:23;;-1:-1:-1;;;;;594:31:5;;584:42;;574:70;;640:1;637;630:12;679:180;738:6;791:2;779:9;770:7;766:23;762:32;759:52;;;807:1;804;797:12;759:52;-1:-1:-1;830:23:5;;679:180;-1:-1:-1;679:180:5:o;1270:127::-;1331:10;1326:3;1322:20;1319:1;1312:31;1362:4;1359:1;1352:15;1386:4;1383:1;1376:15;1402:248;1551:2;1536:18;;1584:1;1573:13;;1563:47;;1590:18;;:::i;:::-;1619:25;;;1402:248;:::o;1863:244::-;2008:2;1993:18;;2041:1;2030:13;;2020:47;;2047:18;;:::i;2112:316::-;2189:6;2197;2205;2258:2;2246:9;2237:7;2233:23;2229:32;2226:52;;;2274:1;2271;2264:12;2226:52;-1:-1:-1;;2297:23:5;;;2367:2;2352:18;;2339:32;;-1:-1:-1;2418:2:5;2403:18;;;2390:32;;2112:316;-1:-1:-1;2112:316:5:o;2433:184::-;2503:6;2556:2;2544:9;2535:7;2531:23;2527:32;2524:52;;;2572:1;2569;2562:12;2524:52;-1:-1:-1;2595:16:5;;2433:184;-1:-1:-1;2433:184:5:o;2901:277::-;2968:6;3021:2;3009:9;3000:7;2996:23;2992:32;2989:52;;;3037:1;3034;3027:12;2989:52;3069:9;3063:16;3122:5;3115:13;3108:21;3101:5;3098:32;3088:60;;3144:1;3141;3134:12;3183:355;3385:2;3367:21;;;3424:2;3404:18;;;3397:30;3463:33;3458:2;3443:18;;3436:61;3529:2;3514:18;;3183:355::o;4235:339::-;4437:2;4419:21;;;4476:2;4456:18;;;4449:30;-1:-1:-1;;;4510:2:5;4495:18;;4488:45;4565:2;4550:18;;4235:339::o;4579:250::-;4664:1;4674:113;4688:6;4685:1;4682:13;4674:113;;;4764:11;;;4758:18;4745:11;;;4738:39;4710:2;4703:10;4674:113;;;-1:-1:-1;;4821:1:5;4803:16;;4796:27;4579:250::o;4834:599::-;5176:30;5171:3;5164:43;5146:3;5236:6;5230:13;5252:75;5320:6;5315:2;5310:3;5306:12;5299:4;5291:6;5287:17;5252:75;:::i;:::-;-1:-1:-1;;;5386:2:5;5346:16;;;;5378:11;;;5371:27;-1:-1:-1;5422:4:5;5414:13;;4834:599;-1:-1:-1;4834:599:5:o;5438:396::-;5587:2;5576:9;5569:21;5550:4;5619:6;5613:13;5662:6;5657:2;5646:9;5642:18;5635:34;5678:79;5750:6;5745:2;5734:9;5730:18;5725:2;5717:6;5713:15;5678:79;:::i;:::-;5818:2;5797:15;-1:-1:-1;;5793:29:5;5778:45;;;;5825:2;5774:54;;5438:396;-1:-1:-1;;5438:396:5:o;6593:353::-;6795:2;6777:21;;;6834:2;6814:18;;;6807:30;6873:31;6868:2;6853:18;;6846:59;6937:2;6922:18;;6593:353::o;6951:127::-;7012:10;7007:3;7003:20;7000:1;6993:31;7043:4;7040:1;7033:15;7067:4;7064:1;7057:15;7083:125;7148:9;;;7169:10;;;7166:36;;;7182:18;;:::i;:::-;7083:125;;;;:::o;9787:135::-;9826:3;9847:17;;;9844:43;;9867:18;;:::i;:::-;-1:-1:-1;9914:1:5;9903:13;;9787:135::o;9927:127::-;9988:10;9983:3;9979:20;9976:1;9969:31;10019:4;10016:1;10009:15;10043:4;10040:1;10033:15;10059:120;10099:1;10125;10115:35;;10130:18;;:::i;:::-;-1:-1:-1;10164:9:5;;10059:120::o;10184:127::-;10245:10;10240:3;10236:20;10233:1;10226:31;10276:4;10273:1;10266:15;10300:4;10297:1;10290:15;10316:128;10383:9;;;10404:11;;;10401:37;;;10418:18;;:::i;10449:112::-;10481:1;10507;10497:35;;10512:18;;:::i;:::-;-1:-1:-1;10546:9:5;;10449:112::o;10566:127::-;10627:10;10622:3;10618:20;10615:1;10608:31;10658:4;10655:1;10648:15;10682:4;10679:1;10672:15;11050:168;11123:9;;;11154;;11171:15;;;11165:22;;11151:37;11141:71;;11192:18;;:::i;11433:175::-;11470:3;11514:4;11507:5;11503:16;11543:4;11534:7;11531:17;11528:43;;11551:18;;:::i;:::-;11600:1;11587:15;;11433:175;-1:-1:-1;;11433:175:5:o",
    "language": "Solidity",
    "natspec": {
        "kind": "dev",
        "methods": {
            "owner()": {
                "details": "Returns the address of the current owner."
            },
            "renounceOwnership()": {
                "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
            },
            "transferOwnership(address)": {
                "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
            }
        },
        "version": 1
    },
    "offset": [
        1221,
        11795
    ],
    "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x230 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x12E JUMPI DUP1 PUSH4 0xD70FA7DE GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5E2 JUMPI DUP1 PUSH4 0xF71D96CB EQ PUSH2 0x602 JUMPI DUP1 PUSH4 0xF8B2CB4F EQ PUSH2 0x622 JUMPI DUP1 PUSH4 0xFAEA18C6 EQ PUSH2 0x642 JUMPI DUP1 PUSH4 0xFE56F5A0 EQ PUSH2 0x658 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD70FA7DE EQ PUSH2 0x56C JUMPI DUP1 PUSH4 0xD718AEA9 EQ PUSH2 0x582 JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x597 JUMPI DUP1 PUSH4 0xEE44ABB2 EQ PUSH2 0x5AD JUMPI DUP1 PUSH4 0xF2640E10 EQ PUSH2 0x5C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBCDB446B GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0xBCDB446B EQ PUSH2 0x4CE JUMPI DUP1 PUSH4 0xBE55C9C9 EQ PUSH2 0x4E3 JUMPI DUP1 PUSH4 0xCAA6FEA4 EQ PUSH2 0x513 JUMPI DUP1 PUSH4 0xCD8CC844 EQ PUSH2 0x540 JUMPI DUP1 PUSH4 0xCF23AA38 EQ PUSH2 0x556 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x44E JUMPI DUP1 PUSH4 0x95D12000 EQ PUSH2 0x46C JUMPI DUP1 PUSH4 0x9BB57718 EQ PUSH2 0x482 JUMPI DUP1 PUSH4 0xA6D811EA EQ PUSH2 0x498 JUMPI DUP1 PUSH4 0xB4989917 EQ PUSH2 0x4AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4F8C70CF GT PUSH2 0x1BC JUMPI DUP1 PUSH4 0x6531E5C4 GT PUSH2 0x180 JUMPI DUP1 PUSH4 0x6531E5C4 EQ PUSH2 0x3CC JUMPI DUP1 PUSH4 0x69EBE78E EQ PUSH2 0x3E1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3F7 JUMPI DUP1 PUSH4 0x81447999 EQ PUSH2 0x40C JUMPI DUP1 PUSH4 0x81FB84FB EQ PUSH2 0x438 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4F8C70CF EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0x4FB2E45D EQ PUSH2 0x360 JUMPI DUP1 PUSH4 0x501D0780 EQ PUSH2 0x380 JUMPI DUP1 PUSH4 0x56923710 EQ PUSH2 0x396 JUMPI DUP1 PUSH4 0x59FE8C84 EQ PUSH2 0x3B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2B58150B GT PUSH2 0x203 JUMPI DUP1 PUSH4 0x2B58150B EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0x2D97902F EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0x36013189 EQ PUSH2 0x2F5 JUMPI DUP1 PUSH4 0x382E5E7A EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0x4A8466E9 EQ PUSH2 0x313 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4283412 EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0xB3FF280 EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0x16114ACD EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0x1B30D5DF EQ PUSH2 0x2AA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x241 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24B PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x12 SLOAD PUSH2 0x278 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x255 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x294 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A8 PUSH2 0x2A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x186D JUMP JUMPDEST PUSH2 0x678 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A8 PUSH2 0x768 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A8 PUSH2 0x2DA CALLDATASIZE PUSH1 0x4 PUSH2 0x1896 JUMP JUMPDEST PUSH2 0x78B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24B PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x301 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24B PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2A8 PUSH2 0x798 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A8 PUSH2 0xA0B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x334 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x348 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x255 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A8 PUSH2 0x37B CALLDATASIZE PUSH1 0x4 PUSH2 0x186D JUMP JUMPDEST PUSH2 0xA1E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24B PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A8 PUSH2 0x3B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1896 JUMP JUMPDEST PUSH2 0xA2F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24B PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A8 PUSH2 0xA3C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24B PUSH1 0x14 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x403 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A8 PUSH2 0xA5C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x418 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x12 SLOAD PUSH2 0x42B SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x18C5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x444 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24B PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x348 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x478 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24B PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24B PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24B PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A8 PUSH2 0x4C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1896 JUMP JUMPDEST PUSH2 0xA70 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A8 PUSH2 0xA7D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x278 PUSH2 0x4FE CALLDATASIZE PUSH1 0x4 PUSH2 0x186D JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x12 SLOAD PUSH2 0x533 SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x18DF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24B PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x562 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24B PUSH1 0x11 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x578 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24B PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A8 PUSH2 0xAEC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24B PUSH1 0x13 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A8 PUSH2 0xC8B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A8 PUSH2 0x5DD CALLDATASIZE PUSH1 0x4 PUSH2 0x18F3 JUMP JUMPDEST PUSH2 0xDDD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A8 PUSH2 0x5FD CALLDATASIZE PUSH1 0x4 PUSH2 0x186D JUMP JUMPDEST PUSH2 0xEC8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x60E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x348 PUSH2 0x61D CALLDATASIZE PUSH1 0x4 PUSH2 0x1896 JUMP JUMPDEST PUSH2 0xF3E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x62E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24B PUSH2 0x63D CALLDATASIZE PUSH1 0x4 PUSH2 0x186D JUMP JUMPDEST PUSH2 0xF68 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x64E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24B PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x664 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A8 PUSH2 0x673 CALLDATASIZE PUSH1 0x4 PUSH2 0x1896 JUMP JUMPDEST PUSH2 0xFDC JUMP JUMPDEST PUSH2 0x680 PUSH2 0x1024 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 CALLER SWAP1 DUP4 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6D0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6F4 SWAP2 SWAP1 PUSH2 0x191F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x73F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x763 SWAP2 SWAP1 PUSH2 0x1938 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x770 PUSH2 0x1024 JUMP JUMPDEST PUSH1 0x12 DUP1 SLOAD PUSH1 0x0 SWAP2 SWAP1 PUSH3 0xFF0000 NOT AND PUSH3 0x10000 DUP4 JUMPDEST MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x793 PUSH2 0x1024 JUMP JUMPDEST PUSH1 0x10 SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x7C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BA SWAP1 PUSH2 0x195A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x81A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x105B1C9958591E48195B9D195C9959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7BA JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x12 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x850 JUMPI PUSH2 0x850 PUSH2 0x18AF JUMP JUMPDEST EQ PUSH2 0x893 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x131BDD1D195C9E48139BDD081CDD185C9D1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7BA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x12 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x8B2 JUMPI PUSH2 0x8B2 PUSH2 0x18AF JUMP JUMPDEST EQ PUSH2 0x8CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BA SWAP1 PUSH2 0x1991 JUMP JUMPDEST PUSH1 0x7 SLOAD CALLVALUE EQ PUSH2 0x8DF PUSH1 0x7 SLOAD PUSH2 0x107E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8EF SWAP2 SWAP1 PUSH2 0x19DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH2 0x91C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BA SWAP2 SWAP1 PUSH2 0x1A31 JUMP JUMPDEST POP PUSH1 0x6 SLOAD PUSH1 0x2 SLOAD GT ISZERO PUSH2 0x97D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6178696D756D204E756D626572207265616368656420666F7220206C6F7474 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657279 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7BA JUMP JUMPDEST CALLER EXTCODESIZE ISZERO PUSH2 0x9C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x21B7B73A3930B1BA1031B0B73737BA1032B73A32B9 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7BA JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP4 SSTORE PUSH1 0x0 SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE DUP1 SSTORE JUMP JUMPDEST PUSH2 0xA13 PUSH2 0x1024 JUMP JUMPDEST PUSH2 0xA1B PUSH2 0x1187 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xA26 PUSH2 0x1024 JUMP JUMPDEST PUSH2 0xA1B DUP2 PUSH2 0xEC8 JUMP JUMPDEST PUSH2 0xA37 PUSH2 0x1024 JUMP JUMPDEST PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH2 0xA44 PUSH2 0x1024 JUMP JUMPDEST PUSH1 0x12 DUP1 SLOAD PUSH1 0x1 SWAP2 SWAP1 PUSH3 0xFF0000 NOT AND PUSH3 0x10000 DUP4 PUSH2 0x784 JUMP JUMPDEST PUSH2 0xA64 PUSH2 0x1024 JUMP JUMPDEST PUSH2 0xA6E PUSH1 0x0 PUSH2 0x13C9 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xA78 PUSH2 0x1024 JUMP JUMPDEST PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH2 0xA85 PUSH2 0x1024 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x12 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xAA3 JUMPI PUSH2 0xAA3 PUSH2 0x18AF JUMP JUMPDEST EQ PUSH2 0xAC0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BA SWAP1 PUSH2 0x1A64 JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xA1B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xB0E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BA SWAP1 PUSH2 0x195A JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x0 PUSH1 0x12 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xB31 JUMPI PUSH2 0xB31 PUSH2 0x18AF JUMP JUMPDEST EQ PUSH2 0xB74 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x131BDD1D195C9E48139BDD081CDD185C9D1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7BA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x12 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xB93 JUMPI PUSH2 0xB93 PUSH2 0x18AF JUMP JUMPDEST EQ PUSH2 0xBB0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BA SWAP1 PUSH2 0x1991 JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0xE SLOAD PUSH2 0xBC0 SWAP2 SWAP1 PUSH2 0x1AB1 JUMP JUMPDEST TIMESTAMP GT PUSH2 0xC0E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6D696E206C6F7474657279206475726174696F6E206E6F742070617373656400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7BA JUMP JUMPDEST CALLER EXTCODESIZE ISZERO PUSH2 0xC55 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x21B7B73A3930B1BA1031B0B73737BA1032B73A32B9 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7BA JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x2 SLOAD LT ISZERO PUSH2 0xC6E JUMPI PUSH2 0xC69 PUSH2 0x1419 JUMP JUMPDEST PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x12 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x200 OR SWAP1 SSTORE PUSH2 0xC85 PUSH2 0x157A JUMP JUMPDEST PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xCAD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BA SWAP1 PUSH2 0x195A JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SWAP1 DUP2 SSTORE PUSH1 0x12 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xCD0 JUMPI PUSH2 0xCD0 PUSH2 0x18AF JUMP JUMPDEST EQ PUSH2 0xD1D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C6F747465727920416C72656164792073746172746564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7BA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x12 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xD3C JUMPI PUSH2 0xD3C PUSH2 0x18AF JUMP JUMPDEST EQ PUSH2 0xD59 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BA SWAP1 PUSH2 0x1991 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0xF SLOAD PUSH2 0xD69 SWAP2 SWAP1 PUSH2 0x1AB1 JUMP JUMPDEST TIMESTAMP GT PUSH2 0xDC3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x6D696E206C6F74746572792070726570206475726174696F6E206E6F74207061 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x1CDCD959 PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7BA JUMP JUMPDEST PUSH1 0x12 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x0 PUSH1 0x4 SSTORE TIMESTAMP PUSH1 0xE SSTORE PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH2 0xDE5 PUSH2 0x1024 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x12 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xE03 JUMPI PUSH2 0xE03 PUSH2 0x18AF JUMP JUMPDEST EQ PUSH2 0xE20 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BA SWAP1 PUSH2 0x1A64 JUMP JUMPDEST PUSH1 0x64 DUP2 PUSH2 0xE2D DUP5 DUP7 PUSH2 0x1AB1 JUMP JUMPDEST PUSH2 0xE37 SWAP2 SWAP1 PUSH2 0x1AB1 JUMP JUMPDEST GT ISZERO PUSH2 0xE78 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x63616E206E6F74206F7665722031303 PUSH1 0x84 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7BA JUMP JUMPDEST PUSH1 0x32 DUP4 LT PUSH2 0xEBA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x63616E206E6F74206C65737320353 PUSH1 0x8C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7BA JUMP JUMPDEST PUSH1 0x9 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0xA SSTORE PUSH1 0xB SSTORE JUMP JUMPDEST PUSH2 0xED0 PUSH2 0x1024 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xF35 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7BA JUMP JUMPDEST PUSH2 0xA1B DUP2 PUSH2 0x13C9 JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xF4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFB1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFD5 SWAP2 SWAP1 PUSH2 0x191F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xFE4 PUSH2 0x1024 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x12 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1002 JUMPI PUSH2 0x1002 PUSH2 0x18AF JUMP JUMPDEST EQ PUSH2 0x101F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BA SWAP1 PUSH2 0x1A64 JUMP JUMPDEST PUSH1 0x7 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA6E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7BA JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 SUB PUSH2 0x10A5 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x10CF JUMPI DUP1 PUSH2 0x10B9 DUP2 PUSH2 0x1ACA JUMP JUMPDEST SWAP2 POP PUSH2 0x10C8 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x1AF9 JUMP JUMPDEST SWAP2 POP PUSH2 0x10A9 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10EA JUMPI PUSH2 0x10EA PUSH2 0x1B0D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1114 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x117F JUMPI PUSH2 0x1129 PUSH1 0x1 DUP4 PUSH2 0x1B23 JUMP JUMPDEST SWAP2 POP PUSH2 0x1136 PUSH1 0xA DUP7 PUSH2 0x1B36 JUMP JUMPDEST PUSH2 0x1141 SWAP1 PUSH1 0x30 PUSH2 0x1AB1 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1156 JUMPI PUSH2 0x1156 PUSH2 0x1B4A JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x1178 PUSH1 0xA DUP7 PUSH2 0x1AF9 JUMP JUMPDEST SWAP5 POP PUSH2 0x1118 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x12 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x11A7 JUMPI PUSH2 0x11A7 PUSH2 0x18AF JUMP JUMPDEST EQ PUSH2 0x11F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x2073656E64207072697A652077726F6E67207374617465000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7BA JUMP JUMPDEST PUSH1 0x12 SLOAD SELFBALANCE SWAP1 PUSH1 0xFF AND PUSH2 0x1305 JUMPI PUSH1 0x0 DUP1 PUSH2 0x1215 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x64 PUSH1 0xA SLOAD DUP6 PUSH2 0x122E SWAP2 SWAP1 PUSH2 0x1B60 JUMP JUMPDEST PUSH2 0x1238 SWAP2 SWAP1 PUSH2 0x1AF9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1274 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1279 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x12 DUP1 SLOAD PUSH1 0xFF NOT AND DUP4 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 SWAP4 POP SWAP2 POP PUSH1 0xFF AND PUSH2 0x1302 JUMPI PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x7A4C4FDF5D3172470D96D64C965B30DE694852175EFC7A6B546FB3BDBF76D178 PUSH1 0x64 PUSH1 0xA SLOAD DUP7 PUSH2 0x12DD SWAP2 SWAP1 PUSH2 0x1B60 JUMP JUMPDEST PUSH2 0x12E7 SWAP2 SWAP1 PUSH2 0x1AF9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x9 SLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x1329 SWAP1 DUP7 PUSH2 0x1B60 JUMP JUMPDEST PUSH2 0x1333 SWAP2 SWAP1 PUSH2 0x1AF9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x136F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1374 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x13BF JUMPI PUSH1 0x3 SLOAD PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x977E2C32BE07C8AA27BFE58F2BF200E11ECA859B94D36E76E645FCAF1D4CC946 SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x12DD SWAP1 DUP8 PUSH2 0x1B60 JUMP JUMPDEST PUSH1 0x0 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF DUP3 AND LT ISZERO PUSH2 0x1571 JUMPI PUSH1 0x0 DUP1 PUSH1 0x2 DUP4 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x1442 JUMPI PUSH2 0x1442 PUSH2 0x1B4A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP2 SWAP1 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1499 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x149E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 PUSH1 0x2 DUP7 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x14BF JUMPI PUSH2 0x14BF PUSH2 0x1B4A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP2 PUSH2 0x155C JUMPI PUSH1 0x2 DUP4 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x150E JUMPI PUSH2 0x150E PUSH2 0x1B4A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 ADD SLOAD PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH32 0x1198B3902400A4722F08A21EB834E8F872109A5DAB83213639D3670A10D8D40A SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP DUP1 DUP1 PUSH2 0x1569 SWAP1 PUSH2 0x1B77 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x141C JUMP JUMPDEST POP PUSH2 0xA6E PUSH2 0x1666 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x158E JUMPI PUSH2 0x158E PUSH2 0x1B4A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH1 0x1 SWAP1 DUP2 LT PUSH2 0x15BB JUMPI PUSH2 0x15BB PUSH2 0x1B4A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH2 0x15E3 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1B23 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x15F3 JUMPI PUSH2 0x15F3 PUSH2 0x1B4A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 SWAP6 DUP7 SHL DUP2 AND SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP3 DUP5 SHL DUP3 AND PUSH1 0x34 DUP5 ADD MSTORE SWAP1 SWAP3 SHL SWAP1 SWAP2 AND PUSH1 0x48 DUP3 ADD MSTORE DIFFICULTY PUSH1 0x5C DUP3 ADD MSTORE TIMESTAMP PUSH1 0x7C DUP3 ADD MSTORE PUSH1 0x9C ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 PUSH1 0x4 SSTORE PUSH2 0xA6E PUSH2 0x1711 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF DUP3 AND LT ISZERO PUSH2 0x16D8 JUMPI PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 PUSH1 0x2 DUP5 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x1692 JUMPI PUSH2 0x1692 PUSH2 0x1B4A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH2 0x16D0 DUP2 PUSH2 0x1B77 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1669 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 DUP3 SWAP1 MSTORE MLOAD PUSH2 0x16F6 SWAP2 PUSH1 0x2 SWAP2 PUSH2 0x17F3 JUMP JUMPDEST POP PUSH1 0x12 DUP1 SLOAD PUSH1 0x0 PUSH1 0xD SSTORE PUSH2 0xFFFF NOT AND PUSH2 0x100 OR SWAP1 SSTORE TIMESTAMP PUSH1 0xF SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD PUSH1 0x0 SUB PUSH2 0x175C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x63616E742066696E642072616E646F6D6E657373 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7BA JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x4 SLOAD PUSH1 0x0 SWAP2 PUSH2 0x176E SWAP2 PUSH2 0x1B36 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1783 JUMPI PUSH2 0x1783 PUSH2 0x1B4A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x17B6 PUSH2 0x1187 JUMP JUMPDEST SWAP2 POP DUP2 PUSH1 0x0 SUB PUSH2 0x17CC JUMPI PUSH2 0x17C8 PUSH2 0x1666 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0x17DA SWAP1 PUSH1 0x1 PUSH2 0x1AB1 JUMP JUMPDEST PUSH1 0xD DUP2 SWAP1 SSTORE PUSH1 0x3 SUB PUSH2 0x17C8 JUMPI PUSH1 0x0 PUSH1 0xD SSTORE PUSH2 0x17C8 PUSH2 0x157A JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x1848 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1848 JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1813 JUMP JUMPDEST POP PUSH2 0x1854 SWAP3 SWAP2 POP PUSH2 0x1858 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1854 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1859 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x187F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xFD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x3 DUP4 LT PUSH2 0x18D9 JUMPI PUSH2 0x18D9 PUSH2 0x18AF JUMP JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x2 DUP4 LT PUSH2 0x18D9 JUMPI PUSH2 0x18D9 PUSH2 0x18AF JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1908 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1931 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x194A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xFD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH15 0x131BDD1D195C9E4814DD1BDC1C1959 PUSH1 0x8A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x19D5 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x19BD JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH32 0x456E74727920666565206D75737420626520657175616C20746F3A2000000000 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x1A16 DUP2 PUSH1 0x1C DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x19BA JUMP JUMPDEST PUSH4 0x408AE8D PUSH1 0xE3 SHL PUSH1 0x1C SWAP4 SWAP1 SWAP2 ADD SWAP3 DUP4 ADD MSTORE POP PUSH1 0x20 ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1A50 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x19BA JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x43616E204E6F74207768696C65206C6F7474657279206F6E676F696E67000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1AC4 JUMPI PUSH2 0x1AC4 PUSH2 0x1A9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1ADC JUMPI PUSH2 0x1ADC PUSH2 0x1A9B JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1B08 JUMPI PUSH2 0x1B08 PUSH2 0x1AE3 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1AC4 JUMPI PUSH2 0x1AC4 PUSH2 0x1A9B JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1B45 JUMPI PUSH2 0x1B45 PUSH2 0x1AE3 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x1AC4 JUMPI PUSH2 0x1AC4 PUSH2 0x1A9B JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 SUB PUSH2 0x1B8D JUMPI PUSH2 0x1B8D PUSH2 0x1A9B JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD 0x2A PUSH17 0x81B20503A3BFEDAB958D060D94B2EC80A4 SWAP5 0xB9 SWAP4 PUSH7 0x971E5A63542078 0xD PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
    "pcMap": {
        "0": {
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x80"
        },
        "2": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "4": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "MSTORE",
            "path": "4"
        },
        "5": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x4"
        },
        "7": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "CALLDATASIZE",
            "path": "4"
        },
        "8": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "LT",
            "path": "4"
        },
        "9": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x230"
        },
        "12": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "13": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "15": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "CALLDATALOAD",
            "path": "4"
        },
        "16": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0xE0"
        },
        "18": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "SHR",
            "path": "4"
        },
        "19": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "DUP1",
            "path": "4"
        },
        "20": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH4",
            "path": "4",
            "value": "0x8DA5CB5B"
        },
        "25": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "GT",
            "path": "4"
        },
        "26": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x12E"
        },
        "29": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "30": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "DUP1",
            "path": "4"
        },
        "31": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH4",
            "path": "4",
            "value": "0xD70FA7DE"
        },
        "36": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "GT",
            "path": "4"
        },
        "37": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0xAB"
        },
        "40": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "41": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "DUP1",
            "path": "4"
        },
        "42": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH4",
            "path": "4",
            "value": "0xF2FDE38B"
        },
        "47": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "GT",
            "path": "4"
        },
        "48": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x6F"
        },
        "51": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "52": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "DUP1",
            "path": "4"
        },
        "53": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH4",
            "path": "4",
            "value": "0xF2FDE38B"
        },
        "58": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "EQ",
            "path": "4"
        },
        "59": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x5E2"
        },
        "62": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "63": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "DUP1",
            "path": "4"
        },
        "64": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH4",
            "path": "4",
            "value": "0xF71D96CB"
        },
        "69": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "EQ",
            "path": "4"
        },
        "70": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x602"
        },
        "73": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "74": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "DUP1",
            "path": "4"
        },
        "75": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH4",
            "path": "4",
            "value": "0xF8B2CB4F"
        },
        "80": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "EQ",
            "path": "4"
        },
        "81": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x622"
        },
        "84": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "85": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "DUP1",
            "path": "4"
        },
        "86": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH4",
            "path": "4",
            "value": "0xFAEA18C6"
        },
        "91": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "EQ",
            "path": "4"
        },
        "92": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x642"
        },
        "95": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "96": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "DUP1",
            "path": "4"
        },
        "97": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH4",
            "path": "4",
            "value": "0xFE56F5A0"
        },
        "102": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "EQ",
            "path": "4"
        },
        "103": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x658"
        },
        "106": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "107": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "109": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "DUP1",
            "path": "4"
        },
        "110": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "REVERT",
            "path": "4"
        },
        "111": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "112": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "DUP1",
            "path": "4"
        },
        "113": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH4",
            "path": "4",
            "value": "0xD70FA7DE"
        },
        "118": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "EQ",
            "path": "4"
        },
        "119": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x56C"
        },
        "122": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "123": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "DUP1",
            "path": "4"
        },
        "124": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH4",
            "path": "4",
            "value": "0xD718AEA9"
        },
        "129": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "EQ",
            "path": "4"
        },
        "130": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x582"
        },
        "133": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "134": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "DUP1",
            "path": "4"
        },
        "135": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH4",
            "path": "4",
            "value": "0xDDCA3F43"
        },
        "140": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "EQ",
            "path": "4"
        },
        "141": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x597"
        },
        "144": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "145": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "DUP1",
            "path": "4"
        },
        "146": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH4",
            "path": "4",
            "value": "0xEE44ABB2"
        },
        "151": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "EQ",
            "path": "4"
        },
        "152": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x5AD"
        },
        "155": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "156": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "DUP1",
            "path": "4"
        },
        "157": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH4",
            "path": "4",
            "value": "0xF2640E10"
        },
        "162": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "EQ",
            "path": "4"
        },
        "163": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x5C2"
        },
        "166": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "167": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "169": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "DUP1",
            "path": "4"
        },
        "170": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "REVERT",
            "path": "4"
        },
        "171": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "172": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "DUP1",
            "path": "4"
        },
        "173": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH4",
            "path": "4",
            "value": "0xBCDB446B"
        },
        "178": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "GT",
            "path": "4"
        },
        "179": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0xF2"
        },
        "182": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "183": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "DUP1",
            "path": "4"
        },
        "184": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH4",
            "path": "4",
            "value": "0xBCDB446B"
        },
        "189": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "EQ",
            "path": "4"
        },
        "190": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x4CE"
        },
        "193": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "194": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "DUP1",
            "path": "4"
        },
        "195": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH4",
            "path": "4",
            "value": "0xBE55C9C9"
        },
        "200": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "EQ",
            "path": "4"
        },
        "201": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x4E3"
        },
        "204": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "205": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "DUP1",
            "path": "4"
        },
        "206": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH4",
            "path": "4",
            "value": "0xCAA6FEA4"
        },
        "211": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "EQ",
            "path": "4"
        },
        "212": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x513"
        },
        "215": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "216": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "DUP1",
            "path": "4"
        },
        "217": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH4",
            "path": "4",
            "value": "0xCD8CC844"
        },
        "222": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "EQ",
            "path": "4"
        },
        "223": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x540"
        },
        "226": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "227": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "DUP1",
            "path": "4"
        },
        "228": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH4",
            "path": "4",
            "value": "0xCF23AA38"
        },
        "233": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "EQ",
            "path": "4"
        },
        "234": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x556"
        },
        "237": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "238": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "240": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "DUP1",
            "path": "4"
        },
        "241": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "REVERT",
            "path": "4"
        },
        "242": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "243": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "DUP1",
            "path": "4"
        },
        "244": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH4",
            "path": "4",
            "value": "0x8DA5CB5B"
        },
        "249": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "EQ",
            "path": "4"
        },
        "250": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x44E"
        },
        "253": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "254": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "DUP1",
            "path": "4"
        },
        "255": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH4",
            "path": "4",
            "value": "0x95D12000"
        },
        "260": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "EQ",
            "path": "4"
        },
        "261": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x46C"
        },
        "264": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "265": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "DUP1",
            "path": "4"
        },
        "266": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH4",
            "path": "4",
            "value": "0x9BB57718"
        },
        "271": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "EQ",
            "path": "4"
        },
        "272": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x482"
        },
        "275": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "276": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "DUP1",
            "path": "4"
        },
        "277": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH4",
            "path": "4",
            "value": "0xA6D811EA"
        },
        "282": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "EQ",
            "path": "4"
        },
        "283": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x498"
        },
        "286": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "287": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "DUP1",
            "path": "4"
        },
        "288": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH4",
            "path": "4",
            "value": "0xB4989917"
        },
        "293": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "EQ",
            "path": "4"
        },
        "294": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x4AE"
        },
        "297": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "298": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "300": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "DUP1",
            "path": "4"
        },
        "301": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "REVERT",
            "path": "4"
        },
        "302": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "303": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "DUP1",
            "path": "4"
        },
        "304": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH4",
            "path": "4",
            "value": "0x4F8C70CF"
        },
        "309": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "GT",
            "path": "4"
        },
        "310": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1BC"
        },
        "313": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "314": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "DUP1",
            "path": "4"
        },
        "315": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH4",
            "path": "4",
            "value": "0x6531E5C4"
        },
        "320": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "GT",
            "path": "4"
        },
        "321": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x180"
        },
        "324": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "325": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "DUP1",
            "path": "4"
        },
        "326": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH4",
            "path": "4",
            "value": "0x6531E5C4"
        },
        "331": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "EQ",
            "path": "4"
        },
        "332": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x3CC"
        },
        "335": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "336": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "DUP1",
            "path": "4"
        },
        "337": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH4",
            "path": "4",
            "value": "0x69EBE78E"
        },
        "342": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "EQ",
            "path": "4"
        },
        "343": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x3E1"
        },
        "346": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "347": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "DUP1",
            "path": "4"
        },
        "348": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH4",
            "path": "4",
            "value": "0x715018A6"
        },
        "353": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "EQ",
            "path": "4"
        },
        "354": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x3F7"
        },
        "357": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "358": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "DUP1",
            "path": "4"
        },
        "359": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH4",
            "path": "4",
            "value": "0x81447999"
        },
        "364": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "EQ",
            "path": "4"
        },
        "365": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x40C"
        },
        "368": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "369": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "DUP1",
            "path": "4"
        },
        "370": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH4",
            "path": "4",
            "value": "0x81FB84FB"
        },
        "375": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "EQ",
            "path": "4"
        },
        "376": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x438"
        },
        "379": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "380": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "382": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "DUP1",
            "path": "4"
        },
        "383": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "REVERT",
            "path": "4"
        },
        "384": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "385": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "DUP1",
            "path": "4"
        },
        "386": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH4",
            "path": "4",
            "value": "0x4F8C70CF"
        },
        "391": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "EQ",
            "path": "4"
        },
        "392": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x328"
        },
        "395": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "396": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "DUP1",
            "path": "4"
        },
        "397": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH4",
            "path": "4",
            "value": "0x4FB2E45D"
        },
        "402": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "EQ",
            "path": "4"
        },
        "403": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x360"
        },
        "406": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "407": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "DUP1",
            "path": "4"
        },
        "408": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH4",
            "path": "4",
            "value": "0x501D0780"
        },
        "413": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "EQ",
            "path": "4"
        },
        "414": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x380"
        },
        "417": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "418": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "DUP1",
            "path": "4"
        },
        "419": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH4",
            "path": "4",
            "value": "0x56923710"
        },
        "424": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "EQ",
            "path": "4"
        },
        "425": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x396"
        },
        "428": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "429": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "DUP1",
            "path": "4"
        },
        "430": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH4",
            "path": "4",
            "value": "0x59FE8C84"
        },
        "435": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "EQ",
            "path": "4"
        },
        "436": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x3B6"
        },
        "439": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "440": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "442": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "DUP1",
            "path": "4"
        },
        "443": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "REVERT",
            "path": "4"
        },
        "444": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "445": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "DUP1",
            "path": "4"
        },
        "446": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH4",
            "path": "4",
            "value": "0x2B58150B"
        },
        "451": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "GT",
            "path": "4"
        },
        "452": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x203"
        },
        "455": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "456": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "DUP1",
            "path": "4"
        },
        "457": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH4",
            "path": "4",
            "value": "0x2B58150B"
        },
        "462": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "EQ",
            "path": "4"
        },
        "463": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x2BF"
        },
        "466": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "467": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "DUP1",
            "path": "4"
        },
        "468": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH4",
            "path": "4",
            "value": "0x2D97902F"
        },
        "473": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "EQ",
            "path": "4"
        },
        "474": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x2DF"
        },
        "477": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "478": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "DUP1",
            "path": "4"
        },
        "479": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH4",
            "path": "4",
            "value": "0x36013189"
        },
        "484": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "EQ",
            "path": "4"
        },
        "485": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x2F5"
        },
        "488": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "489": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "DUP1",
            "path": "4"
        },
        "490": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH4",
            "path": "4",
            "value": "0x382E5E7A"
        },
        "495": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "EQ",
            "path": "4"
        },
        "496": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x30B"
        },
        "499": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "500": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "DUP1",
            "path": "4"
        },
        "501": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH4",
            "path": "4",
            "value": "0x4A8466E9"
        },
        "506": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "EQ",
            "path": "4"
        },
        "507": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x313"
        },
        "510": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "511": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "513": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "DUP1",
            "path": "4"
        },
        "514": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "REVERT",
            "path": "4"
        },
        "515": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "516": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "DUP1",
            "path": "4"
        },
        "517": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH4",
            "path": "4",
            "value": "0x4283412"
        },
        "522": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "EQ",
            "path": "4"
        },
        "523": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x235"
        },
        "526": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "527": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "DUP1",
            "path": "4"
        },
        "528": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH4",
            "path": "4",
            "value": "0xB3FF280"
        },
        "533": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "EQ",
            "path": "4"
        },
        "534": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x25E"
        },
        "537": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "538": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "DUP1",
            "path": "4"
        },
        "539": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH4",
            "path": "4",
            "value": "0x16114ACD"
        },
        "544": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "EQ",
            "path": "4"
        },
        "545": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x288"
        },
        "548": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "549": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "DUP1",
            "path": "4"
        },
        "550": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH4",
            "path": "4",
            "value": "0x1B30D5DF"
        },
        "555": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "EQ",
            "path": "4"
        },
        "556": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x2AA"
        },
        "559": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "560": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "561": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "563": {
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "DUP1",
            "path": "4"
        },
        "564": {
            "first_revert": true,
            "fn": null,
            "offset": [
                1221,
                11795
            ],
            "op": "REVERT",
            "path": "4"
        },
        "565": {
            "offset": [
                1451,
                1485
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "566": {
            "fn": null,
            "offset": [
                1451,
                1485
            ],
            "op": "CALLVALUE",
            "path": "4"
        },
        "567": {
            "fn": null,
            "offset": [
                1451,
                1485
            ],
            "op": "DUP1",
            "path": "4"
        },
        "568": {
            "fn": null,
            "offset": [
                1451,
                1485
            ],
            "op": "ISZERO",
            "path": "4"
        },
        "569": {
            "fn": null,
            "offset": [
                1451,
                1485
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x241"
        },
        "572": {
            "fn": null,
            "offset": [
                1451,
                1485
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "573": {
            "fn": null,
            "offset": [
                1451,
                1485
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "575": {
            "fn": null,
            "offset": [
                1451,
                1485
            ],
            "op": "DUP1",
            "path": "4"
        },
        "576": {
            "fn": null,
            "offset": [
                1451,
                1485
            ],
            "op": "REVERT",
            "path": "4"
        },
        "577": {
            "fn": null,
            "offset": [
                1451,
                1485
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "578": {
            "fn": null,
            "offset": [
                1451,
                1485
            ],
            "op": "POP",
            "path": "4"
        },
        "579": {
            "fn": null,
            "offset": [
                1451,
                1485
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x24B"
        },
        "582": {
            "fn": null,
            "offset": [
                1451,
                1485
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x6"
        },
        "584": {
            "fn": null,
            "offset": [
                1451,
                1485
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "585": {
            "fn": null,
            "offset": [
                1451,
                1485
            ],
            "op": "DUP2",
            "path": "4"
        },
        "586": {
            "fn": null,
            "offset": [
                1451,
                1485
            ],
            "op": "JUMP",
            "path": "4"
        },
        "587": {
            "fn": null,
            "offset": [
                1451,
                1485
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "588": {
            "fn": null,
            "offset": [
                1451,
                1485
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "590": {
            "fn": null,
            "offset": [
                1451,
                1485
            ],
            "op": "MLOAD",
            "path": "4"
        },
        "591": {
            "op": "SWAP1"
        },
        "592": {
            "op": "DUP2"
        },
        "593": {
            "op": "MSTORE"
        },
        "594": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "596": {
            "op": "ADD"
        },
        "597": {
            "offset": [
                1451,
                1485
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "598": {
            "fn": null,
            "offset": [
                1451,
                1485
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "600": {
            "fn": null,
            "offset": [
                1451,
                1485
            ],
            "op": "MLOAD",
            "path": "4"
        },
        "601": {
            "fn": null,
            "offset": [
                1451,
                1485
            ],
            "op": "DUP1",
            "path": "4"
        },
        "602": {
            "fn": null,
            "offset": [
                1451,
                1485
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "603": {
            "fn": null,
            "offset": [
                1451,
                1485
            ],
            "op": "SUB",
            "path": "4"
        },
        "604": {
            "fn": null,
            "offset": [
                1451,
                1485
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "605": {
            "fn": null,
            "offset": [
                1451,
                1485
            ],
            "op": "RETURN",
            "path": "4"
        },
        "606": {
            "offset": [
                1931,
                1952
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "607": {
            "fn": null,
            "offset": [
                1931,
                1952
            ],
            "op": "CALLVALUE",
            "path": "4"
        },
        "608": {
            "fn": null,
            "offset": [
                1931,
                1952
            ],
            "op": "DUP1",
            "path": "4"
        },
        "609": {
            "fn": null,
            "offset": [
                1931,
                1952
            ],
            "op": "ISZERO",
            "path": "4"
        },
        "610": {
            "fn": null,
            "offset": [
                1931,
                1952
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x26A"
        },
        "613": {
            "fn": null,
            "offset": [
                1931,
                1952
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "614": {
            "fn": null,
            "offset": [
                1931,
                1952
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "616": {
            "fn": null,
            "offset": [
                1931,
                1952
            ],
            "op": "DUP1",
            "path": "4"
        },
        "617": {
            "fn": null,
            "offset": [
                1931,
                1952
            ],
            "op": "REVERT",
            "path": "4"
        },
        "618": {
            "fn": null,
            "offset": [
                1931,
                1952
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "619": {
            "op": "POP"
        },
        "620": {
            "offset": [
                1931,
                1952
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x12"
        },
        "622": {
            "fn": null,
            "offset": [
                1931,
                1952
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "623": {
            "fn": null,
            "offset": [
                1931,
                1952
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x278"
        },
        "626": {
            "fn": null,
            "offset": [
                1931,
                1952
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "627": {
            "fn": null,
            "offset": [
                1931,
                1952
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0xFF"
        },
        "629": {
            "fn": null,
            "offset": [
                1931,
                1952
            ],
            "op": "AND",
            "path": "4"
        },
        "630": {
            "fn": null,
            "offset": [
                1931,
                1952
            ],
            "op": "DUP2",
            "path": "4"
        },
        "631": {
            "fn": null,
            "offset": [
                1931,
                1952
            ],
            "op": "JUMP",
            "path": "4"
        },
        "632": {
            "fn": null,
            "offset": [
                1931,
                1952
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "633": {
            "fn": null,
            "offset": [
                1931,
                1952
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "635": {
            "fn": null,
            "offset": [
                1931,
                1952
            ],
            "op": "MLOAD",
            "path": "4"
        },
        "636": {
            "op": "SWAP1"
        },
        "637": {
            "op": "ISZERO"
        },
        "638": {
            "op": "ISZERO"
        },
        "639": {
            "op": "DUP2"
        },
        "640": {
            "op": "MSTORE"
        },
        "641": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "643": {
            "op": "ADD"
        },
        "644": {
            "offset": [
                1931,
                1952
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x255"
        },
        "647": {
            "op": "JUMP"
        },
        "648": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8313,
                8497
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "649": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8313,
                8497
            ],
            "op": "CALLVALUE",
            "path": "4"
        },
        "650": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8313,
                8497
            ],
            "op": "DUP1",
            "path": "4"
        },
        "651": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8313,
                8497
            ],
            "op": "ISZERO",
            "path": "4"
        },
        "652": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8313,
                8497
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x294"
        },
        "655": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8313,
                8497
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "656": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8313,
                8497
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "658": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8313,
                8497
            ],
            "op": "DUP1",
            "path": "4"
        },
        "659": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8313,
                8497
            ],
            "op": "REVERT",
            "path": "4"
        },
        "660": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8313,
                8497
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "661": {
            "op": "POP"
        },
        "662": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8313,
                8497
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x2A8"
        },
        "665": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8313,
                8497
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x2A3"
        },
        "668": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8313,
                8497
            ],
            "op": "CALLDATASIZE",
            "path": "4"
        },
        "669": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8313,
                8497
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x4"
        },
        "671": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8313,
                8497
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x186D"
        },
        "674": {
            "fn": "MyLottery.recoverTokens",
            "jump": "i",
            "offset": [
                8313,
                8497
            ],
            "op": "JUMP",
            "path": "4"
        },
        "675": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8313,
                8497
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "676": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8313,
                8497
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x678"
        },
        "679": {
            "fn": "MyLottery.recoverTokens",
            "jump": "i",
            "offset": [
                8313,
                8497
            ],
            "op": "JUMP",
            "path": "4"
        },
        "680": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8313,
                8497
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "681": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8313,
                8497
            ],
            "op": "STOP",
            "path": "4"
        },
        "682": {
            "fn": "MyLottery.setEmergencyClose",
            "offset": [
                7331,
                7425
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "683": {
            "fn": "MyLottery.setEmergencyClose",
            "offset": [
                7331,
                7425
            ],
            "op": "CALLVALUE",
            "path": "4"
        },
        "684": {
            "fn": "MyLottery.setEmergencyClose",
            "offset": [
                7331,
                7425
            ],
            "op": "DUP1",
            "path": "4"
        },
        "685": {
            "fn": "MyLottery.setEmergencyClose",
            "offset": [
                7331,
                7425
            ],
            "op": "ISZERO",
            "path": "4"
        },
        "686": {
            "fn": "MyLottery.setEmergencyClose",
            "offset": [
                7331,
                7425
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x2B6"
        },
        "689": {
            "fn": "MyLottery.setEmergencyClose",
            "offset": [
                7331,
                7425
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "690": {
            "fn": "MyLottery.setEmergencyClose",
            "offset": [
                7331,
                7425
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "692": {
            "fn": "MyLottery.setEmergencyClose",
            "offset": [
                7331,
                7425
            ],
            "op": "DUP1",
            "path": "4"
        },
        "693": {
            "fn": "MyLottery.setEmergencyClose",
            "offset": [
                7331,
                7425
            ],
            "op": "REVERT",
            "path": "4"
        },
        "694": {
            "fn": "MyLottery.setEmergencyClose",
            "offset": [
                7331,
                7425
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "695": {
            "fn": "MyLottery.setEmergencyClose",
            "offset": [
                7331,
                7425
            ],
            "op": "POP",
            "path": "4"
        },
        "696": {
            "fn": "MyLottery.setEmergencyClose",
            "offset": [
                7331,
                7425
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x2A8"
        },
        "699": {
            "fn": "MyLottery.setEmergencyClose",
            "offset": [
                7331,
                7425
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x768"
        },
        "702": {
            "fn": "MyLottery.setEmergencyClose",
            "jump": "i",
            "offset": [
                7331,
                7425
            ],
            "op": "JUMP",
            "path": "4"
        },
        "703": {
            "fn": "MyLottery.setLotteryDuration",
            "offset": [
                7112,
                7222
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "704": {
            "fn": "MyLottery.setLotteryDuration",
            "offset": [
                7112,
                7222
            ],
            "op": "CALLVALUE",
            "path": "4"
        },
        "705": {
            "fn": "MyLottery.setLotteryDuration",
            "offset": [
                7112,
                7222
            ],
            "op": "DUP1",
            "path": "4"
        },
        "706": {
            "fn": "MyLottery.setLotteryDuration",
            "offset": [
                7112,
                7222
            ],
            "op": "ISZERO",
            "path": "4"
        },
        "707": {
            "fn": "MyLottery.setLotteryDuration",
            "offset": [
                7112,
                7222
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x2CB"
        },
        "710": {
            "fn": "MyLottery.setLotteryDuration",
            "offset": [
                7112,
                7222
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "711": {
            "fn": "MyLottery.setLotteryDuration",
            "offset": [
                7112,
                7222
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "713": {
            "fn": "MyLottery.setLotteryDuration",
            "offset": [
                7112,
                7222
            ],
            "op": "DUP1",
            "path": "4"
        },
        "714": {
            "fn": "MyLottery.setLotteryDuration",
            "offset": [
                7112,
                7222
            ],
            "op": "REVERT",
            "path": "4"
        },
        "715": {
            "fn": "MyLottery.setLotteryDuration",
            "offset": [
                7112,
                7222
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "716": {
            "op": "POP"
        },
        "717": {
            "fn": "MyLottery.setLotteryDuration",
            "offset": [
                7112,
                7222
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x2A8"
        },
        "720": {
            "fn": "MyLottery.setLotteryDuration",
            "offset": [
                7112,
                7222
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x2DA"
        },
        "723": {
            "fn": "MyLottery.setLotteryDuration",
            "offset": [
                7112,
                7222
            ],
            "op": "CALLDATASIZE",
            "path": "4"
        },
        "724": {
            "fn": "MyLottery.setLotteryDuration",
            "offset": [
                7112,
                7222
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x4"
        },
        "726": {
            "fn": "MyLottery.setLotteryDuration",
            "offset": [
                7112,
                7222
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1896"
        },
        "729": {
            "fn": "MyLottery.setLotteryDuration",
            "jump": "i",
            "offset": [
                7112,
                7222
            ],
            "op": "JUMP",
            "path": "4"
        },
        "730": {
            "fn": "MyLottery.setLotteryDuration",
            "offset": [
                7112,
                7222
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "731": {
            "fn": "MyLottery.setLotteryDuration",
            "offset": [
                7112,
                7222
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x78B"
        },
        "734": {
            "fn": "MyLottery.setLotteryDuration",
            "jump": "i",
            "offset": [
                7112,
                7222
            ],
            "op": "JUMP",
            "path": "4"
        },
        "735": {
            "offset": [
                1855,
                1885
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "736": {
            "fn": "MyLottery.setLotteryDuration",
            "offset": [
                1855,
                1885
            ],
            "op": "CALLVALUE",
            "path": "4"
        },
        "737": {
            "fn": "MyLottery.setLotteryDuration",
            "offset": [
                1855,
                1885
            ],
            "op": "DUP1",
            "path": "4"
        },
        "738": {
            "fn": "MyLottery.setLotteryDuration",
            "offset": [
                1855,
                1885
            ],
            "op": "ISZERO",
            "path": "4"
        },
        "739": {
            "fn": "MyLottery.setLotteryDuration",
            "offset": [
                1855,
                1885
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x2EB"
        },
        "742": {
            "fn": "MyLottery.setLotteryDuration",
            "offset": [
                1855,
                1885
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "743": {
            "fn": "MyLottery.setLotteryDuration",
            "offset": [
                1855,
                1885
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "745": {
            "fn": "MyLottery.setLotteryDuration",
            "offset": [
                1855,
                1885
            ],
            "op": "DUP1",
            "path": "4"
        },
        "746": {
            "fn": "MyLottery.setLotteryDuration",
            "offset": [
                1855,
                1885
            ],
            "op": "REVERT",
            "path": "4"
        },
        "747": {
            "fn": "MyLottery.setLotteryDuration",
            "offset": [
                1855,
                1885
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "748": {
            "fn": "MyLottery.setLotteryDuration",
            "offset": [
                1855,
                1885
            ],
            "op": "POP",
            "path": "4"
        },
        "749": {
            "fn": "MyLottery.setLotteryDuration",
            "offset": [
                1855,
                1885
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x24B"
        },
        "752": {
            "fn": "MyLottery.setLotteryDuration",
            "offset": [
                1855,
                1885
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x10"
        },
        "754": {
            "fn": "MyLottery.setLotteryDuration",
            "offset": [
                1855,
                1885
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "755": {
            "fn": "MyLottery.setLotteryDuration",
            "offset": [
                1855,
                1885
            ],
            "op": "DUP2",
            "path": "4"
        },
        "756": {
            "fn": "MyLottery.setLotteryDuration",
            "offset": [
                1855,
                1885
            ],
            "op": "JUMP",
            "path": "4"
        },
        "757": {
            "offset": [
                1380,
                1405
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "758": {
            "fn": "MyLottery.setLotteryDuration",
            "offset": [
                1380,
                1405
            ],
            "op": "CALLVALUE",
            "path": "4"
        },
        "759": {
            "fn": "MyLottery.setLotteryDuration",
            "offset": [
                1380,
                1405
            ],
            "op": "DUP1",
            "path": "4"
        },
        "760": {
            "fn": "MyLottery.setLotteryDuration",
            "offset": [
                1380,
                1405
            ],
            "op": "ISZERO",
            "path": "4"
        },
        "761": {
            "fn": "MyLottery.setLotteryDuration",
            "offset": [
                1380,
                1405
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x301"
        },
        "764": {
            "fn": "MyLottery.setLotteryDuration",
            "offset": [
                1380,
                1405
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "765": {
            "fn": "MyLottery.setLotteryDuration",
            "offset": [
                1380,
                1405
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "767": {
            "fn": "MyLottery.setLotteryDuration",
            "offset": [
                1380,
                1405
            ],
            "op": "DUP1",
            "path": "4"
        },
        "768": {
            "fn": "MyLottery.setLotteryDuration",
            "offset": [
                1380,
                1405
            ],
            "op": "REVERT",
            "path": "4"
        },
        "769": {
            "fn": "MyLottery.setLotteryDuration",
            "offset": [
                1380,
                1405
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "770": {
            "fn": "MyLottery.setLotteryDuration",
            "offset": [
                1380,
                1405
            ],
            "op": "POP",
            "path": "4"
        },
        "771": {
            "fn": "MyLottery.setLotteryDuration",
            "offset": [
                1380,
                1405
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x24B"
        },
        "774": {
            "fn": "MyLottery.setLotteryDuration",
            "offset": [
                1380,
                1405
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x4"
        },
        "776": {
            "fn": "MyLottery.setLotteryDuration",
            "offset": [
                1380,
                1405
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "777": {
            "fn": "MyLottery.setLotteryDuration",
            "offset": [
                1380,
                1405
            ],
            "op": "DUP2",
            "path": "4"
        },
        "778": {
            "fn": "MyLottery.setLotteryDuration",
            "offset": [
                1380,
                1405
            ],
            "op": "JUMP",
            "path": "4"
        },
        "779": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3454,
                4243
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "780": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3454,
                4243
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x2A8"
        },
        "783": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3454,
                4243
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x798"
        },
        "786": {
            "fn": "MyLottery.enter_lottery",
            "jump": "i",
            "offset": [
                3454,
                4243
            ],
            "op": "JUMP",
            "path": "4"
        },
        "787": {
            "fn": "MyLottery.retrySendPrizes",
            "offset": [
                9120,
                9195
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "788": {
            "fn": "MyLottery.retrySendPrizes",
            "offset": [
                9120,
                9195
            ],
            "op": "CALLVALUE",
            "path": "4"
        },
        "789": {
            "fn": "MyLottery.retrySendPrizes",
            "offset": [
                9120,
                9195
            ],
            "op": "DUP1",
            "path": "4"
        },
        "790": {
            "fn": "MyLottery.retrySendPrizes",
            "offset": [
                9120,
                9195
            ],
            "op": "ISZERO",
            "path": "4"
        },
        "791": {
            "fn": "MyLottery.retrySendPrizes",
            "offset": [
                9120,
                9195
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x31F"
        },
        "794": {
            "fn": "MyLottery.retrySendPrizes",
            "offset": [
                9120,
                9195
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "795": {
            "fn": "MyLottery.retrySendPrizes",
            "offset": [
                9120,
                9195
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "797": {
            "fn": "MyLottery.retrySendPrizes",
            "offset": [
                9120,
                9195
            ],
            "op": "DUP1",
            "path": "4"
        },
        "798": {
            "fn": "MyLottery.retrySendPrizes",
            "offset": [
                9120,
                9195
            ],
            "op": "REVERT",
            "path": "4"
        },
        "799": {
            "fn": "MyLottery.retrySendPrizes",
            "offset": [
                9120,
                9195
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "800": {
            "fn": "MyLottery.retrySendPrizes",
            "offset": [
                9120,
                9195
            ],
            "op": "POP",
            "path": "4"
        },
        "801": {
            "fn": "MyLottery.retrySendPrizes",
            "offset": [
                9120,
                9195
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x2A8"
        },
        "804": {
            "fn": "MyLottery.retrySendPrizes",
            "offset": [
                9120,
                9195
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0xA0B"
        },
        "807": {
            "fn": "MyLottery.retrySendPrizes",
            "jump": "i",
            "offset": [
                9120,
                9195
            ],
            "op": "JUMP",
            "path": "4"
        },
        "808": {
            "offset": [
                1312,
                1347
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "809": {
            "fn": "MyLottery.retrySendPrizes",
            "offset": [
                1312,
                1347
            ],
            "op": "CALLVALUE",
            "path": "4"
        },
        "810": {
            "fn": "MyLottery.retrySendPrizes",
            "offset": [
                1312,
                1347
            ],
            "op": "DUP1",
            "path": "4"
        },
        "811": {
            "fn": "MyLottery.retrySendPrizes",
            "offset": [
                1312,
                1347
            ],
            "op": "ISZERO",
            "path": "4"
        },
        "812": {
            "fn": "MyLottery.retrySendPrizes",
            "offset": [
                1312,
                1347
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x334"
        },
        "815": {
            "fn": "MyLottery.retrySendPrizes",
            "offset": [
                1312,
                1347
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "816": {
            "fn": "MyLottery.retrySendPrizes",
            "offset": [
                1312,
                1347
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "818": {
            "fn": "MyLottery.retrySendPrizes",
            "offset": [
                1312,
                1347
            ],
            "op": "DUP1",
            "path": "4"
        },
        "819": {
            "fn": "MyLottery.retrySendPrizes",
            "offset": [
                1312,
                1347
            ],
            "op": "REVERT",
            "path": "4"
        },
        "820": {
            "fn": "MyLottery.retrySendPrizes",
            "offset": [
                1312,
                1347
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "821": {
            "op": "POP"
        },
        "822": {
            "offset": [
                1312,
                1347
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x3"
        },
        "824": {
            "fn": "MyLottery.retrySendPrizes",
            "offset": [
                1312,
                1347
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "825": {
            "fn": "MyLottery.retrySendPrizes",
            "offset": [
                1312,
                1347
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x348"
        },
        "828": {
            "fn": "MyLottery.retrySendPrizes",
            "offset": [
                1312,
                1347
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "829": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "831": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "833": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "835": {
            "op": "SHL"
        },
        "836": {
            "op": "SUB"
        },
        "837": {
            "offset": [
                1312,
                1347
            ],
            "op": "AND",
            "path": "4"
        },
        "838": {
            "fn": "MyLottery.retrySendPrizes",
            "offset": [
                1312,
                1347
            ],
            "op": "DUP2",
            "path": "4"
        },
        "839": {
            "fn": "MyLottery.retrySendPrizes",
            "offset": [
                1312,
                1347
            ],
            "op": "JUMP",
            "path": "4"
        },
        "840": {
            "fn": "MyLottery.retrySendPrizes",
            "offset": [
                1312,
                1347
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "841": {
            "fn": "MyLottery.retrySendPrizes",
            "offset": [
                1312,
                1347
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "843": {
            "fn": "MyLottery.retrySendPrizes",
            "offset": [
                1312,
                1347
            ],
            "op": "MLOAD",
            "path": "4"
        },
        "844": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "846": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "848": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "850": {
            "op": "SHL"
        },
        "851": {
            "op": "SUB"
        },
        "852": {
            "op": "SWAP1"
        },
        "853": {
            "op": "SWAP2"
        },
        "854": {
            "op": "AND"
        },
        "855": {
            "op": "DUP2"
        },
        "856": {
            "op": "MSTORE"
        },
        "857": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "859": {
            "op": "ADD"
        },
        "860": {
            "offset": [
                1312,
                1347
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x255"
        },
        "863": {
            "op": "JUMP"
        },
        "864": {
            "fn": "MyLottery.transferOwner",
            "offset": [
                11329,
                11433
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "865": {
            "fn": "MyLottery.transferOwner",
            "offset": [
                11329,
                11433
            ],
            "op": "CALLVALUE",
            "path": "4"
        },
        "866": {
            "fn": "MyLottery.transferOwner",
            "offset": [
                11329,
                11433
            ],
            "op": "DUP1",
            "path": "4"
        },
        "867": {
            "fn": "MyLottery.transferOwner",
            "offset": [
                11329,
                11433
            ],
            "op": "ISZERO",
            "path": "4"
        },
        "868": {
            "fn": "MyLottery.transferOwner",
            "offset": [
                11329,
                11433
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x36C"
        },
        "871": {
            "fn": "MyLottery.transferOwner",
            "offset": [
                11329,
                11433
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "872": {
            "fn": "MyLottery.transferOwner",
            "offset": [
                11329,
                11433
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "874": {
            "fn": "MyLottery.transferOwner",
            "offset": [
                11329,
                11433
            ],
            "op": "DUP1",
            "path": "4"
        },
        "875": {
            "fn": "MyLottery.transferOwner",
            "offset": [
                11329,
                11433
            ],
            "op": "REVERT",
            "path": "4"
        },
        "876": {
            "fn": "MyLottery.transferOwner",
            "offset": [
                11329,
                11433
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "877": {
            "op": "POP"
        },
        "878": {
            "fn": "MyLottery.transferOwner",
            "offset": [
                11329,
                11433
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x2A8"
        },
        "881": {
            "fn": "MyLottery.transferOwner",
            "offset": [
                11329,
                11433
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x37B"
        },
        "884": {
            "fn": "MyLottery.transferOwner",
            "offset": [
                11329,
                11433
            ],
            "op": "CALLDATASIZE",
            "path": "4"
        },
        "885": {
            "fn": "MyLottery.transferOwner",
            "offset": [
                11329,
                11433
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x4"
        },
        "887": {
            "fn": "MyLottery.transferOwner",
            "offset": [
                11329,
                11433
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x186D"
        },
        "890": {
            "fn": "MyLottery.transferOwner",
            "jump": "i",
            "offset": [
                11329,
                11433
            ],
            "op": "JUMP",
            "path": "4"
        },
        "891": {
            "fn": "MyLottery.transferOwner",
            "offset": [
                11329,
                11433
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "892": {
            "fn": "MyLottery.transferOwner",
            "offset": [
                11329,
                11433
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0xA1E"
        },
        "895": {
            "fn": "MyLottery.transferOwner",
            "jump": "i",
            "offset": [
                11329,
                11433
            ],
            "op": "JUMP",
            "path": "4"
        },
        "896": {
            "offset": [
                1727,
                1755
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "897": {
            "fn": "MyLottery.transferOwner",
            "offset": [
                1727,
                1755
            ],
            "op": "CALLVALUE",
            "path": "4"
        },
        "898": {
            "fn": "MyLottery.transferOwner",
            "offset": [
                1727,
                1755
            ],
            "op": "DUP1",
            "path": "4"
        },
        "899": {
            "fn": "MyLottery.transferOwner",
            "offset": [
                1727,
                1755
            ],
            "op": "ISZERO",
            "path": "4"
        },
        "900": {
            "fn": "MyLottery.transferOwner",
            "offset": [
                1727,
                1755
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x38C"
        },
        "903": {
            "fn": "MyLottery.transferOwner",
            "offset": [
                1727,
                1755
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "904": {
            "fn": "MyLottery.transferOwner",
            "offset": [
                1727,
                1755
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "906": {
            "fn": "MyLottery.transferOwner",
            "offset": [
                1727,
                1755
            ],
            "op": "DUP1",
            "path": "4"
        },
        "907": {
            "fn": "MyLottery.transferOwner",
            "offset": [
                1727,
                1755
            ],
            "op": "REVERT",
            "path": "4"
        },
        "908": {
            "fn": "MyLottery.transferOwner",
            "offset": [
                1727,
                1755
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "909": {
            "fn": "MyLottery.transferOwner",
            "offset": [
                1727,
                1755
            ],
            "op": "POP",
            "path": "4"
        },
        "910": {
            "fn": "MyLottery.transferOwner",
            "offset": [
                1727,
                1755
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x24B"
        },
        "913": {
            "fn": "MyLottery.transferOwner",
            "offset": [
                1727,
                1755
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0xC"
        },
        "915": {
            "fn": "MyLottery.transferOwner",
            "offset": [
                1727,
                1755
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "916": {
            "fn": "MyLottery.transferOwner",
            "offset": [
                1727,
                1755
            ],
            "op": "DUP2",
            "path": "4"
        },
        "917": {
            "fn": "MyLottery.transferOwner",
            "offset": [
                1727,
                1755
            ],
            "op": "JUMP",
            "path": "4"
        },
        "918": {
            "fn": "MyLottery.setMaximumParticipants",
            "offset": [
                7659,
                7819
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "919": {
            "fn": "MyLottery.setMaximumParticipants",
            "offset": [
                7659,
                7819
            ],
            "op": "CALLVALUE",
            "path": "4"
        },
        "920": {
            "fn": "MyLottery.setMaximumParticipants",
            "offset": [
                7659,
                7819
            ],
            "op": "DUP1",
            "path": "4"
        },
        "921": {
            "fn": "MyLottery.setMaximumParticipants",
            "offset": [
                7659,
                7819
            ],
            "op": "ISZERO",
            "path": "4"
        },
        "922": {
            "fn": "MyLottery.setMaximumParticipants",
            "offset": [
                7659,
                7819
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x3A2"
        },
        "925": {
            "fn": "MyLottery.setMaximumParticipants",
            "offset": [
                7659,
                7819
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "926": {
            "fn": "MyLottery.setMaximumParticipants",
            "offset": [
                7659,
                7819
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "928": {
            "fn": "MyLottery.setMaximumParticipants",
            "offset": [
                7659,
                7819
            ],
            "op": "DUP1",
            "path": "4"
        },
        "929": {
            "fn": "MyLottery.setMaximumParticipants",
            "offset": [
                7659,
                7819
            ],
            "op": "REVERT",
            "path": "4"
        },
        "930": {
            "fn": "MyLottery.setMaximumParticipants",
            "offset": [
                7659,
                7819
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "931": {
            "op": "POP"
        },
        "932": {
            "fn": "MyLottery.setMaximumParticipants",
            "offset": [
                7659,
                7819
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x2A8"
        },
        "935": {
            "fn": "MyLottery.setMaximumParticipants",
            "offset": [
                7659,
                7819
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x3B1"
        },
        "938": {
            "fn": "MyLottery.setMaximumParticipants",
            "offset": [
                7659,
                7819
            ],
            "op": "CALLDATASIZE",
            "path": "4"
        },
        "939": {
            "fn": "MyLottery.setMaximumParticipants",
            "offset": [
                7659,
                7819
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x4"
        },
        "941": {
            "fn": "MyLottery.setMaximumParticipants",
            "offset": [
                7659,
                7819
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1896"
        },
        "944": {
            "fn": "MyLottery.setMaximumParticipants",
            "jump": "i",
            "offset": [
                7659,
                7819
            ],
            "op": "JUMP",
            "path": "4"
        },
        "945": {
            "fn": "MyLottery.setMaximumParticipants",
            "offset": [
                7659,
                7819
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "946": {
            "fn": "MyLottery.setMaximumParticipants",
            "offset": [
                7659,
                7819
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0xA2F"
        },
        "949": {
            "fn": "MyLottery.setMaximumParticipants",
            "jump": "i",
            "offset": [
                7659,
                7819
            ],
            "op": "JUMP",
            "path": "4"
        },
        "950": {
            "offset": [
                1491,
                1514
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "951": {
            "fn": "MyLottery.setMaximumParticipants",
            "offset": [
                1491,
                1514
            ],
            "op": "CALLVALUE",
            "path": "4"
        },
        "952": {
            "fn": "MyLottery.setMaximumParticipants",
            "offset": [
                1491,
                1514
            ],
            "op": "DUP1",
            "path": "4"
        },
        "953": {
            "fn": "MyLottery.setMaximumParticipants",
            "offset": [
                1491,
                1514
            ],
            "op": "ISZERO",
            "path": "4"
        },
        "954": {
            "fn": "MyLottery.setMaximumParticipants",
            "offset": [
                1491,
                1514
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x3C2"
        },
        "957": {
            "fn": "MyLottery.setMaximumParticipants",
            "offset": [
                1491,
                1514
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "958": {
            "fn": "MyLottery.setMaximumParticipants",
            "offset": [
                1491,
                1514
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "960": {
            "fn": "MyLottery.setMaximumParticipants",
            "offset": [
                1491,
                1514
            ],
            "op": "DUP1",
            "path": "4"
        },
        "961": {
            "fn": "MyLottery.setMaximumParticipants",
            "offset": [
                1491,
                1514
            ],
            "op": "REVERT",
            "path": "4"
        },
        "962": {
            "fn": "MyLottery.setMaximumParticipants",
            "offset": [
                1491,
                1514
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "963": {
            "fn": "MyLottery.setMaximumParticipants",
            "offset": [
                1491,
                1514
            ],
            "op": "POP",
            "path": "4"
        },
        "964": {
            "fn": "MyLottery.setMaximumParticipants",
            "offset": [
                1491,
                1514
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x24B"
        },
        "967": {
            "fn": "MyLottery.setMaximumParticipants",
            "offset": [
                1491,
                1514
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x7"
        },
        "969": {
            "fn": "MyLottery.setMaximumParticipants",
            "offset": [
                1491,
                1514
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "970": {
            "fn": "MyLottery.setMaximumParticipants",
            "offset": [
                1491,
                1514
            ],
            "op": "DUP2",
            "path": "4"
        },
        "971": {
            "fn": "MyLottery.setMaximumParticipants",
            "offset": [
                1491,
                1514
            ],
            "op": "JUMP",
            "path": "4"
        },
        "972": {
            "fn": "MyLottery.setEmergencyOpen",
            "offset": [
                7228,
                7325
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "973": {
            "fn": "MyLottery.setEmergencyOpen",
            "offset": [
                7228,
                7325
            ],
            "op": "CALLVALUE",
            "path": "4"
        },
        "974": {
            "fn": "MyLottery.setEmergencyOpen",
            "offset": [
                7228,
                7325
            ],
            "op": "DUP1",
            "path": "4"
        },
        "975": {
            "fn": "MyLottery.setEmergencyOpen",
            "offset": [
                7228,
                7325
            ],
            "op": "ISZERO",
            "path": "4"
        },
        "976": {
            "fn": "MyLottery.setEmergencyOpen",
            "offset": [
                7228,
                7325
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x3D8"
        },
        "979": {
            "fn": "MyLottery.setEmergencyOpen",
            "offset": [
                7228,
                7325
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "980": {
            "fn": "MyLottery.setEmergencyOpen",
            "offset": [
                7228,
                7325
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "982": {
            "fn": "MyLottery.setEmergencyOpen",
            "offset": [
                7228,
                7325
            ],
            "op": "DUP1",
            "path": "4"
        },
        "983": {
            "fn": "MyLottery.setEmergencyOpen",
            "offset": [
                7228,
                7325
            ],
            "op": "REVERT",
            "path": "4"
        },
        "984": {
            "fn": "MyLottery.setEmergencyOpen",
            "offset": [
                7228,
                7325
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "985": {
            "fn": "MyLottery.setEmergencyOpen",
            "offset": [
                7228,
                7325
            ],
            "op": "POP",
            "path": "4"
        },
        "986": {
            "fn": "MyLottery.setEmergencyOpen",
            "offset": [
                7228,
                7325
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x2A8"
        },
        "989": {
            "fn": "MyLottery.setEmergencyOpen",
            "offset": [
                7228,
                7325
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0xA3C"
        },
        "992": {
            "fn": "MyLottery.setEmergencyOpen",
            "jump": "i",
            "offset": [
                7228,
                7325
            ],
            "op": "JUMP",
            "path": "4"
        },
        "993": {
            "offset": [
                2605,
                2627
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "994": {
            "fn": "MyLottery.setEmergencyOpen",
            "offset": [
                2605,
                2627
            ],
            "op": "CALLVALUE",
            "path": "4"
        },
        "995": {
            "fn": "MyLottery.setEmergencyOpen",
            "offset": [
                2605,
                2627
            ],
            "op": "DUP1",
            "path": "4"
        },
        "996": {
            "fn": "MyLottery.setEmergencyOpen",
            "offset": [
                2605,
                2627
            ],
            "op": "ISZERO",
            "path": "4"
        },
        "997": {
            "fn": "MyLottery.setEmergencyOpen",
            "offset": [
                2605,
                2627
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x3ED"
        },
        "1000": {
            "fn": "MyLottery.setEmergencyOpen",
            "offset": [
                2605,
                2627
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "1001": {
            "fn": "MyLottery.setEmergencyOpen",
            "offset": [
                2605,
                2627
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "1003": {
            "fn": "MyLottery.setEmergencyOpen",
            "offset": [
                2605,
                2627
            ],
            "op": "DUP1",
            "path": "4"
        },
        "1004": {
            "fn": "MyLottery.setEmergencyOpen",
            "offset": [
                2605,
                2627
            ],
            "op": "REVERT",
            "path": "4"
        },
        "1005": {
            "fn": "MyLottery.setEmergencyOpen",
            "offset": [
                2605,
                2627
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1006": {
            "fn": "MyLottery.setEmergencyOpen",
            "offset": [
                2605,
                2627
            ],
            "op": "POP",
            "path": "4"
        },
        "1007": {
            "fn": "MyLottery.setEmergencyOpen",
            "offset": [
                2605,
                2627
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x24B"
        },
        "1010": {
            "fn": "MyLottery.setEmergencyOpen",
            "offset": [
                2605,
                2627
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x14"
        },
        "1012": {
            "fn": "MyLottery.setEmergencyOpen",
            "offset": [
                2605,
                2627
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "1013": {
            "fn": "MyLottery.setEmergencyOpen",
            "offset": [
                2605,
                2627
            ],
            "op": "DUP2",
            "path": "4"
        },
        "1014": {
            "fn": "MyLottery.setEmergencyOpen",
            "offset": [
                2605,
                2627
            ],
            "op": "JUMP",
            "path": "4"
        },
        "1015": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                1831,
                1932
            ],
            "op": "JUMPDEST",
            "path": "0"
        },
        "1016": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                1831,
                1932
            ],
            "op": "CALLVALUE",
            "path": "0"
        },
        "1017": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                1831,
                1932
            ],
            "op": "DUP1",
            "path": "0"
        },
        "1018": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                1831,
                1932
            ],
            "op": "ISZERO",
            "path": "0"
        },
        "1019": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                1831,
                1932
            ],
            "op": "PUSH2",
            "path": "0",
            "value": "0x403"
        },
        "1022": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                1831,
                1932
            ],
            "op": "JUMPI",
            "path": "0"
        },
        "1023": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                1831,
                1932
            ],
            "op": "PUSH1",
            "path": "0",
            "value": "0x0"
        },
        "1025": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                1831,
                1932
            ],
            "op": "DUP1",
            "path": "0"
        },
        "1026": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                1831,
                1932
            ],
            "op": "REVERT",
            "path": "0"
        },
        "1027": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                1831,
                1932
            ],
            "op": "JUMPDEST",
            "path": "0"
        },
        "1028": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                1831,
                1932
            ],
            "op": "POP",
            "path": "0"
        },
        "1029": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                1831,
                1932
            ],
            "op": "PUSH2",
            "path": "0",
            "value": "0x2A8"
        },
        "1032": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                1831,
                1932
            ],
            "op": "PUSH2",
            "path": "0",
            "value": "0xA5C"
        },
        "1035": {
            "fn": "Ownable.renounceOwnership",
            "jump": "i",
            "offset": [
                1831,
                1932
            ],
            "op": "JUMP",
            "path": "0"
        },
        "1036": {
            "offset": [
                2444,
                2478
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1037": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                2444,
                2478
            ],
            "op": "CALLVALUE",
            "path": "4"
        },
        "1038": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                2444,
                2478
            ],
            "op": "DUP1",
            "path": "4"
        },
        "1039": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                2444,
                2478
            ],
            "op": "ISZERO",
            "path": "4"
        },
        "1040": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                2444,
                2478
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x418"
        },
        "1043": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                2444,
                2478
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "1044": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                2444,
                2478
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "1046": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                2444,
                2478
            ],
            "op": "DUP1",
            "path": "4"
        },
        "1047": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                2444,
                2478
            ],
            "op": "REVERT",
            "path": "4"
        },
        "1048": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                2444,
                2478
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1049": {
            "op": "POP"
        },
        "1050": {
            "offset": [
                2444,
                2478
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x12"
        },
        "1052": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                2444,
                2478
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "1053": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                2444,
                2478
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x42B"
        },
        "1056": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                2444,
                2478
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "1057": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                2444,
                2478
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x100"
        },
        "1060": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                2444,
                2478
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "1061": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                2444,
                2478
            ],
            "op": "DIV",
            "path": "4"
        },
        "1062": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                2444,
                2478
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0xFF"
        },
        "1064": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                2444,
                2478
            ],
            "op": "AND",
            "path": "4"
        },
        "1065": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                2444,
                2478
            ],
            "op": "DUP2",
            "path": "4"
        },
        "1066": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                2444,
                2478
            ],
            "op": "JUMP",
            "path": "4"
        },
        "1067": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                2444,
                2478
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1068": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                2444,
                2478
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "1070": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                2444,
                2478
            ],
            "op": "MLOAD",
            "path": "4"
        },
        "1071": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                2444,
                2478
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x255"
        },
        "1074": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                2444,
                2478
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "1075": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                2444,
                2478
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "1076": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                2444,
                2478
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x18C5"
        },
        "1079": {
            "fn": "Ownable.renounceOwnership",
            "jump": "i",
            "offset": [
                2444,
                2478
            ],
            "op": "JUMP",
            "path": "4"
        },
        "1080": {
            "offset": [
                1625,
                1652
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1081": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                1625,
                1652
            ],
            "op": "CALLVALUE",
            "path": "4"
        },
        "1082": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                1625,
                1652
            ],
            "op": "DUP1",
            "path": "4"
        },
        "1083": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                1625,
                1652
            ],
            "op": "ISZERO",
            "path": "4"
        },
        "1084": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                1625,
                1652
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x444"
        },
        "1087": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                1625,
                1652
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "1088": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                1625,
                1652
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "1090": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                1625,
                1652
            ],
            "op": "DUP1",
            "path": "4"
        },
        "1091": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                1625,
                1652
            ],
            "op": "REVERT",
            "path": "4"
        },
        "1092": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                1625,
                1652
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1093": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                1625,
                1652
            ],
            "op": "POP",
            "path": "4"
        },
        "1094": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                1625,
                1652
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x24B"
        },
        "1097": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                1625,
                1652
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x9"
        },
        "1099": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                1625,
                1652
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "1100": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                1625,
                1652
            ],
            "op": "DUP2",
            "path": "4"
        },
        "1101": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                1625,
                1652
            ],
            "op": "JUMP",
            "path": "4"
        },
        "1102": {
            "fn": "Ownable.owner",
            "offset": [
                1201,
                1286
            ],
            "op": "JUMPDEST",
            "path": "0"
        },
        "1103": {
            "fn": "Ownable.owner",
            "offset": [
                1201,
                1286
            ],
            "op": "CALLVALUE",
            "path": "0"
        },
        "1104": {
            "fn": "Ownable.owner",
            "offset": [
                1201,
                1286
            ],
            "op": "DUP1",
            "path": "0"
        },
        "1105": {
            "fn": "Ownable.owner",
            "offset": [
                1201,
                1286
            ],
            "op": "ISZERO",
            "path": "0"
        },
        "1106": {
            "fn": "Ownable.owner",
            "offset": [
                1201,
                1286
            ],
            "op": "PUSH2",
            "path": "0",
            "value": "0x45A"
        },
        "1109": {
            "fn": "Ownable.owner",
            "offset": [
                1201,
                1286
            ],
            "op": "JUMPI",
            "path": "0"
        },
        "1110": {
            "fn": "Ownable.owner",
            "offset": [
                1201,
                1286
            ],
            "op": "PUSH1",
            "path": "0",
            "value": "0x0"
        },
        "1112": {
            "fn": "Ownable.owner",
            "offset": [
                1201,
                1286
            ],
            "op": "DUP1",
            "path": "0"
        },
        "1113": {
            "fn": "Ownable.owner",
            "offset": [
                1201,
                1286
            ],
            "op": "REVERT",
            "path": "0"
        },
        "1114": {
            "fn": "Ownable.owner",
            "offset": [
                1201,
                1286
            ],
            "op": "JUMPDEST",
            "path": "0"
        },
        "1115": {
            "op": "POP"
        },
        "1116": {
            "fn": "Ownable.owner",
            "offset": [
                1247,
                1254
            ],
            "op": "PUSH1",
            "path": "0",
            "value": "0x0"
        },
        "1118": {
            "fn": "Ownable.owner",
            "offset": [
                1273,
                1279
            ],
            "op": "SLOAD",
            "path": "0",
            "statement": 0
        },
        "1119": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "1121": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "1123": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "1125": {
            "op": "SHL"
        },
        "1126": {
            "op": "SUB"
        },
        "1127": {
            "fn": "Ownable.owner",
            "offset": [
                1273,
                1279
            ],
            "op": "AND",
            "path": "0"
        },
        "1128": {
            "fn": "Ownable.owner",
            "offset": [
                1201,
                1286
            ],
            "op": "PUSH2",
            "path": "0",
            "value": "0x348"
        },
        "1131": {
            "fn": "Ownable.owner",
            "offset": [
                1201,
                1286
            ],
            "op": "JUMP",
            "path": "0"
        },
        "1132": {
            "offset": [
                1658,
                1685
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1133": {
            "fn": "Ownable.owner",
            "offset": [
                1658,
                1685
            ],
            "op": "CALLVALUE",
            "path": "4"
        },
        "1134": {
            "fn": "Ownable.owner",
            "offset": [
                1658,
                1685
            ],
            "op": "DUP1",
            "path": "4"
        },
        "1135": {
            "fn": "Ownable.owner",
            "offset": [
                1658,
                1685
            ],
            "op": "ISZERO",
            "path": "4"
        },
        "1136": {
            "fn": "Ownable.owner",
            "offset": [
                1658,
                1685
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x478"
        },
        "1139": {
            "fn": "Ownable.owner",
            "offset": [
                1658,
                1685
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "1140": {
            "fn": "Ownable.owner",
            "offset": [
                1658,
                1685
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "1142": {
            "fn": "Ownable.owner",
            "offset": [
                1658,
                1685
            ],
            "op": "DUP1",
            "path": "4"
        },
        "1143": {
            "fn": "Ownable.owner",
            "offset": [
                1658,
                1685
            ],
            "op": "REVERT",
            "path": "4"
        },
        "1144": {
            "fn": "Ownable.owner",
            "offset": [
                1658,
                1685
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1145": {
            "fn": "Ownable.owner",
            "offset": [
                1658,
                1685
            ],
            "op": "POP",
            "path": "4"
        },
        "1146": {
            "fn": "Ownable.owner",
            "offset": [
                1658,
                1685
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x24B"
        },
        "1149": {
            "fn": "Ownable.owner",
            "offset": [
                1658,
                1685
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0xA"
        },
        "1151": {
            "fn": "Ownable.owner",
            "offset": [
                1658,
                1685
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "1152": {
            "fn": "Ownable.owner",
            "offset": [
                1658,
                1685
            ],
            "op": "DUP2",
            "path": "4"
        },
        "1153": {
            "fn": "Ownable.owner",
            "offset": [
                1658,
                1685
            ],
            "op": "JUMP",
            "path": "4"
        },
        "1154": {
            "offset": [
                1691,
                1721
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1155": {
            "fn": "Ownable.owner",
            "offset": [
                1691,
                1721
            ],
            "op": "CALLVALUE",
            "path": "4"
        },
        "1156": {
            "fn": "Ownable.owner",
            "offset": [
                1691,
                1721
            ],
            "op": "DUP1",
            "path": "4"
        },
        "1157": {
            "fn": "Ownable.owner",
            "offset": [
                1691,
                1721
            ],
            "op": "ISZERO",
            "path": "4"
        },
        "1158": {
            "fn": "Ownable.owner",
            "offset": [
                1691,
                1721
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x48E"
        },
        "1161": {
            "fn": "Ownable.owner",
            "offset": [
                1691,
                1721
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "1162": {
            "fn": "Ownable.owner",
            "offset": [
                1691,
                1721
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "1164": {
            "fn": "Ownable.owner",
            "offset": [
                1691,
                1721
            ],
            "op": "DUP1",
            "path": "4"
        },
        "1165": {
            "fn": "Ownable.owner",
            "offset": [
                1691,
                1721
            ],
            "op": "REVERT",
            "path": "4"
        },
        "1166": {
            "fn": "Ownable.owner",
            "offset": [
                1691,
                1721
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1167": {
            "fn": "Ownable.owner",
            "offset": [
                1691,
                1721
            ],
            "op": "POP",
            "path": "4"
        },
        "1168": {
            "fn": "Ownable.owner",
            "offset": [
                1691,
                1721
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x24B"
        },
        "1171": {
            "fn": "Ownable.owner",
            "offset": [
                1691,
                1721
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0xB"
        },
        "1173": {
            "fn": "Ownable.owner",
            "offset": [
                1691,
                1721
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "1174": {
            "fn": "Ownable.owner",
            "offset": [
                1691,
                1721
            ],
            "op": "DUP2",
            "path": "4"
        },
        "1175": {
            "fn": "Ownable.owner",
            "offset": [
                1691,
                1721
            ],
            "op": "JUMP",
            "path": "4"
        },
        "1176": {
            "offset": [
                1411,
                1445
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1177": {
            "fn": "Ownable.owner",
            "offset": [
                1411,
                1445
            ],
            "op": "CALLVALUE",
            "path": "4"
        },
        "1178": {
            "fn": "Ownable.owner",
            "offset": [
                1411,
                1445
            ],
            "op": "DUP1",
            "path": "4"
        },
        "1179": {
            "fn": "Ownable.owner",
            "offset": [
                1411,
                1445
            ],
            "op": "ISZERO",
            "path": "4"
        },
        "1180": {
            "fn": "Ownable.owner",
            "offset": [
                1411,
                1445
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x4A4"
        },
        "1183": {
            "fn": "Ownable.owner",
            "offset": [
                1411,
                1445
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "1184": {
            "fn": "Ownable.owner",
            "offset": [
                1411,
                1445
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "1186": {
            "fn": "Ownable.owner",
            "offset": [
                1411,
                1445
            ],
            "op": "DUP1",
            "path": "4"
        },
        "1187": {
            "fn": "Ownable.owner",
            "offset": [
                1411,
                1445
            ],
            "op": "REVERT",
            "path": "4"
        },
        "1188": {
            "fn": "Ownable.owner",
            "offset": [
                1411,
                1445
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1189": {
            "fn": "Ownable.owner",
            "offset": [
                1411,
                1445
            ],
            "op": "POP",
            "path": "4"
        },
        "1190": {
            "fn": "Ownable.owner",
            "offset": [
                1411,
                1445
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x24B"
        },
        "1193": {
            "fn": "Ownable.owner",
            "offset": [
                1411,
                1445
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x5"
        },
        "1195": {
            "fn": "Ownable.owner",
            "offset": [
                1411,
                1445
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "1196": {
            "fn": "Ownable.owner",
            "offset": [
                1411,
                1445
            ],
            "op": "DUP2",
            "path": "4"
        },
        "1197": {
            "fn": "Ownable.owner",
            "offset": [
                1411,
                1445
            ],
            "op": "JUMP",
            "path": "4"
        },
        "1198": {
            "fn": "MyLottery.setMinumumParticipants",
            "offset": [
                6946,
                7106
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1199": {
            "fn": "MyLottery.setMinumumParticipants",
            "offset": [
                6946,
                7106
            ],
            "op": "CALLVALUE",
            "path": "4"
        },
        "1200": {
            "fn": "MyLottery.setMinumumParticipants",
            "offset": [
                6946,
                7106
            ],
            "op": "DUP1",
            "path": "4"
        },
        "1201": {
            "fn": "MyLottery.setMinumumParticipants",
            "offset": [
                6946,
                7106
            ],
            "op": "ISZERO",
            "path": "4"
        },
        "1202": {
            "fn": "MyLottery.setMinumumParticipants",
            "offset": [
                6946,
                7106
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x4BA"
        },
        "1205": {
            "fn": "MyLottery.setMinumumParticipants",
            "offset": [
                6946,
                7106
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "1206": {
            "fn": "MyLottery.setMinumumParticipants",
            "offset": [
                6946,
                7106
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "1208": {
            "fn": "MyLottery.setMinumumParticipants",
            "offset": [
                6946,
                7106
            ],
            "op": "DUP1",
            "path": "4"
        },
        "1209": {
            "fn": "MyLottery.setMinumumParticipants",
            "offset": [
                6946,
                7106
            ],
            "op": "REVERT",
            "path": "4"
        },
        "1210": {
            "fn": "MyLottery.setMinumumParticipants",
            "offset": [
                6946,
                7106
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1211": {
            "op": "POP"
        },
        "1212": {
            "fn": "MyLottery.setMinumumParticipants",
            "offset": [
                6946,
                7106
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x2A8"
        },
        "1215": {
            "fn": "MyLottery.setMinumumParticipants",
            "offset": [
                6946,
                7106
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x4C9"
        },
        "1218": {
            "fn": "MyLottery.setMinumumParticipants",
            "offset": [
                6946,
                7106
            ],
            "op": "CALLDATASIZE",
            "path": "4"
        },
        "1219": {
            "fn": "MyLottery.setMinumumParticipants",
            "offset": [
                6946,
                7106
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x4"
        },
        "1221": {
            "fn": "MyLottery.setMinumumParticipants",
            "offset": [
                6946,
                7106
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1896"
        },
        "1224": {
            "fn": "MyLottery.setMinumumParticipants",
            "jump": "i",
            "offset": [
                6946,
                7106
            ],
            "op": "JUMP",
            "path": "4"
        },
        "1225": {
            "fn": "MyLottery.setMinumumParticipants",
            "offset": [
                6946,
                7106
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1226": {
            "fn": "MyLottery.setMinumumParticipants",
            "offset": [
                6946,
                7106
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0xA70"
        },
        "1229": {
            "fn": "MyLottery.setMinumumParticipants",
            "jump": "i",
            "offset": [
                6946,
                7106
            ],
            "op": "JUMP",
            "path": "4"
        },
        "1230": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8075,
                8307
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1231": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8075,
                8307
            ],
            "op": "CALLVALUE",
            "path": "4"
        },
        "1232": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8075,
                8307
            ],
            "op": "DUP1",
            "path": "4"
        },
        "1233": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8075,
                8307
            ],
            "op": "ISZERO",
            "path": "4"
        },
        "1234": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8075,
                8307
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x4DA"
        },
        "1237": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8075,
                8307
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "1238": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8075,
                8307
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "1240": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8075,
                8307
            ],
            "op": "DUP1",
            "path": "4"
        },
        "1241": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8075,
                8307
            ],
            "op": "REVERT",
            "path": "4"
        },
        "1242": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8075,
                8307
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1243": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8075,
                8307
            ],
            "op": "POP",
            "path": "4"
        },
        "1244": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8075,
                8307
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x2A8"
        },
        "1247": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8075,
                8307
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0xA7D"
        },
        "1250": {
            "fn": "MyLottery.recoverEth",
            "jump": "i",
            "offset": [
                8075,
                8307
            ],
            "op": "JUMP",
            "path": "4"
        },
        "1251": {
            "offset": [
                1520,
                1565
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1252": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1520,
                1565
            ],
            "op": "CALLVALUE",
            "path": "4"
        },
        "1253": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1520,
                1565
            ],
            "op": "DUP1",
            "path": "4"
        },
        "1254": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1520,
                1565
            ],
            "op": "ISZERO",
            "path": "4"
        },
        "1255": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1520,
                1565
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x4EF"
        },
        "1258": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1520,
                1565
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "1259": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1520,
                1565
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "1261": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1520,
                1565
            ],
            "op": "DUP1",
            "path": "4"
        },
        "1262": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1520,
                1565
            ],
            "op": "REVERT",
            "path": "4"
        },
        "1263": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1520,
                1565
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1264": {
            "op": "POP"
        },
        "1265": {
            "offset": [
                1520,
                1565
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x278"
        },
        "1268": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1520,
                1565
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x4FE"
        },
        "1271": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1520,
                1565
            ],
            "op": "CALLDATASIZE",
            "path": "4"
        },
        "1272": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1520,
                1565
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x4"
        },
        "1274": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1520,
                1565
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x186D"
        },
        "1277": {
            "fn": "MyLottery.recoverEth",
            "jump": "i",
            "offset": [
                1520,
                1565
            ],
            "op": "JUMP",
            "path": "4"
        },
        "1278": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1520,
                1565
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1279": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1520,
                1565
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x8"
        },
        "1281": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1520,
                1565
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x20"
        },
        "1283": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1520,
                1565
            ],
            "op": "MSTORE",
            "path": "4"
        },
        "1284": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1520,
                1565
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "1286": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1520,
                1565
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "1287": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1520,
                1565
            ],
            "op": "DUP2",
            "path": "4"
        },
        "1288": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1520,
                1565
            ],
            "op": "MSTORE",
            "path": "4"
        },
        "1289": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1520,
                1565
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "1291": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1520,
                1565
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "1292": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1520,
                1565
            ],
            "op": "KECCAK256",
            "path": "4"
        },
        "1293": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1520,
                1565
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "1294": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1520,
                1565
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0xFF"
        },
        "1296": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1520,
                1565
            ],
            "op": "AND",
            "path": "4"
        },
        "1297": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1520,
                1565
            ],
            "op": "DUP2",
            "path": "4"
        },
        "1298": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1520,
                1565
            ],
            "op": "JUMP",
            "path": "4"
        },
        "1299": {
            "offset": [
                2549,
                2575
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1300": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                2549,
                2575
            ],
            "op": "CALLVALUE",
            "path": "4"
        },
        "1301": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                2549,
                2575
            ],
            "op": "DUP1",
            "path": "4"
        },
        "1302": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                2549,
                2575
            ],
            "op": "ISZERO",
            "path": "4"
        },
        "1303": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                2549,
                2575
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x51F"
        },
        "1306": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                2549,
                2575
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "1307": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                2549,
                2575
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "1309": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                2549,
                2575
            ],
            "op": "DUP1",
            "path": "4"
        },
        "1310": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                2549,
                2575
            ],
            "op": "REVERT",
            "path": "4"
        },
        "1311": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                2549,
                2575
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1312": {
            "op": "POP"
        },
        "1313": {
            "offset": [
                2549,
                2575
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x12"
        },
        "1315": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                2549,
                2575
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "1316": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                2549,
                2575
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x533"
        },
        "1319": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                2549,
                2575
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "1320": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                2549,
                2575
            ],
            "op": "PUSH3",
            "path": "4",
            "value": "0x10000"
        },
        "1324": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                2549,
                2575
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "1325": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                2549,
                2575
            ],
            "op": "DIV",
            "path": "4"
        },
        "1326": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                2549,
                2575
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0xFF"
        },
        "1328": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                2549,
                2575
            ],
            "op": "AND",
            "path": "4"
        },
        "1329": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                2549,
                2575
            ],
            "op": "DUP2",
            "path": "4"
        },
        "1330": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                2549,
                2575
            ],
            "op": "JUMP",
            "path": "4"
        },
        "1331": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                2549,
                2575
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1332": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                2549,
                2575
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "1334": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                2549,
                2575
            ],
            "op": "MLOAD",
            "path": "4"
        },
        "1335": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                2549,
                2575
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x255"
        },
        "1338": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                2549,
                2575
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "1339": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                2549,
                2575
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "1340": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                2549,
                2575
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x18DF"
        },
        "1343": {
            "fn": "MyLottery.recoverEth",
            "jump": "i",
            "offset": [
                2549,
                2575
            ],
            "op": "JUMP",
            "path": "4"
        },
        "1344": {
            "offset": [
                1791,
                1818
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1345": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1791,
                1818
            ],
            "op": "CALLVALUE",
            "path": "4"
        },
        "1346": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1791,
                1818
            ],
            "op": "DUP1",
            "path": "4"
        },
        "1347": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1791,
                1818
            ],
            "op": "ISZERO",
            "path": "4"
        },
        "1348": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1791,
                1818
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x54C"
        },
        "1351": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1791,
                1818
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "1352": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1791,
                1818
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "1354": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1791,
                1818
            ],
            "op": "DUP1",
            "path": "4"
        },
        "1355": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1791,
                1818
            ],
            "op": "REVERT",
            "path": "4"
        },
        "1356": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1791,
                1818
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1357": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1791,
                1818
            ],
            "op": "POP",
            "path": "4"
        },
        "1358": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1791,
                1818
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x24B"
        },
        "1361": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1791,
                1818
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0xE"
        },
        "1363": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1791,
                1818
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "1364": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1791,
                1818
            ],
            "op": "DUP2",
            "path": "4"
        },
        "1365": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1791,
                1818
            ],
            "op": "JUMP",
            "path": "4"
        },
        "1366": {
            "offset": [
                1891,
                1925
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1367": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1891,
                1925
            ],
            "op": "CALLVALUE",
            "path": "4"
        },
        "1368": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1891,
                1925
            ],
            "op": "DUP1",
            "path": "4"
        },
        "1369": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1891,
                1925
            ],
            "op": "ISZERO",
            "path": "4"
        },
        "1370": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1891,
                1925
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x562"
        },
        "1373": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1891,
                1925
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "1374": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1891,
                1925
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "1376": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1891,
                1925
            ],
            "op": "DUP1",
            "path": "4"
        },
        "1377": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1891,
                1925
            ],
            "op": "REVERT",
            "path": "4"
        },
        "1378": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1891,
                1925
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1379": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1891,
                1925
            ],
            "op": "POP",
            "path": "4"
        },
        "1380": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1891,
                1925
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x24B"
        },
        "1383": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1891,
                1925
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x11"
        },
        "1385": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1891,
                1925
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "1386": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1891,
                1925
            ],
            "op": "DUP2",
            "path": "4"
        },
        "1387": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1891,
                1925
            ],
            "op": "JUMP",
            "path": "4"
        },
        "1388": {
            "offset": [
                1824,
                1849
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1389": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1824,
                1849
            ],
            "op": "CALLVALUE",
            "path": "4"
        },
        "1390": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1824,
                1849
            ],
            "op": "DUP1",
            "path": "4"
        },
        "1391": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1824,
                1849
            ],
            "op": "ISZERO",
            "path": "4"
        },
        "1392": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1824,
                1849
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x578"
        },
        "1395": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1824,
                1849
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "1396": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1824,
                1849
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "1398": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1824,
                1849
            ],
            "op": "DUP1",
            "path": "4"
        },
        "1399": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1824,
                1849
            ],
            "op": "REVERT",
            "path": "4"
        },
        "1400": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1824,
                1849
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1401": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1824,
                1849
            ],
            "op": "POP",
            "path": "4"
        },
        "1402": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1824,
                1849
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x24B"
        },
        "1405": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1824,
                1849
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0xF"
        },
        "1407": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1824,
                1849
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "1408": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1824,
                1849
            ],
            "op": "DUP2",
            "path": "4"
        },
        "1409": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1824,
                1849
            ],
            "op": "JUMP",
            "path": "4"
        },
        "1410": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4749,
                5479
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1411": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4749,
                5479
            ],
            "op": "CALLVALUE",
            "path": "4"
        },
        "1412": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4749,
                5479
            ],
            "op": "DUP1",
            "path": "4"
        },
        "1413": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4749,
                5479
            ],
            "op": "ISZERO",
            "path": "4"
        },
        "1414": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4749,
                5479
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x58E"
        },
        "1417": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4749,
                5479
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "1418": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4749,
                5479
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "1420": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4749,
                5479
            ],
            "op": "DUP1",
            "path": "4"
        },
        "1421": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4749,
                5479
            ],
            "op": "REVERT",
            "path": "4"
        },
        "1422": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4749,
                5479
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1423": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4749,
                5479
            ],
            "op": "POP",
            "path": "4"
        },
        "1424": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4749,
                5479
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x2A8"
        },
        "1427": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4749,
                5479
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0xAEC"
        },
        "1430": {
            "fn": "MyLottery.end_lottery",
            "jump": "i",
            "offset": [
                4749,
                5479
            ],
            "op": "JUMP",
            "path": "4"
        },
        "1431": {
            "offset": [
                2581,
                2599
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1432": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                2581,
                2599
            ],
            "op": "CALLVALUE",
            "path": "4"
        },
        "1433": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                2581,
                2599
            ],
            "op": "DUP1",
            "path": "4"
        },
        "1434": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                2581,
                2599
            ],
            "op": "ISZERO",
            "path": "4"
        },
        "1435": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                2581,
                2599
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x5A3"
        },
        "1438": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                2581,
                2599
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "1439": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                2581,
                2599
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "1441": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                2581,
                2599
            ],
            "op": "DUP1",
            "path": "4"
        },
        "1442": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                2581,
                2599
            ],
            "op": "REVERT",
            "path": "4"
        },
        "1443": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                2581,
                2599
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1444": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                2581,
                2599
            ],
            "op": "POP",
            "path": "4"
        },
        "1445": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                2581,
                2599
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x24B"
        },
        "1448": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                2581,
                2599
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x13"
        },
        "1450": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                2581,
                2599
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "1451": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                2581,
                2599
            ],
            "op": "DUP2",
            "path": "4"
        },
        "1452": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                2581,
                2599
            ],
            "op": "JUMP",
            "path": "4"
        },
        "1453": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4249,
                4743
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1454": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4249,
                4743
            ],
            "op": "CALLVALUE",
            "path": "4"
        },
        "1455": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4249,
                4743
            ],
            "op": "DUP1",
            "path": "4"
        },
        "1456": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4249,
                4743
            ],
            "op": "ISZERO",
            "path": "4"
        },
        "1457": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4249,
                4743
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x5B9"
        },
        "1460": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4249,
                4743
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "1461": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4249,
                4743
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "1463": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4249,
                4743
            ],
            "op": "DUP1",
            "path": "4"
        },
        "1464": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4249,
                4743
            ],
            "op": "REVERT",
            "path": "4"
        },
        "1465": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4249,
                4743
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1466": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4249,
                4743
            ],
            "op": "POP",
            "path": "4"
        },
        "1467": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4249,
                4743
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x2A8"
        },
        "1470": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4249,
                4743
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0xC8B"
        },
        "1473": {
            "fn": "MyLottery.start_lottery",
            "jump": "i",
            "offset": [
                4249,
                4743
            ],
            "op": "JUMP",
            "path": "4"
        },
        "1474": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6359,
                6940
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1475": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6359,
                6940
            ],
            "op": "CALLVALUE",
            "path": "4"
        },
        "1476": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6359,
                6940
            ],
            "op": "DUP1",
            "path": "4"
        },
        "1477": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6359,
                6940
            ],
            "op": "ISZERO",
            "path": "4"
        },
        "1478": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6359,
                6940
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x5CE"
        },
        "1481": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6359,
                6940
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "1482": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6359,
                6940
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "1484": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6359,
                6940
            ],
            "op": "DUP1",
            "path": "4"
        },
        "1485": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6359,
                6940
            ],
            "op": "REVERT",
            "path": "4"
        },
        "1486": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6359,
                6940
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1487": {
            "op": "POP"
        },
        "1488": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6359,
                6940
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x2A8"
        },
        "1491": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6359,
                6940
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x5DD"
        },
        "1494": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6359,
                6940
            ],
            "op": "CALLDATASIZE",
            "path": "4"
        },
        "1495": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6359,
                6940
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x4"
        },
        "1497": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6359,
                6940
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x18F3"
        },
        "1500": {
            "fn": "MyLottery.setPrizePercents",
            "jump": "i",
            "offset": [
                6359,
                6940
            ],
            "op": "JUMP",
            "path": "4"
        },
        "1501": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6359,
                6940
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1502": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6359,
                6940
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0xDDD"
        },
        "1505": {
            "fn": "MyLottery.setPrizePercents",
            "jump": "i",
            "offset": [
                6359,
                6940
            ],
            "op": "JUMP",
            "path": "4"
        },
        "1506": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                2081,
                2279
            ],
            "op": "JUMPDEST",
            "path": "0"
        },
        "1507": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                2081,
                2279
            ],
            "op": "CALLVALUE",
            "path": "0"
        },
        "1508": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                2081,
                2279
            ],
            "op": "DUP1",
            "path": "0"
        },
        "1509": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                2081,
                2279
            ],
            "op": "ISZERO",
            "path": "0"
        },
        "1510": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                2081,
                2279
            ],
            "op": "PUSH2",
            "path": "0",
            "value": "0x5EE"
        },
        "1513": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                2081,
                2279
            ],
            "op": "JUMPI",
            "path": "0"
        },
        "1514": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                2081,
                2279
            ],
            "op": "PUSH1",
            "path": "0",
            "value": "0x0"
        },
        "1516": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                2081,
                2279
            ],
            "op": "DUP1",
            "path": "0"
        },
        "1517": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                2081,
                2279
            ],
            "op": "REVERT",
            "path": "0"
        },
        "1518": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                2081,
                2279
            ],
            "op": "JUMPDEST",
            "path": "0"
        },
        "1519": {
            "op": "POP"
        },
        "1520": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                2081,
                2279
            ],
            "op": "PUSH2",
            "path": "0",
            "value": "0x2A8"
        },
        "1523": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                2081,
                2279
            ],
            "op": "PUSH2",
            "path": "0",
            "value": "0x5FD"
        },
        "1526": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                2081,
                2279
            ],
            "op": "CALLDATASIZE",
            "path": "0"
        },
        "1527": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                2081,
                2279
            ],
            "op": "PUSH1",
            "path": "0",
            "value": "0x4"
        },
        "1529": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                2081,
                2279
            ],
            "op": "PUSH2",
            "path": "0",
            "value": "0x186D"
        },
        "1532": {
            "fn": "Ownable.transferOwnership",
            "jump": "i",
            "offset": [
                2081,
                2279
            ],
            "op": "JUMP",
            "path": "0"
        },
        "1533": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                2081,
                2279
            ],
            "op": "JUMPDEST",
            "path": "0"
        },
        "1534": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                2081,
                2279
            ],
            "op": "PUSH2",
            "path": "0",
            "value": "0xEC8"
        },
        "1537": {
            "fn": "Ownable.transferOwnership",
            "jump": "i",
            "offset": [
                2081,
                2279
            ],
            "op": "JUMP",
            "path": "0"
        },
        "1538": {
            "offset": [
                1274,
                1306
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1539": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                1274,
                1306
            ],
            "op": "CALLVALUE",
            "path": "4"
        },
        "1540": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                1274,
                1306
            ],
            "op": "DUP1",
            "path": "4"
        },
        "1541": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                1274,
                1306
            ],
            "op": "ISZERO",
            "path": "4"
        },
        "1542": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                1274,
                1306
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x60E"
        },
        "1545": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                1274,
                1306
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "1546": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                1274,
                1306
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "1548": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                1274,
                1306
            ],
            "op": "DUP1",
            "path": "4"
        },
        "1549": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                1274,
                1306
            ],
            "op": "REVERT",
            "path": "4"
        },
        "1550": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                1274,
                1306
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1551": {
            "op": "POP"
        },
        "1552": {
            "offset": [
                1274,
                1306
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x348"
        },
        "1555": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                1274,
                1306
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x61D"
        },
        "1558": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                1274,
                1306
            ],
            "op": "CALLDATASIZE",
            "path": "4"
        },
        "1559": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                1274,
                1306
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x4"
        },
        "1561": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                1274,
                1306
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1896"
        },
        "1564": {
            "fn": "Ownable.transferOwnership",
            "jump": "i",
            "offset": [
                1274,
                1306
            ],
            "op": "JUMP",
            "path": "4"
        },
        "1565": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                1274,
                1306
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1566": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                1274,
                1306
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0xF3E"
        },
        "1569": {
            "fn": "Ownable.transferOwnership",
            "jump": "i",
            "offset": [
                1274,
                1306
            ],
            "op": "JUMP",
            "path": "4"
        },
        "1570": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7825,
                8069
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1571": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7825,
                8069
            ],
            "op": "CALLVALUE",
            "path": "4"
        },
        "1572": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7825,
                8069
            ],
            "op": "DUP1",
            "path": "4"
        },
        "1573": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7825,
                8069
            ],
            "op": "ISZERO",
            "path": "4"
        },
        "1574": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7825,
                8069
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x62E"
        },
        "1577": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7825,
                8069
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "1578": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7825,
                8069
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "1580": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7825,
                8069
            ],
            "op": "DUP1",
            "path": "4"
        },
        "1581": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7825,
                8069
            ],
            "op": "REVERT",
            "path": "4"
        },
        "1582": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7825,
                8069
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1583": {
            "op": "POP"
        },
        "1584": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7825,
                8069
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x24B"
        },
        "1587": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7825,
                8069
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x63D"
        },
        "1590": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7825,
                8069
            ],
            "op": "CALLDATASIZE",
            "path": "4"
        },
        "1591": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7825,
                8069
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x4"
        },
        "1593": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7825,
                8069
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x186D"
        },
        "1596": {
            "fn": "MyLottery.getBalance",
            "jump": "i",
            "offset": [
                7825,
                8069
            ],
            "op": "JUMP",
            "path": "4"
        },
        "1597": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7825,
                8069
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1598": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7825,
                8069
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0xF68"
        },
        "1601": {
            "fn": "MyLottery.getBalance",
            "jump": "i",
            "offset": [
                7825,
                8069
            ],
            "op": "JUMP",
            "path": "4"
        },
        "1602": {
            "offset": [
                1761,
                1785
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1603": {
            "fn": "MyLottery.getBalance",
            "offset": [
                1761,
                1785
            ],
            "op": "CALLVALUE",
            "path": "4"
        },
        "1604": {
            "fn": "MyLottery.getBalance",
            "offset": [
                1761,
                1785
            ],
            "op": "DUP1",
            "path": "4"
        },
        "1605": {
            "fn": "MyLottery.getBalance",
            "offset": [
                1761,
                1785
            ],
            "op": "ISZERO",
            "path": "4"
        },
        "1606": {
            "fn": "MyLottery.getBalance",
            "offset": [
                1761,
                1785
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x64E"
        },
        "1609": {
            "fn": "MyLottery.getBalance",
            "offset": [
                1761,
                1785
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "1610": {
            "fn": "MyLottery.getBalance",
            "offset": [
                1761,
                1785
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "1612": {
            "fn": "MyLottery.getBalance",
            "offset": [
                1761,
                1785
            ],
            "op": "DUP1",
            "path": "4"
        },
        "1613": {
            "fn": "MyLottery.getBalance",
            "offset": [
                1761,
                1785
            ],
            "op": "REVERT",
            "path": "4"
        },
        "1614": {
            "fn": "MyLottery.getBalance",
            "offset": [
                1761,
                1785
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1615": {
            "fn": "MyLottery.getBalance",
            "offset": [
                1761,
                1785
            ],
            "op": "POP",
            "path": "4"
        },
        "1616": {
            "fn": "MyLottery.getBalance",
            "offset": [
                1761,
                1785
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x24B"
        },
        "1619": {
            "fn": "MyLottery.getBalance",
            "offset": [
                1761,
                1785
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0xD"
        },
        "1621": {
            "fn": "MyLottery.getBalance",
            "offset": [
                1761,
                1785
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "1622": {
            "fn": "MyLottery.getBalance",
            "offset": [
                1761,
                1785
            ],
            "op": "DUP2",
            "path": "4"
        },
        "1623": {
            "fn": "MyLottery.getBalance",
            "offset": [
                1761,
                1785
            ],
            "op": "JUMP",
            "path": "4"
        },
        "1624": {
            "fn": "MyLottery.setEntranceFee",
            "offset": [
                7431,
                7653
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1625": {
            "fn": "MyLottery.setEntranceFee",
            "offset": [
                7431,
                7653
            ],
            "op": "CALLVALUE",
            "path": "4"
        },
        "1626": {
            "fn": "MyLottery.setEntranceFee",
            "offset": [
                7431,
                7653
            ],
            "op": "DUP1",
            "path": "4"
        },
        "1627": {
            "fn": "MyLottery.setEntranceFee",
            "offset": [
                7431,
                7653
            ],
            "op": "ISZERO",
            "path": "4"
        },
        "1628": {
            "fn": "MyLottery.setEntranceFee",
            "offset": [
                7431,
                7653
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x664"
        },
        "1631": {
            "fn": "MyLottery.setEntranceFee",
            "offset": [
                7431,
                7653
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "1632": {
            "fn": "MyLottery.setEntranceFee",
            "offset": [
                7431,
                7653
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "1634": {
            "fn": "MyLottery.setEntranceFee",
            "offset": [
                7431,
                7653
            ],
            "op": "DUP1",
            "path": "4"
        },
        "1635": {
            "fn": "MyLottery.setEntranceFee",
            "offset": [
                7431,
                7653
            ],
            "op": "REVERT",
            "path": "4"
        },
        "1636": {
            "fn": "MyLottery.setEntranceFee",
            "offset": [
                7431,
                7653
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1637": {
            "op": "POP"
        },
        "1638": {
            "fn": "MyLottery.setEntranceFee",
            "offset": [
                7431,
                7653
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x2A8"
        },
        "1641": {
            "fn": "MyLottery.setEntranceFee",
            "offset": [
                7431,
                7653
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x673"
        },
        "1644": {
            "fn": "MyLottery.setEntranceFee",
            "offset": [
                7431,
                7653
            ],
            "op": "CALLDATASIZE",
            "path": "4"
        },
        "1645": {
            "fn": "MyLottery.setEntranceFee",
            "offset": [
                7431,
                7653
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x4"
        },
        "1647": {
            "fn": "MyLottery.setEntranceFee",
            "offset": [
                7431,
                7653
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1896"
        },
        "1650": {
            "fn": "MyLottery.setEntranceFee",
            "jump": "i",
            "offset": [
                7431,
                7653
            ],
            "op": "JUMP",
            "path": "4"
        },
        "1651": {
            "fn": "MyLottery.setEntranceFee",
            "offset": [
                7431,
                7653
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1652": {
            "fn": "MyLottery.setEntranceFee",
            "offset": [
                7431,
                7653
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0xFDC"
        },
        "1655": {
            "fn": "MyLottery.setEntranceFee",
            "jump": "i",
            "offset": [
                7431,
                7653
            ],
            "op": "JUMP",
            "path": "4"
        },
        "1656": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8313,
                8497
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1657": {
            "offset": [
                1094,
                1107
            ],
            "op": "PUSH2",
            "path": "0",
            "value": "0x680"
        },
        "1660": {
            "offset": [
                1094,
                1105
            ],
            "op": "PUSH2",
            "path": "0",
            "value": "0x1024"
        },
        "1663": {
            "jump": "i",
            "offset": [
                1094,
                1107
            ],
            "op": "JUMP",
            "path": "0"
        },
        "1664": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                1094,
                1107
            ],
            "op": "JUMPDEST",
            "path": "0"
        },
        "1665": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8459,
                8489
            ],
            "op": "PUSH1",
            "path": "4",
            "statement": 1,
            "value": "0x40"
        },
        "1667": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8459,
                8489
            ],
            "op": "MLOAD",
            "path": "4"
        },
        "1668": {
            "op": "PUSH4",
            "value": "0x70A08231"
        },
        "1673": {
            "op": "PUSH1",
            "value": "0xE0"
        },
        "1675": {
            "op": "SHL"
        },
        "1676": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8459,
                8489
            ],
            "op": "DUP2",
            "path": "4"
        },
        "1677": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8459,
                8489
            ],
            "op": "MSTORE",
            "path": "4"
        },
        "1678": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8483,
                8487
            ],
            "op": "ADDRESS",
            "path": "4"
        },
        "1679": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8459,
                8489
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x4"
        },
        "1681": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8459,
                8489
            ],
            "op": "DUP3",
            "path": "4"
        },
        "1682": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8459,
                8489
            ],
            "op": "ADD",
            "path": "4"
        },
        "1683": {
            "op": "MSTORE"
        },
        "1684": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8409,
                8421
            ],
            "op": "DUP2",
            "path": "4"
        },
        "1685": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8409,
                8421
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "1686": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "1688": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "1690": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "1692": {
            "op": "SHL"
        },
        "1693": {
            "op": "SUB"
        },
        "1694": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8432,
                8446
            ],
            "op": "DUP3",
            "path": "4"
        },
        "1695": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8432,
                8446
            ],
            "op": "AND",
            "path": "4"
        },
        "1696": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8432,
                8446
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "1697": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8432,
                8446
            ],
            "op": "PUSH4",
            "path": "4",
            "value": "0xA9059CBB"
        },
        "1702": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8432,
                8446
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "1703": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8447,
                8457
            ],
            "op": "CALLER",
            "path": "4"
        },
        "1704": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8447,
                8457
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "1705": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8432,
                8446
            ],
            "op": "DUP4",
            "path": "4"
        },
        "1706": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8432,
                8446
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "1707": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8459,
                8474
            ],
            "op": "PUSH4",
            "path": "4",
            "value": "0x70A08231"
        },
        "1712": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8459,
                8474
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "1713": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "1715": {
            "op": "ADD"
        },
        "1716": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8459,
                8489
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x20"
        },
        "1718": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8459,
                8489
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "1720": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8459,
                8489
            ],
            "op": "MLOAD",
            "path": "4"
        },
        "1721": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8459,
                8489
            ],
            "op": "DUP1",
            "path": "4"
        },
        "1722": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8459,
                8489
            ],
            "op": "DUP4",
            "path": "4"
        },
        "1723": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8459,
                8489
            ],
            "op": "SUB",
            "path": "4"
        },
        "1724": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8459,
                8489
            ],
            "op": "DUP2",
            "path": "4"
        },
        "1725": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8459,
                8489
            ],
            "op": "DUP7",
            "path": "4"
        },
        "1726": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8459,
                8489
            ],
            "op": "GAS",
            "path": "4"
        },
        "1727": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8459,
                8489
            ],
            "op": "STATICCALL",
            "path": "4"
        },
        "1728": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8459,
                8489
            ],
            "op": "ISZERO",
            "path": "4"
        },
        "1729": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8459,
                8489
            ],
            "op": "DUP1",
            "path": "4"
        },
        "1730": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8459,
                8489
            ],
            "op": "ISZERO",
            "path": "4"
        },
        "1731": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8459,
                8489
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x6D0"
        },
        "1734": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8459,
                8489
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "1735": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8459,
                8489
            ],
            "op": "RETURNDATASIZE",
            "path": "4"
        },
        "1736": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8459,
                8489
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "1738": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8459,
                8489
            ],
            "op": "DUP1",
            "path": "4"
        },
        "1739": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8459,
                8489
            ],
            "op": "RETURNDATACOPY",
            "path": "4"
        },
        "1740": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8459,
                8489
            ],
            "op": "RETURNDATASIZE",
            "path": "4"
        },
        "1741": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8459,
                8489
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "1743": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8459,
                8489
            ],
            "op": "REVERT",
            "path": "4"
        },
        "1744": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8459,
                8489
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1745": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8459,
                8489
            ],
            "op": "POP",
            "path": "4"
        },
        "1746": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8459,
                8489
            ],
            "op": "POP",
            "path": "4"
        },
        "1747": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8459,
                8489
            ],
            "op": "POP",
            "path": "4"
        },
        "1748": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8459,
                8489
            ],
            "op": "POP",
            "path": "4"
        },
        "1749": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8459,
                8489
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "1751": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8459,
                8489
            ],
            "op": "MLOAD",
            "path": "4"
        },
        "1752": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8459,
                8489
            ],
            "op": "RETURNDATASIZE",
            "path": "4"
        },
        "1753": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8459,
                8489
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x1F"
        },
        "1755": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8459,
                8489
            ],
            "op": "NOT",
            "path": "4"
        },
        "1756": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8459,
                8489
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x1F"
        },
        "1758": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8459,
                8489
            ],
            "op": "DUP3",
            "path": "4"
        },
        "1759": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8459,
                8489
            ],
            "op": "ADD",
            "path": "4"
        },
        "1760": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8459,
                8489
            ],
            "op": "AND",
            "path": "4"
        },
        "1761": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8459,
                8489
            ],
            "op": "DUP3",
            "path": "4"
        },
        "1762": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8459,
                8489
            ],
            "op": "ADD",
            "path": "4"
        },
        "1763": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8459,
                8489
            ],
            "op": "DUP1",
            "path": "4"
        },
        "1764": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8459,
                8489
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "1766": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8459,
                8489
            ],
            "op": "MSTORE",
            "path": "4"
        },
        "1767": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8459,
                8489
            ],
            "op": "POP",
            "path": "4"
        },
        "1768": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8459,
                8489
            ],
            "op": "DUP2",
            "path": "4"
        },
        "1769": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8459,
                8489
            ],
            "op": "ADD",
            "path": "4"
        },
        "1770": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8459,
                8489
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "1771": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8459,
                8489
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x6F4"
        },
        "1774": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8459,
                8489
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "1775": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8459,
                8489
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "1776": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8459,
                8489
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x191F"
        },
        "1779": {
            "fn": "MyLottery.recoverTokens",
            "jump": "i",
            "offset": [
                8459,
                8489
            ],
            "op": "JUMP",
            "path": "4"
        },
        "1780": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8459,
                8489
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1781": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8432,
                8490
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "1783": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8432,
                8490
            ],
            "op": "MLOAD",
            "path": "4"
        },
        "1784": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "1786": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "1788": {
            "op": "PUSH1",
            "value": "0xE0"
        },
        "1790": {
            "op": "SHL"
        },
        "1791": {
            "op": "SUB"
        },
        "1792": {
            "op": "NOT"
        },
        "1793": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8432,
                8490
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0xE0"
        },
        "1795": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8432,
                8490
            ],
            "op": "DUP6",
            "path": "4"
        },
        "1796": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8432,
                8490
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "1797": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8432,
                8490
            ],
            "op": "SHL",
            "path": "4"
        },
        "1798": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8432,
                8490
            ],
            "op": "AND",
            "path": "4"
        },
        "1799": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8432,
                8490
            ],
            "op": "DUP2",
            "path": "4"
        },
        "1800": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8432,
                8490
            ],
            "op": "MSTORE",
            "path": "4"
        },
        "1801": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "1803": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "1805": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "1807": {
            "op": "SHL"
        },
        "1808": {
            "op": "SUB"
        },
        "1809": {
            "op": "SWAP1"
        },
        "1810": {
            "op": "SWAP3"
        },
        "1811": {
            "op": "AND"
        },
        "1812": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8432,
                8490
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x4"
        },
        "1814": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8432,
                8490
            ],
            "op": "DUP4",
            "path": "4"
        },
        "1815": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8432,
                8490
            ],
            "op": "ADD",
            "path": "4"
        },
        "1816": {
            "op": "MSTORE"
        },
        "1817": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "1819": {
            "op": "DUP3"
        },
        "1820": {
            "op": "ADD"
        },
        "1821": {
            "op": "MSTORE"
        },
        "1822": {
            "op": "PUSH1",
            "value": "0x44"
        },
        "1824": {
            "op": "ADD"
        },
        "1825": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8432,
                8490
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x20"
        },
        "1827": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8432,
                8490
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "1829": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8432,
                8490
            ],
            "op": "MLOAD",
            "path": "4"
        },
        "1830": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8432,
                8490
            ],
            "op": "DUP1",
            "path": "4"
        },
        "1831": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8432,
                8490
            ],
            "op": "DUP4",
            "path": "4"
        },
        "1832": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8432,
                8490
            ],
            "op": "SUB",
            "path": "4"
        },
        "1833": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8432,
                8490
            ],
            "op": "DUP2",
            "path": "4"
        },
        "1834": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8432,
                8490
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "1836": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8432,
                8490
            ],
            "op": "DUP8",
            "path": "4"
        },
        "1837": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8432,
                8490
            ],
            "op": "GAS",
            "path": "4"
        },
        "1838": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8432,
                8490
            ],
            "op": "CALL",
            "path": "4"
        },
        "1839": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8432,
                8490
            ],
            "op": "ISZERO",
            "path": "4"
        },
        "1840": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8432,
                8490
            ],
            "op": "DUP1",
            "path": "4"
        },
        "1841": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8432,
                8490
            ],
            "op": "ISZERO",
            "path": "4"
        },
        "1842": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8432,
                8490
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x73F"
        },
        "1845": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8432,
                8490
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "1846": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8432,
                8490
            ],
            "op": "RETURNDATASIZE",
            "path": "4"
        },
        "1847": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8432,
                8490
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "1849": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8432,
                8490
            ],
            "op": "DUP1",
            "path": "4"
        },
        "1850": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8432,
                8490
            ],
            "op": "RETURNDATACOPY",
            "path": "4"
        },
        "1851": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8432,
                8490
            ],
            "op": "RETURNDATASIZE",
            "path": "4"
        },
        "1852": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8432,
                8490
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "1854": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8432,
                8490
            ],
            "op": "REVERT",
            "path": "4"
        },
        "1855": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8432,
                8490
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1856": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8432,
                8490
            ],
            "op": "POP",
            "path": "4"
        },
        "1857": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8432,
                8490
            ],
            "op": "POP",
            "path": "4"
        },
        "1858": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8432,
                8490
            ],
            "op": "POP",
            "path": "4"
        },
        "1859": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8432,
                8490
            ],
            "op": "POP",
            "path": "4"
        },
        "1860": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8432,
                8490
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "1862": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8432,
                8490
            ],
            "op": "MLOAD",
            "path": "4"
        },
        "1863": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8432,
                8490
            ],
            "op": "RETURNDATASIZE",
            "path": "4"
        },
        "1864": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8432,
                8490
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x1F"
        },
        "1866": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8432,
                8490
            ],
            "op": "NOT",
            "path": "4"
        },
        "1867": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8432,
                8490
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x1F"
        },
        "1869": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8432,
                8490
            ],
            "op": "DUP3",
            "path": "4"
        },
        "1870": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8432,
                8490
            ],
            "op": "ADD",
            "path": "4"
        },
        "1871": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8432,
                8490
            ],
            "op": "AND",
            "path": "4"
        },
        "1872": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8432,
                8490
            ],
            "op": "DUP3",
            "path": "4"
        },
        "1873": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8432,
                8490
            ],
            "op": "ADD",
            "path": "4"
        },
        "1874": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8432,
                8490
            ],
            "op": "DUP1",
            "path": "4"
        },
        "1875": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8432,
                8490
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "1877": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8432,
                8490
            ],
            "op": "MSTORE",
            "path": "4"
        },
        "1878": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8432,
                8490
            ],
            "op": "POP",
            "path": "4"
        },
        "1879": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8432,
                8490
            ],
            "op": "DUP2",
            "path": "4"
        },
        "1880": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8432,
                8490
            ],
            "op": "ADD",
            "path": "4"
        },
        "1881": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8432,
                8490
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "1882": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8432,
                8490
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x763"
        },
        "1885": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8432,
                8490
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "1886": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8432,
                8490
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "1887": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8432,
                8490
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1938"
        },
        "1890": {
            "fn": "MyLottery.recoverTokens",
            "jump": "i",
            "offset": [
                8432,
                8490
            ],
            "op": "JUMP",
            "path": "4"
        },
        "1891": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8432,
                8490
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1892": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8432,
                8490
            ],
            "op": "POP",
            "path": "4"
        },
        "1893": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8377,
                8497
            ],
            "op": "POP",
            "path": "4"
        },
        "1894": {
            "fn": "MyLottery.recoverTokens",
            "offset": [
                8313,
                8497
            ],
            "op": "POP",
            "path": "4"
        },
        "1895": {
            "fn": "MyLottery.recoverTokens",
            "jump": "o",
            "offset": [
                8313,
                8497
            ],
            "op": "JUMP",
            "path": "4"
        },
        "1896": {
            "fn": "MyLottery.setEmergencyClose",
            "offset": [
                7331,
                7425
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1897": {
            "offset": [
                1094,
                1107
            ],
            "op": "PUSH2",
            "path": "0",
            "value": "0x770"
        },
        "1900": {
            "offset": [
                1094,
                1105
            ],
            "op": "PUSH2",
            "path": "0",
            "value": "0x1024"
        },
        "1903": {
            "jump": "i",
            "offset": [
                1094,
                1107
            ],
            "op": "JUMP",
            "path": "0"
        },
        "1904": {
            "fn": "MyLottery.setEmergencyClose",
            "offset": [
                1094,
                1107
            ],
            "op": "JUMPDEST",
            "path": "0"
        },
        "1905": {
            "fn": "MyLottery.setEmergencyClose",
            "offset": [
                7389,
                7398
            ],
            "op": "PUSH1",
            "path": "4",
            "statement": 2,
            "value": "0x12"
        },
        "1907": {
            "fn": "MyLottery.setEmergencyClose",
            "offset": [
                7389,
                7418
            ],
            "op": "DUP1",
            "path": "4"
        },
        "1908": {
            "fn": "MyLottery.setEmergencyClose",
            "offset": [
                7389,
                7418
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "1909": {
            "fn": "MyLottery.setEmergencyClose",
            "offset": [
                7401,
                7418
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "1911": {
            "fn": "MyLottery.setEmergencyClose",
            "offset": [
                7401,
                7418
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "1912": {
            "fn": "MyLottery.setEmergencyClose",
            "offset": [
                7389,
                7398
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "1913": {
            "op": "PUSH3",
            "value": "0xFF0000"
        },
        "1917": {
            "op": "NOT"
        },
        "1918": {
            "fn": "MyLottery.setEmergencyClose",
            "offset": [
                7389,
                7418
            ],
            "op": "AND",
            "path": "4"
        },
        "1919": {
            "fn": "MyLottery.setEmergencyClose",
            "offset": [
                7389,
                7418
            ],
            "op": "PUSH3",
            "path": "4",
            "value": "0x10000"
        },
        "1923": {
            "fn": "MyLottery.setEmergencyClose",
            "offset": [
                7401,
                7418
            ],
            "op": "DUP4",
            "path": "4"
        },
        "1924": {
            "fn": "MyLottery.setEmergencyClose",
            "offset": [
                7389,
                7418
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1925": {
            "fn": "MyLottery.setEmergencyClose",
            "offset": [
                7389,
                7418
            ],
            "op": "MUL",
            "path": "4"
        },
        "1926": {
            "fn": "MyLottery.setEmergencyClose",
            "offset": [
                7389,
                7418
            ],
            "op": "OR",
            "path": "4"
        },
        "1927": {
            "fn": "MyLottery.setEmergencyClose",
            "offset": [
                7389,
                7418
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "1928": {
            "fn": "MyLottery.setEmergencyClose",
            "offset": [
                7389,
                7418
            ],
            "op": "SSTORE",
            "path": "4"
        },
        "1929": {
            "fn": "MyLottery.setEmergencyClose",
            "offset": [
                7389,
                7418
            ],
            "op": "POP",
            "path": "4"
        },
        "1930": {
            "fn": "MyLottery.setEmergencyClose",
            "jump": "o",
            "offset": [
                7331,
                7425
            ],
            "op": "JUMP",
            "path": "4"
        },
        "1931": {
            "fn": "MyLottery.setLotteryDuration",
            "offset": [
                7112,
                7222
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1932": {
            "offset": [
                1094,
                1107
            ],
            "op": "PUSH2",
            "path": "0",
            "value": "0x793"
        },
        "1935": {
            "offset": [
                1094,
                1105
            ],
            "op": "PUSH2",
            "path": "0",
            "value": "0x1024"
        },
        "1938": {
            "jump": "i",
            "offset": [
                1094,
                1107
            ],
            "op": "JUMP",
            "path": "0"
        },
        "1939": {
            "fn": "MyLottery.setLotteryDuration",
            "offset": [
                1094,
                1107
            ],
            "op": "JUMPDEST",
            "path": "0"
        },
        "1940": {
            "fn": "MyLottery.setLotteryDuration",
            "offset": [
                7188,
                7203
            ],
            "op": "PUSH1",
            "path": "4",
            "statement": 3,
            "value": "0x10"
        },
        "1942": {
            "fn": "MyLottery.setLotteryDuration",
            "offset": [
                7188,
                7215
            ],
            "op": "SSTORE",
            "path": "4"
        },
        "1943": {
            "fn": "MyLottery.setLotteryDuration",
            "jump": "o",
            "offset": [
                7112,
                7222
            ],
            "op": "JUMP",
            "path": "4"
        },
        "1944": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3454,
                4243
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "1945": {
            "offset": [
                1744,
                1745
            ],
            "op": "PUSH1",
            "path": "1",
            "value": "0x2"
        },
        "1947": {
            "offset": [
                2325,
                2332
            ],
            "op": "PUSH1",
            "path": "1",
            "value": "0x1"
        },
        "1949": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                2325,
                2332
            ],
            "op": "SLOAD",
            "path": "1"
        },
        "1950": {
            "offset": [
                2325,
                2344
            ],
            "op": "SUB",
            "path": "1"
        },
        "1951": {
            "offset": [
                2317,
                2380
            ],
            "op": "PUSH2",
            "path": "1",
            "value": "0x7C3"
        },
        "1954": {
            "offset": [
                2317,
                2380
            ],
            "op": "JUMPI",
            "path": "1"
        },
        "1955": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                2317,
                2380
            ],
            "op": "PUSH1",
            "path": "1",
            "value": "0x40"
        },
        "1957": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                2317,
                2380
            ],
            "op": "MLOAD",
            "path": "1"
        },
        "1958": {
            "op": "PUSH3",
            "value": "0x461BCD"
        },
        "1962": {
            "op": "PUSH1",
            "value": "0xE5"
        },
        "1964": {
            "op": "SHL"
        },
        "1965": {
            "offset": [
                2317,
                2380
            ],
            "op": "DUP2",
            "path": "1"
        },
        "1966": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                2317,
                2380
            ],
            "op": "MSTORE",
            "path": "1"
        },
        "1967": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                2317,
                2380
            ],
            "op": "PUSH1",
            "path": "1",
            "value": "0x4"
        },
        "1969": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                2317,
                2380
            ],
            "op": "ADD",
            "path": "1"
        },
        "1970": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                2317,
                2380
            ],
            "op": "PUSH2",
            "path": "1",
            "value": "0x7BA"
        },
        "1973": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                2317,
                2380
            ],
            "op": "SWAP1",
            "path": "1"
        },
        "1974": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                2317,
                2380
            ],
            "op": "PUSH2",
            "path": "1",
            "value": "0x195A"
        },
        "1977": {
            "fn": "MyLottery.enter_lottery",
            "jump": "i",
            "offset": [
                2317,
                2380
            ],
            "op": "JUMP",
            "path": "1"
        },
        "1978": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                2317,
                2380
            ],
            "op": "JUMPDEST",
            "path": "1"
        },
        "1979": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                2317,
                2380
            ],
            "op": "PUSH1",
            "path": "1",
            "value": "0x40"
        },
        "1981": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                2317,
                2380
            ],
            "op": "MLOAD",
            "path": "1"
        },
        "1982": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                2317,
                2380
            ],
            "op": "DUP1",
            "path": "1"
        },
        "1983": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                2317,
                2380
            ],
            "op": "SWAP2",
            "path": "1"
        },
        "1984": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                2317,
                2380
            ],
            "op": "SUB",
            "path": "1"
        },
        "1985": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                2317,
                2380
            ],
            "op": "SWAP1",
            "path": "1"
        },
        "1986": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                2317,
                2380
            ],
            "op": "REVERT",
            "optimizer_revert": true,
            "path": "1"
        },
        "1987": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                2317,
                2380
            ],
            "op": "JUMPDEST",
            "path": "1"
        },
        "1988": {
            "offset": [
                1744,
                1745
            ],
            "op": "PUSH1",
            "path": "1",
            "value": "0x2"
        },
        "1990": {
            "offset": [
                2455,
                2462
            ],
            "op": "PUSH1",
            "path": "1",
            "value": "0x1"
        },
        "1992": {
            "offset": [
                2455,
                2473
            ],
            "op": "SSTORE",
            "path": "1"
        },
        "1993": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3539,
                3549
            ],
            "op": "CALLER",
            "path": "4",
            "statement": 4
        },
        "1994": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3525,
                3550
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "1996": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3525,
                3550
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "1997": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3525,
                3550
            ],
            "op": "DUP2",
            "path": "4"
        },
        "1998": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3525,
                3550
            ],
            "op": "MSTORE",
            "path": "4"
        },
        "1999": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3525,
                3538
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x8"
        },
        "2001": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3525,
                3550
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x20"
        },
        "2003": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3525,
                3550
            ],
            "op": "MSTORE",
            "path": "4"
        },
        "2004": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3525,
                3550
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "2006": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3525,
                3550
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "2007": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3525,
                3550
            ],
            "op": "KECCAK256",
            "path": "4"
        },
        "2008": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3525,
                3550
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "2009": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3525,
                3550
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0xFF"
        },
        "2011": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3525,
                3550
            ],
            "op": "AND",
            "path": "4"
        },
        "2012": {
            "branch": 80,
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3525,
                3559
            ],
            "op": "ISZERO",
            "path": "4"
        },
        "2013": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3517,
                3579
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x81A"
        },
        "2016": {
            "branch": 80,
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3517,
                3579
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "2017": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3517,
                3579
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "2019": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3517,
                3579
            ],
            "op": "MLOAD",
            "path": "4"
        },
        "2020": {
            "op": "PUSH3",
            "value": "0x461BCD"
        },
        "2024": {
            "op": "PUSH1",
            "value": "0xE5"
        },
        "2026": {
            "op": "SHL"
        },
        "2027": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3517,
                3579
            ],
            "op": "DUP2",
            "path": "4"
        },
        "2028": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3517,
                3579
            ],
            "op": "MSTORE",
            "path": "4"
        },
        "2029": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "2031": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3517,
                3579
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x4"
        },
        "2033": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3517,
                3579
            ],
            "op": "DUP3",
            "path": "4"
        },
        "2034": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3517,
                3579
            ],
            "op": "ADD",
            "path": "4"
        },
        "2035": {
            "op": "MSTORE"
        },
        "2036": {
            "op": "PUSH1",
            "value": "0xF"
        },
        "2038": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "2040": {
            "op": "DUP3"
        },
        "2041": {
            "op": "ADD"
        },
        "2042": {
            "op": "MSTORE"
        },
        "2043": {
            "op": "PUSH15",
            "value": "0x105B1C9958591E48195B9D195C9959"
        },
        "2059": {
            "op": "PUSH1",
            "value": "0x8A"
        },
        "2061": {
            "op": "SHL"
        },
        "2062": {
            "op": "PUSH1",
            "value": "0x44"
        },
        "2064": {
            "op": "DUP3"
        },
        "2065": {
            "op": "ADD"
        },
        "2066": {
            "op": "MSTORE"
        },
        "2067": {
            "op": "PUSH1",
            "value": "0x64"
        },
        "2069": {
            "op": "ADD"
        },
        "2070": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3517,
                3579
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x7BA"
        },
        "2073": {
            "op": "JUMP"
        },
        "2074": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3517,
                3579
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "2075": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3603,
                3613
            ],
            "op": "CALLER",
            "path": "4",
            "statement": 5
        },
        "2076": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3589,
                3614
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "2078": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3589,
                3614
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "2079": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3589,
                3614
            ],
            "op": "DUP2",
            "path": "4"
        },
        "2080": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3589,
                3614
            ],
            "op": "MSTORE",
            "path": "4"
        },
        "2081": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3589,
                3602
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x8"
        },
        "2083": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3589,
                3614
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x20"
        },
        "2085": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3589,
                3614
            ],
            "op": "MSTORE",
            "path": "4"
        },
        "2086": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3589,
                3614
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "2088": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3589,
                3614
            ],
            "op": "DUP2",
            "path": "4"
        },
        "2089": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3589,
                3614
            ],
            "op": "KECCAK256",
            "path": "4"
        },
        "2090": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3589,
                3621
            ],
            "op": "DUP1",
            "path": "4"
        },
        "2091": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3589,
                3621
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "2092": {
            "op": "PUSH1",
            "value": "0xFF"
        },
        "2094": {
            "op": "NOT"
        },
        "2095": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3589,
                3621
            ],
            "op": "AND",
            "path": "4"
        },
        "2096": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3617,
                3621
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x1"
        },
        "2098": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3589,
                3621
            ],
            "op": "OR",
            "path": "4"
        },
        "2099": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3589,
                3621
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "2100": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3589,
                3621
            ],
            "op": "SSTORE",
            "path": "4"
        },
        "2101": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3639,
                3652
            ],
            "op": "PUSH1",
            "path": "4",
            "statement": 6,
            "value": "0x12"
        },
        "2103": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3639,
                3652
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "2104": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3639,
                3652
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x100"
        },
        "2107": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3639,
                3652
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "2108": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3639,
                3652
            ],
            "op": "DIV",
            "path": "4"
        },
        "2109": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3639,
                3652
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0xFF"
        },
        "2111": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3639,
                3652
            ],
            "op": "AND",
            "path": "4"
        },
        "2112": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3639,
                3674
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x2"
        },
        "2114": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3639,
                3674
            ],
            "op": "DUP2",
            "path": "4"
        },
        "2115": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3639,
                3674
            ],
            "op": "GT",
            "path": "4"
        },
        "2116": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3639,
                3674
            ],
            "op": "ISZERO",
            "path": "4"
        },
        "2117": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3639,
                3674
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x850"
        },
        "2120": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3639,
                3674
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "2121": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3639,
                3674
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x850"
        },
        "2124": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3639,
                3674
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x18AF"
        },
        "2127": {
            "fn": "MyLottery.enter_lottery",
            "jump": "i",
            "offset": [
                3639,
                3674
            ],
            "op": "JUMP",
            "path": "4"
        },
        "2128": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3639,
                3674
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "2129": {
            "branch": 81,
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3639,
                3674
            ],
            "op": "EQ",
            "path": "4"
        },
        "2130": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3631,
                3698
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x893"
        },
        "2133": {
            "branch": 81,
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3631,
                3698
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "2134": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3631,
                3698
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "2136": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3631,
                3698
            ],
            "op": "MLOAD",
            "path": "4"
        },
        "2137": {
            "op": "PUSH3",
            "value": "0x461BCD"
        },
        "2141": {
            "op": "PUSH1",
            "value": "0xE5"
        },
        "2143": {
            "op": "SHL"
        },
        "2144": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3631,
                3698
            ],
            "op": "DUP2",
            "path": "4"
        },
        "2145": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3631,
                3698
            ],
            "op": "MSTORE",
            "path": "4"
        },
        "2146": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "2148": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3631,
                3698
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x4"
        },
        "2150": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3631,
                3698
            ],
            "op": "DUP3",
            "path": "4"
        },
        "2151": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3631,
                3698
            ],
            "op": "ADD",
            "path": "4"
        },
        "2152": {
            "op": "MSTORE"
        },
        "2153": {
            "op": "PUSH1",
            "value": "0x13"
        },
        "2155": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "2157": {
            "op": "DUP3"
        },
        "2158": {
            "op": "ADD"
        },
        "2159": {
            "op": "MSTORE"
        },
        "2160": {
            "op": "PUSH19",
            "value": "0x131BDD1D195C9E48139BDD081CDD185C9D1959"
        },
        "2180": {
            "op": "PUSH1",
            "value": "0x6A"
        },
        "2182": {
            "op": "SHL"
        },
        "2183": {
            "op": "PUSH1",
            "value": "0x44"
        },
        "2185": {
            "op": "DUP3"
        },
        "2186": {
            "op": "ADD"
        },
        "2187": {
            "op": "MSTORE"
        },
        "2188": {
            "op": "PUSH1",
            "value": "0x64"
        },
        "2190": {
            "op": "ADD"
        },
        "2191": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3631,
                3698
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x7BA"
        },
        "2194": {
            "op": "JUMP"
        },
        "2195": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3631,
                3698
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "2196": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3730,
                3751
            ],
            "op": "PUSH1",
            "path": "4",
            "statement": 7,
            "value": "0x1"
        },
        "2198": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3717,
                3726
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x12"
        },
        "2200": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3717,
                3726
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "2201": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3717,
                3726
            ],
            "op": "PUSH3",
            "path": "4",
            "value": "0x10000"
        },
        "2205": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3717,
                3726
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "2206": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3717,
                3726
            ],
            "op": "DIV",
            "path": "4"
        },
        "2207": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3717,
                3726
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0xFF"
        },
        "2209": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3717,
                3726
            ],
            "op": "AND",
            "path": "4"
        },
        "2210": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3717,
                3751
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x1"
        },
        "2212": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3717,
                3751
            ],
            "op": "DUP2",
            "path": "4"
        },
        "2213": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3717,
                3751
            ],
            "op": "GT",
            "path": "4"
        },
        "2214": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3717,
                3751
            ],
            "op": "ISZERO",
            "path": "4"
        },
        "2215": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3717,
                3751
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x8B2"
        },
        "2218": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3717,
                3751
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "2219": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3717,
                3751
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x8B2"
        },
        "2222": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3717,
                3751
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x18AF"
        },
        "2225": {
            "fn": "MyLottery.enter_lottery",
            "jump": "i",
            "offset": [
                3717,
                3751
            ],
            "op": "JUMP",
            "path": "4"
        },
        "2226": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3717,
                3751
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "2227": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3717,
                3751
            ],
            "op": "EQ",
            "path": "4"
        },
        "2228": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3708,
                3772
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x8CF"
        },
        "2231": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3708,
                3772
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "2232": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3708,
                3772
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "2234": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3708,
                3772
            ],
            "op": "MLOAD",
            "path": "4"
        },
        "2235": {
            "op": "PUSH3",
            "value": "0x461BCD"
        },
        "2239": {
            "op": "PUSH1",
            "value": "0xE5"
        },
        "2241": {
            "op": "SHL"
        },
        "2242": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3708,
                3772
            ],
            "op": "DUP2",
            "path": "4"
        },
        "2243": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3708,
                3772
            ],
            "op": "MSTORE",
            "path": "4"
        },
        "2244": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3708,
                3772
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x4"
        },
        "2246": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3708,
                3772
            ],
            "op": "ADD",
            "path": "4"
        },
        "2247": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3708,
                3772
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x7BA"
        },
        "2250": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3708,
                3772
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "2251": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3708,
                3772
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1991"
        },
        "2254": {
            "fn": "MyLottery.enter_lottery",
            "jump": "i",
            "offset": [
                3708,
                3772
            ],
            "op": "JUMP",
            "path": "4"
        },
        "2255": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3708,
                3772
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "2256": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3816,
                3824
            ],
            "op": "PUSH1",
            "path": "4",
            "statement": 8,
            "value": "0x7"
        },
        "2258": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3816,
                3824
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "2259": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3803,
                3812
            ],
            "op": "CALLVALUE",
            "path": "4"
        },
        "2260": {
            "branch": 82,
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3803,
                3824
            ],
            "op": "EQ",
            "path": "4"
        },
        "2261": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3917,
                3943
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x8DF"
        },
        "2264": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3934,
                3942
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x7"
        },
        "2266": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3934,
                3942
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "2267": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3917,
                3933
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x107E"
        },
        "2270": {
            "fn": "MyLottery.enter_lottery",
            "jump": "i",
            "offset": [
                3917,
                3943
            ],
            "op": "JUMP",
            "path": "4"
        },
        "2271": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3917,
                3943
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "2272": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3838,
                3981
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "2274": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3838,
                3981
            ],
            "op": "MLOAD",
            "path": "4"
        },
        "2275": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3838,
                3981
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x20"
        },
        "2277": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3838,
                3981
            ],
            "op": "ADD",
            "path": "4"
        },
        "2278": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3838,
                3981
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x8EF"
        },
        "2281": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3838,
                3981
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "2282": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3838,
                3981
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "2283": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3838,
                3981
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x19DE"
        },
        "2286": {
            "fn": "MyLottery.enter_lottery",
            "jump": "i",
            "offset": [
                3838,
                3981
            ],
            "op": "JUMP",
            "path": "4"
        },
        "2287": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3838,
                3981
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "2288": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3838,
                3981
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "2290": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3838,
                3981
            ],
            "op": "MLOAD",
            "path": "4"
        },
        "2291": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3838,
                3981
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x20"
        },
        "2293": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3838,
                3981
            ],
            "op": "DUP2",
            "path": "4"
        },
        "2294": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3838,
                3981
            ],
            "op": "DUP4",
            "path": "4"
        },
        "2295": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3838,
                3981
            ],
            "op": "SUB",
            "path": "4"
        },
        "2296": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3838,
                3981
            ],
            "op": "SUB",
            "path": "4"
        },
        "2297": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3838,
                3981
            ],
            "op": "DUP2",
            "path": "4"
        },
        "2298": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3838,
                3981
            ],
            "op": "MSTORE",
            "path": "4"
        },
        "2299": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3838,
                3981
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "2300": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3838,
                3981
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "2302": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3838,
                3981
            ],
            "op": "MSTORE",
            "path": "4"
        },
        "2303": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3782,
                3991
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "2304": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3782,
                3991
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x91C"
        },
        "2307": {
            "branch": 82,
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3782,
                3991
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "2308": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3782,
                3991
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "2310": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3782,
                3991
            ],
            "op": "MLOAD",
            "path": "4"
        },
        "2311": {
            "op": "PUSH3",
            "value": "0x461BCD"
        },
        "2315": {
            "op": "PUSH1",
            "value": "0xE5"
        },
        "2317": {
            "op": "SHL"
        },
        "2318": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3782,
                3991
            ],
            "op": "DUP2",
            "path": "4"
        },
        "2319": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3782,
                3991
            ],
            "op": "MSTORE",
            "path": "4"
        },
        "2320": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3782,
                3991
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x4"
        },
        "2322": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3782,
                3991
            ],
            "op": "ADD",
            "path": "4"
        },
        "2323": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3782,
                3991
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x7BA"
        },
        "2326": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3782,
                3991
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "2327": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3782,
                3991
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "2328": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3782,
                3991
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1A31"
        },
        "2331": {
            "fn": "MyLottery.enter_lottery",
            "jump": "i",
            "offset": [
                3782,
                3991
            ],
            "op": "JUMP",
            "path": "4"
        },
        "2332": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                3782,
                3991
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "2333": {
            "op": "POP"
        },
        "2334": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                4040,
                4059
            ],
            "op": "PUSH1",
            "path": "4",
            "statement": 9,
            "value": "0x6"
        },
        "2336": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                4040,
                4059
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "2337": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                4022,
                4029
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x2"
        },
        "2339": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                4022,
                4036
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "2340": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                4022,
                4059
            ],
            "op": "GT",
            "path": "4"
        },
        "2341": {
            "branch": 83,
            "fn": "MyLottery.enter_lottery",
            "offset": [
                4022,
                4059
            ],
            "op": "ISZERO",
            "path": "4"
        },
        "2342": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                4001,
                4120
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x97D"
        },
        "2345": {
            "branch": 83,
            "fn": "MyLottery.enter_lottery",
            "offset": [
                4001,
                4120
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "2346": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                4001,
                4120
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "2348": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                4001,
                4120
            ],
            "op": "MLOAD",
            "path": "4"
        },
        "2349": {
            "op": "PUSH3",
            "value": "0x461BCD"
        },
        "2353": {
            "op": "PUSH1",
            "value": "0xE5"
        },
        "2355": {
            "op": "SHL"
        },
        "2356": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                4001,
                4120
            ],
            "op": "DUP2",
            "path": "4"
        },
        "2357": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                4001,
                4120
            ],
            "op": "MSTORE",
            "path": "4"
        },
        "2358": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "2360": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                4001,
                4120
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x4"
        },
        "2362": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                4001,
                4120
            ],
            "op": "DUP3",
            "path": "4"
        },
        "2363": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                4001,
                4120
            ],
            "op": "ADD",
            "path": "4"
        },
        "2364": {
            "op": "MSTORE"
        },
        "2365": {
            "op": "PUSH1",
            "value": "0x23"
        },
        "2367": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "2369": {
            "op": "DUP3"
        },
        "2370": {
            "op": "ADD"
        },
        "2371": {
            "op": "MSTORE"
        },
        "2372": {
            "op": "PUSH32",
            "value": "0x4D6178696D756D204E756D626572207265616368656420666F7220206C6F7474"
        },
        "2405": {
            "op": "PUSH1",
            "value": "0x44"
        },
        "2407": {
            "op": "DUP3"
        },
        "2408": {
            "op": "ADD"
        },
        "2409": {
            "op": "MSTORE"
        },
        "2410": {
            "op": "PUSH3",
            "value": "0x657279"
        },
        "2414": {
            "op": "PUSH1",
            "value": "0xE8"
        },
        "2416": {
            "op": "SHL"
        },
        "2417": {
            "op": "PUSH1",
            "value": "0x64"
        },
        "2419": {
            "op": "DUP3"
        },
        "2420": {
            "op": "ADD"
        },
        "2421": {
            "op": "MSTORE"
        },
        "2422": {
            "op": "PUSH1",
            "value": "0x84"
        },
        "2424": {
            "op": "ADD"
        },
        "2425": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                4001,
                4120
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x7BA"
        },
        "2428": {
            "op": "JUMP"
        },
        "2429": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                4001,
                4120
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "2430": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                4139,
                4149
            ],
            "op": "CALLER",
            "path": "4",
            "statement": 10
        },
        "2431": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                4138,
                4162
            ],
            "op": "EXTCODESIZE",
            "path": "4"
        },
        "2432": {
            "branch": 84,
            "fn": "MyLottery.enter_lottery",
            "offset": [
                4138,
                4167
            ],
            "op": "ISZERO",
            "path": "4"
        },
        "2433": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                4130,
                4193
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x9C4"
        },
        "2436": {
            "branch": 84,
            "fn": "MyLottery.enter_lottery",
            "offset": [
                4130,
                4193
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "2437": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                4130,
                4193
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "2439": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                4130,
                4193
            ],
            "op": "MLOAD",
            "path": "4"
        },
        "2440": {
            "op": "PUSH3",
            "value": "0x461BCD"
        },
        "2444": {
            "op": "PUSH1",
            "value": "0xE5"
        },
        "2446": {
            "op": "SHL"
        },
        "2447": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                4130,
                4193
            ],
            "op": "DUP2",
            "path": "4"
        },
        "2448": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                4130,
                4193
            ],
            "op": "MSTORE",
            "path": "4"
        },
        "2449": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "2451": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                4130,
                4193
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x4"
        },
        "2453": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                4130,
                4193
            ],
            "op": "DUP3",
            "path": "4"
        },
        "2454": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                4130,
                4193
            ],
            "op": "ADD",
            "path": "4"
        },
        "2455": {
            "op": "MSTORE"
        },
        "2456": {
            "op": "PUSH1",
            "value": "0x15"
        },
        "2458": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "2460": {
            "op": "DUP3"
        },
        "2461": {
            "op": "ADD"
        },
        "2462": {
            "op": "MSTORE"
        },
        "2463": {
            "op": "PUSH21",
            "value": "0x21B7B73A3930B1BA1031B0B73737BA1032B73A32B9"
        },
        "2485": {
            "op": "PUSH1",
            "value": "0x59"
        },
        "2487": {
            "op": "SHL"
        },
        "2488": {
            "op": "PUSH1",
            "value": "0x44"
        },
        "2490": {
            "op": "DUP3"
        },
        "2491": {
            "op": "ADD"
        },
        "2492": {
            "op": "MSTORE"
        },
        "2493": {
            "op": "PUSH1",
            "value": "0x64"
        },
        "2495": {
            "op": "ADD"
        },
        "2496": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                4130,
                4193
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x7BA"
        },
        "2499": {
            "op": "JUMP"
        },
        "2500": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                4130,
                4193
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "2501": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                4203,
                4210
            ],
            "op": "PUSH1",
            "path": "4",
            "statement": 11,
            "value": "0x2"
        },
        "2503": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                4203,
                4236
            ],
            "op": "DUP1",
            "path": "4"
        },
        "2504": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                4203,
                4236
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "2505": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                4203,
                4236
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x1"
        },
        "2507": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                4203,
                4236
            ],
            "op": "DUP2",
            "path": "4"
        },
        "2508": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                4203,
                4236
            ],
            "op": "DUP2",
            "path": "4"
        },
        "2509": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                4203,
                4236
            ],
            "op": "ADD",
            "path": "4"
        },
        "2510": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                4203,
                4236
            ],
            "op": "DUP4",
            "path": "4"
        },
        "2511": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                4203,
                4236
            ],
            "op": "SSTORE",
            "path": "4"
        },
        "2512": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "2514": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                4203,
                4236
            ],
            "op": "SWAP3",
            "path": "4"
        },
        "2515": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                4203,
                4236
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "2516": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                4203,
                4236
            ],
            "op": "SWAP3",
            "path": "4"
        },
        "2517": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                4203,
                4236
            ],
            "op": "MSTORE",
            "path": "4"
        },
        "2518": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                4203,
                4236
            ],
            "op": "PUSH32",
            "path": "4",
            "value": "0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE"
        },
        "2551": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                4203,
                4236
            ],
            "op": "ADD",
            "path": "4"
        },
        "2552": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                4203,
                4236
            ],
            "op": "DUP1",
            "path": "4"
        },
        "2553": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                4203,
                4236
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "2554": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "2556": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "2558": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "2560": {
            "op": "SHL"
        },
        "2561": {
            "op": "SUB"
        },
        "2562": {
            "op": "NOT"
        },
        "2563": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                4203,
                4236
            ],
            "op": "AND",
            "path": "4"
        },
        "2564": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                4224,
                4234
            ],
            "op": "CALLER",
            "path": "4"
        },
        "2565": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                4203,
                4236
            ],
            "op": "OR",
            "path": "4"
        },
        "2566": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                4203,
                4236
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "2567": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                4203,
                4236
            ],
            "op": "SSTORE",
            "path": "4"
        },
        "2568": {
            "offset": [
                2628,
                2650
            ],
            "op": "DUP1",
            "path": "1"
        },
        "2569": {
            "fn": "MyLottery.enter_lottery",
            "offset": [
                2628,
                2650
            ],
            "op": "SSTORE",
            "path": "1"
        },
        "2570": {
            "fn": "MyLottery.enter_lottery",
            "jump": "o",
            "offset": [
                3454,
                4243
            ],
            "op": "JUMP",
            "path": "4"
        },
        "2571": {
            "fn": "MyLottery.retrySendPrizes",
            "offset": [
                9120,
                9195
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "2572": {
            "offset": [
                1094,
                1107
            ],
            "op": "PUSH2",
            "path": "0",
            "value": "0xA13"
        },
        "2575": {
            "offset": [
                1094,
                1105
            ],
            "op": "PUSH2",
            "path": "0",
            "value": "0x1024"
        },
        "2578": {
            "jump": "i",
            "offset": [
                1094,
                1107
            ],
            "op": "JUMP",
            "path": "0"
        },
        "2579": {
            "fn": "MyLottery.retrySendPrizes",
            "offset": [
                1094,
                1107
            ],
            "op": "JUMPDEST",
            "path": "0"
        },
        "2580": {
            "fn": "MyLottery.retrySendPrizes",
            "offset": [
                9176,
                9188
            ],
            "op": "PUSH2",
            "path": "4",
            "statement": 12,
            "value": "0xA1B"
        },
        "2583": {
            "fn": "MyLottery.retrySendPrizes",
            "offset": [
                9176,
                9186
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1187"
        },
        "2586": {
            "fn": "MyLottery.retrySendPrizes",
            "jump": "i",
            "offset": [
                9176,
                9188
            ],
            "op": "JUMP",
            "path": "4"
        },
        "2587": {
            "fn": "MyLottery.retrySendPrizes",
            "offset": [
                9176,
                9188
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "2588": {
            "fn": "MyLottery.retrySendPrizes",
            "offset": [
                9176,
                9188
            ],
            "op": "POP",
            "path": "4"
        },
        "2589": {
            "fn": "MyLottery.retrySendPrizes",
            "jump": "o",
            "offset": [
                9120,
                9195
            ],
            "op": "JUMP",
            "path": "4"
        },
        "2590": {
            "fn": "MyLottery.transferOwner",
            "offset": [
                11329,
                11433
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "2591": {
            "offset": [
                1094,
                1107
            ],
            "op": "PUSH2",
            "path": "0",
            "value": "0xA26"
        },
        "2594": {
            "offset": [
                1094,
                1105
            ],
            "op": "PUSH2",
            "path": "0",
            "value": "0x1024"
        },
        "2597": {
            "jump": "i",
            "offset": [
                1094,
                1107
            ],
            "op": "JUMP",
            "path": "0"
        },
        "2598": {
            "fn": "MyLottery.transferOwner",
            "offset": [
                1094,
                1107
            ],
            "op": "JUMPDEST",
            "path": "0"
        },
        "2599": {
            "fn": "MyLottery.transferOwner",
            "offset": [
                11399,
                11426
            ],
            "op": "PUSH2",
            "path": "4",
            "statement": 13,
            "value": "0xA1B"
        },
        "2602": {
            "fn": "MyLottery.transferOwner",
            "offset": [
                11417,
                11425
            ],
            "op": "DUP2",
            "path": "4"
        },
        "2603": {
            "fn": "MyLottery.transferOwner",
            "offset": [
                11399,
                11416
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0xEC8"
        },
        "2606": {
            "fn": "MyLottery.transferOwner",
            "jump": "i",
            "offset": [
                11399,
                11426
            ],
            "op": "JUMP",
            "path": "4"
        },
        "2607": {
            "fn": "MyLottery.setMaximumParticipants",
            "offset": [
                7659,
                7819
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "2608": {
            "offset": [
                1094,
                1107
            ],
            "op": "PUSH2",
            "path": "0",
            "value": "0xA37"
        },
        "2611": {
            "offset": [
                1094,
                1105
            ],
            "op": "PUSH2",
            "path": "0",
            "value": "0x1024"
        },
        "2614": {
            "jump": "i",
            "offset": [
                1094,
                1107
            ],
            "op": "JUMP",
            "path": "0"
        },
        "2615": {
            "fn": "MyLottery.setMaximumParticipants",
            "offset": [
                1094,
                1107
            ],
            "op": "JUMPDEST",
            "path": "0"
        },
        "2616": {
            "fn": "MyLottery.setMaximumParticipants",
            "offset": [
                7770,
                7789
            ],
            "op": "PUSH1",
            "path": "4",
            "statement": 14,
            "value": "0x6"
        },
        "2618": {
            "fn": "MyLottery.setMaximumParticipants",
            "offset": [
                7770,
                7812
            ],
            "op": "SSTORE",
            "path": "4"
        },
        "2619": {
            "fn": "MyLottery.setMaximumParticipants",
            "jump": "o",
            "offset": [
                7659,
                7819
            ],
            "op": "JUMP",
            "path": "4"
        },
        "2620": {
            "fn": "MyLottery.setEmergencyOpen",
            "offset": [
                7228,
                7325
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "2621": {
            "offset": [
                1094,
                1107
            ],
            "op": "PUSH2",
            "path": "0",
            "value": "0xA44"
        },
        "2624": {
            "offset": [
                1094,
                1105
            ],
            "op": "PUSH2",
            "path": "0",
            "value": "0x1024"
        },
        "2627": {
            "jump": "i",
            "offset": [
                1094,
                1107
            ],
            "op": "JUMP",
            "path": "0"
        },
        "2628": {
            "fn": "MyLottery.setEmergencyOpen",
            "offset": [
                1094,
                1107
            ],
            "op": "JUMPDEST",
            "path": "0"
        },
        "2629": {
            "fn": "MyLottery.setEmergencyOpen",
            "offset": [
                7285,
                7294
            ],
            "op": "PUSH1",
            "path": "4",
            "statement": 15,
            "value": "0x12"
        },
        "2631": {
            "fn": "MyLottery.setEmergencyOpen",
            "offset": [
                7285,
                7318
            ],
            "op": "DUP1",
            "path": "4"
        },
        "2632": {
            "fn": "MyLottery.setEmergencyOpen",
            "offset": [
                7285,
                7318
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "2633": {
            "fn": "MyLottery.setEmergencyOpen",
            "offset": [
                7297,
                7318
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x1"
        },
        "2635": {
            "fn": "MyLottery.setEmergencyOpen",
            "offset": [
                7297,
                7318
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "2636": {
            "fn": "MyLottery.setEmergencyOpen",
            "offset": [
                7285,
                7294
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "2637": {
            "op": "PUSH3",
            "value": "0xFF0000"
        },
        "2641": {
            "op": "NOT"
        },
        "2642": {
            "fn": "MyLottery.setEmergencyOpen",
            "offset": [
                7285,
                7318
            ],
            "op": "AND",
            "path": "4"
        },
        "2643": {
            "fn": "MyLottery.setEmergencyOpen",
            "offset": [
                7285,
                7318
            ],
            "op": "PUSH3",
            "path": "4",
            "value": "0x10000"
        },
        "2647": {
            "fn": "MyLottery.setEmergencyOpen",
            "offset": [
                7297,
                7318
            ],
            "op": "DUP4",
            "path": "4"
        },
        "2648": {
            "fn": "MyLottery.setEmergencyOpen",
            "offset": [
                7285,
                7318
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x784"
        },
        "2651": {
            "fn": "MyLottery.setEmergencyOpen",
            "offset": [
                7285,
                7318
            ],
            "op": "JUMP",
            "path": "4"
        },
        "2652": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                1831,
                1932
            ],
            "op": "JUMPDEST",
            "path": "0"
        },
        "2653": {
            "offset": [
                1094,
                1107
            ],
            "op": "PUSH2",
            "path": "0",
            "value": "0xA64"
        },
        "2656": {
            "offset": [
                1094,
                1105
            ],
            "op": "PUSH2",
            "path": "0",
            "value": "0x1024"
        },
        "2659": {
            "jump": "i",
            "offset": [
                1094,
                1107
            ],
            "op": "JUMP",
            "path": "0"
        },
        "2660": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                1094,
                1107
            ],
            "op": "JUMPDEST",
            "path": "0"
        },
        "2661": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                1895,
                1925
            ],
            "op": "PUSH2",
            "path": "0",
            "statement": 16,
            "value": "0xA6E"
        },
        "2664": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                1922,
                1923
            ],
            "op": "PUSH1",
            "path": "0",
            "value": "0x0"
        },
        "2666": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                1895,
                1913
            ],
            "op": "PUSH2",
            "path": "0",
            "value": "0x13C9"
        },
        "2669": {
            "fn": "Ownable.renounceOwnership",
            "jump": "i",
            "offset": [
                1895,
                1925
            ],
            "op": "JUMP",
            "path": "0"
        },
        "2670": {
            "fn": "Ownable.renounceOwnership",
            "offset": [
                1895,
                1925
            ],
            "op": "JUMPDEST",
            "path": "0"
        },
        "2671": {
            "fn": "Ownable.renounceOwnership",
            "jump": "o",
            "offset": [
                1831,
                1932
            ],
            "op": "JUMP",
            "path": "0"
        },
        "2672": {
            "fn": "MyLottery.setMinumumParticipants",
            "offset": [
                6946,
                7106
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "2673": {
            "offset": [
                1094,
                1107
            ],
            "op": "PUSH2",
            "path": "0",
            "value": "0xA78"
        },
        "2676": {
            "offset": [
                1094,
                1105
            ],
            "op": "PUSH2",
            "path": "0",
            "value": "0x1024"
        },
        "2679": {
            "jump": "i",
            "offset": [
                1094,
                1107
            ],
            "op": "JUMP",
            "path": "0"
        },
        "2680": {
            "fn": "MyLottery.setMinumumParticipants",
            "offset": [
                1094,
                1107
            ],
            "op": "JUMPDEST",
            "path": "0"
        },
        "2681": {
            "fn": "MyLottery.setMinumumParticipants",
            "offset": [
                7057,
                7076
            ],
            "op": "PUSH1",
            "path": "4",
            "statement": 17,
            "value": "0x5"
        },
        "2683": {
            "fn": "MyLottery.setMinumumParticipants",
            "offset": [
                7057,
                7099
            ],
            "op": "SSTORE",
            "path": "4"
        },
        "2684": {
            "fn": "MyLottery.setMinumumParticipants",
            "jump": "o",
            "offset": [
                6946,
                7106
            ],
            "op": "JUMP",
            "path": "4"
        },
        "2685": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8075,
                8307
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "2686": {
            "offset": [
                1094,
                1107
            ],
            "op": "PUSH2",
            "path": "0",
            "value": "0xA85"
        },
        "2689": {
            "offset": [
                1094,
                1105
            ],
            "op": "PUSH2",
            "path": "0",
            "value": "0x1024"
        },
        "2692": {
            "jump": "i",
            "offset": [
                1094,
                1107
            ],
            "op": "JUMP",
            "path": "0"
        },
        "2693": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                1094,
                1107
            ],
            "op": "JUMPDEST",
            "path": "0"
        },
        "2694": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8164,
                8184
            ],
            "op": "PUSH1",
            "path": "4",
            "statement": 18,
            "value": "0x1"
        },
        "2696": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8147,
                8160
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x12"
        },
        "2698": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8147,
                8160
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "2699": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8147,
                8160
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x100"
        },
        "2702": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8147,
                8160
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "2703": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8147,
                8160
            ],
            "op": "DIV",
            "path": "4"
        },
        "2704": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8147,
                8160
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0xFF"
        },
        "2706": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8147,
                8160
            ],
            "op": "AND",
            "path": "4"
        },
        "2707": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8147,
                8184
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x2"
        },
        "2709": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8147,
                8184
            ],
            "op": "DUP2",
            "path": "4"
        },
        "2710": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8147,
                8184
            ],
            "op": "GT",
            "path": "4"
        },
        "2711": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8147,
                8184
            ],
            "op": "ISZERO",
            "path": "4"
        },
        "2712": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8147,
                8184
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0xAA3"
        },
        "2715": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8147,
                8184
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "2716": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8147,
                8184
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0xAA3"
        },
        "2719": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8147,
                8184
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x18AF"
        },
        "2722": {
            "fn": "MyLottery.recoverEth",
            "jump": "i",
            "offset": [
                8147,
                8184
            ],
            "op": "JUMP",
            "path": "4"
        },
        "2723": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8147,
                8184
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "2724": {
            "branch": 85,
            "fn": "MyLottery.recoverEth",
            "offset": [
                8147,
                8184
            ],
            "op": "EQ",
            "path": "4"
        },
        "2725": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8126,
                8239
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0xAC0"
        },
        "2728": {
            "branch": 85,
            "fn": "MyLottery.recoverEth",
            "offset": [
                8126,
                8239
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "2729": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8126,
                8239
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "2731": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8126,
                8239
            ],
            "op": "MLOAD",
            "path": "4"
        },
        "2732": {
            "op": "PUSH3",
            "value": "0x461BCD"
        },
        "2736": {
            "op": "PUSH1",
            "value": "0xE5"
        },
        "2738": {
            "op": "SHL"
        },
        "2739": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8126,
                8239
            ],
            "op": "DUP2",
            "path": "4"
        },
        "2740": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8126,
                8239
            ],
            "op": "MSTORE",
            "path": "4"
        },
        "2741": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8126,
                8239
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x4"
        },
        "2743": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8126,
                8239
            ],
            "op": "ADD",
            "path": "4"
        },
        "2744": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8126,
                8239
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x7BA"
        },
        "2747": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8126,
                8239
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "2748": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8126,
                8239
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1A64"
        },
        "2751": {
            "fn": "MyLottery.recoverEth",
            "jump": "i",
            "offset": [
                8126,
                8239
            ],
            "op": "JUMP",
            "path": "4"
        },
        "2752": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8126,
                8239
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "2753": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8249,
                8300
            ],
            "op": "PUSH1",
            "path": "4",
            "statement": 19,
            "value": "0x40"
        },
        "2755": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8249,
                8300
            ],
            "op": "MLOAD",
            "path": "4"
        },
        "2756": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8257,
                8267
            ],
            "op": "CALLER",
            "path": "4"
        },
        "2757": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8257,
                8267
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "2758": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8278,
                8299
            ],
            "op": "SELFBALANCE",
            "path": "4"
        },
        "2759": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8249,
                8300
            ],
            "op": "DUP1",
            "path": "4"
        },
        "2760": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8249,
                8300
            ],
            "op": "ISZERO",
            "path": "4"
        },
        "2761": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8249,
                8300
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x8FC"
        },
        "2764": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8249,
                8300
            ],
            "op": "MUL",
            "path": "4"
        },
        "2765": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8249,
                8300
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "2766": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8249,
                8300
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "2768": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8249,
                8300
            ],
            "op": "DUP2",
            "path": "4"
        },
        "2769": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8249,
                8300
            ],
            "op": "DUP2",
            "path": "4"
        },
        "2770": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8249,
                8300
            ],
            "op": "DUP2",
            "path": "4"
        },
        "2771": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8278,
                8299
            ],
            "op": "DUP6",
            "path": "4"
        },
        "2772": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8257,
                8267
            ],
            "op": "DUP9",
            "path": "4"
        },
        "2773": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8249,
                8300
            ],
            "op": "DUP9",
            "path": "4"
        },
        "2774": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8249,
                8300
            ],
            "op": "CALL",
            "path": "4"
        },
        "2775": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8249,
                8300
            ],
            "op": "SWAP4",
            "path": "4"
        },
        "2776": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8249,
                8300
            ],
            "op": "POP",
            "path": "4"
        },
        "2777": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8249,
                8300
            ],
            "op": "POP",
            "path": "4"
        },
        "2778": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8249,
                8300
            ],
            "op": "POP",
            "path": "4"
        },
        "2779": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8249,
                8300
            ],
            "op": "POP",
            "path": "4"
        },
        "2780": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8249,
                8300
            ],
            "op": "ISZERO",
            "path": "4"
        },
        "2781": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8249,
                8300
            ],
            "op": "DUP1",
            "path": "4"
        },
        "2782": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8249,
                8300
            ],
            "op": "ISZERO",
            "path": "4"
        },
        "2783": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8249,
                8300
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0xA1B"
        },
        "2786": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8249,
                8300
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "2787": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8249,
                8300
            ],
            "op": "RETURNDATASIZE",
            "path": "4"
        },
        "2788": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8249,
                8300
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "2790": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8249,
                8300
            ],
            "op": "DUP1",
            "path": "4"
        },
        "2791": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8249,
                8300
            ],
            "op": "RETURNDATACOPY",
            "path": "4"
        },
        "2792": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8249,
                8300
            ],
            "op": "RETURNDATASIZE",
            "path": "4"
        },
        "2793": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8249,
                8300
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "2795": {
            "fn": "MyLottery.recoverEth",
            "offset": [
                8249,
                8300
            ],
            "op": "REVERT",
            "path": "4"
        },
        "2796": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4749,
                5479
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "2797": {
            "offset": [
                1744,
                1745
            ],
            "op": "PUSH1",
            "path": "1",
            "value": "0x2"
        },
        "2799": {
            "offset": [
                2325,
                2332
            ],
            "op": "PUSH1",
            "path": "1",
            "value": "0x1"
        },
        "2801": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                2325,
                2332
            ],
            "op": "SLOAD",
            "path": "1"
        },
        "2802": {
            "offset": [
                2325,
                2344
            ],
            "op": "SUB",
            "path": "1"
        },
        "2803": {
            "offset": [
                2317,
                2380
            ],
            "op": "PUSH2",
            "path": "1",
            "value": "0xB0E"
        },
        "2806": {
            "offset": [
                2317,
                2380
            ],
            "op": "JUMPI",
            "path": "1"
        },
        "2807": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                2317,
                2380
            ],
            "op": "PUSH1",
            "path": "1",
            "value": "0x40"
        },
        "2809": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                2317,
                2380
            ],
            "op": "MLOAD",
            "path": "1"
        },
        "2810": {
            "op": "PUSH3",
            "value": "0x461BCD"
        },
        "2814": {
            "op": "PUSH1",
            "value": "0xE5"
        },
        "2816": {
            "op": "SHL"
        },
        "2817": {
            "offset": [
                2317,
                2380
            ],
            "op": "DUP2",
            "path": "1"
        },
        "2818": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                2317,
                2380
            ],
            "op": "MSTORE",
            "path": "1"
        },
        "2819": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                2317,
                2380
            ],
            "op": "PUSH1",
            "path": "1",
            "value": "0x4"
        },
        "2821": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                2317,
                2380
            ],
            "op": "ADD",
            "path": "1"
        },
        "2822": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                2317,
                2380
            ],
            "op": "PUSH2",
            "path": "1",
            "value": "0x7BA"
        },
        "2825": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                2317,
                2380
            ],
            "op": "SWAP1",
            "path": "1"
        },
        "2826": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                2317,
                2380
            ],
            "op": "PUSH2",
            "path": "1",
            "value": "0x195A"
        },
        "2829": {
            "fn": "MyLottery.end_lottery",
            "jump": "i",
            "offset": [
                2317,
                2380
            ],
            "op": "JUMP",
            "path": "1"
        },
        "2830": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                2317,
                2380
            ],
            "op": "JUMPDEST",
            "path": "1"
        },
        "2831": {
            "offset": [
                1744,
                1745
            ],
            "op": "PUSH1",
            "path": "1",
            "value": "0x2"
        },
        "2833": {
            "offset": [
                2455,
                2462
            ],
            "op": "PUSH1",
            "path": "1",
            "value": "0x1"
        },
        "2835": {
            "offset": [
                2455,
                2473
            ],
            "op": "SSTORE",
            "path": "1"
        },
        "2836": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4827,
                4845
            ],
            "op": "PUSH1",
            "path": "4",
            "statement": 20,
            "value": "0x0"
        },
        "2838": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4810,
                4823
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x12"
        },
        "2840": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4810,
                4823
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "2841": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4810,
                4823
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x100"
        },
        "2844": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4810,
                4823
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "2845": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4810,
                4823
            ],
            "op": "DIV",
            "path": "4"
        },
        "2846": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4810,
                4823
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0xFF"
        },
        "2848": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4810,
                4823
            ],
            "op": "AND",
            "path": "4"
        },
        "2849": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4810,
                4845
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x2"
        },
        "2851": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4810,
                4845
            ],
            "op": "DUP2",
            "path": "4"
        },
        "2852": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4810,
                4845
            ],
            "op": "GT",
            "path": "4"
        },
        "2853": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4810,
                4845
            ],
            "op": "ISZERO",
            "path": "4"
        },
        "2854": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4810,
                4845
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0xB31"
        },
        "2857": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4810,
                4845
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "2858": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4810,
                4845
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0xB31"
        },
        "2861": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4810,
                4845
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x18AF"
        },
        "2864": {
            "fn": "MyLottery.end_lottery",
            "jump": "i",
            "offset": [
                4810,
                4845
            ],
            "op": "JUMP",
            "path": "4"
        },
        "2865": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4810,
                4845
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "2866": {
            "branch": 86,
            "fn": "MyLottery.end_lottery",
            "offset": [
                4810,
                4845
            ],
            "op": "EQ",
            "path": "4"
        },
        "2867": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4802,
                4869
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0xB74"
        },
        "2870": {
            "branch": 86,
            "fn": "MyLottery.end_lottery",
            "offset": [
                4802,
                4869
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "2871": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4802,
                4869
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "2873": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4802,
                4869
            ],
            "op": "MLOAD",
            "path": "4"
        },
        "2874": {
            "op": "PUSH3",
            "value": "0x461BCD"
        },
        "2878": {
            "op": "PUSH1",
            "value": "0xE5"
        },
        "2880": {
            "op": "SHL"
        },
        "2881": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4802,
                4869
            ],
            "op": "DUP2",
            "path": "4"
        },
        "2882": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4802,
                4869
            ],
            "op": "MSTORE",
            "path": "4"
        },
        "2883": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "2885": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4802,
                4869
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x4"
        },
        "2887": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4802,
                4869
            ],
            "op": "DUP3",
            "path": "4"
        },
        "2888": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4802,
                4869
            ],
            "op": "ADD",
            "path": "4"
        },
        "2889": {
            "op": "MSTORE"
        },
        "2890": {
            "op": "PUSH1",
            "value": "0x13"
        },
        "2892": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "2894": {
            "op": "DUP3"
        },
        "2895": {
            "op": "ADD"
        },
        "2896": {
            "op": "MSTORE"
        },
        "2897": {
            "op": "PUSH19",
            "value": "0x131BDD1D195C9E48139BDD081CDD185C9D1959"
        },
        "2917": {
            "op": "PUSH1",
            "value": "0x6A"
        },
        "2919": {
            "op": "SHL"
        },
        "2920": {
            "op": "PUSH1",
            "value": "0x44"
        },
        "2922": {
            "op": "DUP3"
        },
        "2923": {
            "op": "ADD"
        },
        "2924": {
            "op": "MSTORE"
        },
        "2925": {
            "op": "PUSH1",
            "value": "0x64"
        },
        "2927": {
            "op": "ADD"
        },
        "2928": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4802,
                4869
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x7BA"
        },
        "2931": {
            "op": "JUMP"
        },
        "2932": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4802,
                4869
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "2933": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4900,
                4921
            ],
            "op": "PUSH1",
            "path": "4",
            "statement": 21,
            "value": "0x1"
        },
        "2935": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4887,
                4896
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x12"
        },
        "2937": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4887,
                4896
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "2938": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4887,
                4896
            ],
            "op": "PUSH3",
            "path": "4",
            "value": "0x10000"
        },
        "2942": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4887,
                4896
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "2943": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4887,
                4896
            ],
            "op": "DIV",
            "path": "4"
        },
        "2944": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4887,
                4896
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0xFF"
        },
        "2946": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4887,
                4896
            ],
            "op": "AND",
            "path": "4"
        },
        "2947": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4887,
                4921
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x1"
        },
        "2949": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4887,
                4921
            ],
            "op": "DUP2",
            "path": "4"
        },
        "2950": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4887,
                4921
            ],
            "op": "GT",
            "path": "4"
        },
        "2951": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4887,
                4921
            ],
            "op": "ISZERO",
            "path": "4"
        },
        "2952": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4887,
                4921
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0xB93"
        },
        "2955": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4887,
                4921
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "2956": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4887,
                4921
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0xB93"
        },
        "2959": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4887,
                4921
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x18AF"
        },
        "2962": {
            "fn": "MyLottery.end_lottery",
            "jump": "i",
            "offset": [
                4887,
                4921
            ],
            "op": "JUMP",
            "path": "4"
        },
        "2963": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4887,
                4921
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "2964": {
            "branch": 87,
            "fn": "MyLottery.end_lottery",
            "offset": [
                4887,
                4921
            ],
            "op": "EQ",
            "path": "4"
        },
        "2965": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4879,
                4941
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0xBB0"
        },
        "2968": {
            "branch": 87,
            "fn": "MyLottery.end_lottery",
            "offset": [
                4879,
                4941
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "2969": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4879,
                4941
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "2971": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4879,
                4941
            ],
            "op": "MLOAD",
            "path": "4"
        },
        "2972": {
            "op": "PUSH3",
            "value": "0x461BCD"
        },
        "2976": {
            "op": "PUSH1",
            "value": "0xE5"
        },
        "2978": {
            "op": "SHL"
        },
        "2979": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4879,
                4941
            ],
            "op": "DUP2",
            "path": "4"
        },
        "2980": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4879,
                4941
            ],
            "op": "MSTORE",
            "path": "4"
        },
        "2981": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4879,
                4941
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x4"
        },
        "2983": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4879,
                4941
            ],
            "op": "ADD",
            "path": "4"
        },
        "2984": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4879,
                4941
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x7BA"
        },
        "2987": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4879,
                4941
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "2988": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4879,
                4941
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1991"
        },
        "2991": {
            "fn": "MyLottery.end_lottery",
            "jump": "i",
            "offset": [
                4879,
                4941
            ],
            "op": "JUMP",
            "path": "4"
        },
        "2992": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4879,
                4941
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "2993": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                5006,
                5021
            ],
            "op": "PUSH1",
            "path": "4",
            "statement": 22,
            "value": "0x10"
        },
        "2995": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                5006,
                5021
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "2996": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4991,
                5003
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0xE"
        },
        "2998": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4991,
                5003
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "2999": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4991,
                5021
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0xBC0"
        },
        "3002": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4991,
                5021
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "3003": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4991,
                5021
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "3004": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4991,
                5021
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1AB1"
        },
        "3007": {
            "fn": "MyLottery.end_lottery",
            "jump": "i",
            "offset": [
                4991,
                5021
            ],
            "op": "JUMP",
            "path": "4"
        },
        "3008": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4991,
                5021
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "3009": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4972,
                4987
            ],
            "op": "TIMESTAMP",
            "path": "4"
        },
        "3010": {
            "branch": 88,
            "fn": "MyLottery.end_lottery",
            "offset": [
                4972,
                5022
            ],
            "op": "GT",
            "path": "4"
        },
        "3011": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4951,
                5079
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0xC0E"
        },
        "3014": {
            "branch": 88,
            "fn": "MyLottery.end_lottery",
            "offset": [
                4951,
                5079
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "3015": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4951,
                5079
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "3017": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4951,
                5079
            ],
            "op": "MLOAD",
            "path": "4"
        },
        "3018": {
            "op": "PUSH3",
            "value": "0x461BCD"
        },
        "3022": {
            "op": "PUSH1",
            "value": "0xE5"
        },
        "3024": {
            "op": "SHL"
        },
        "3025": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4951,
                5079
            ],
            "op": "DUP2",
            "path": "4"
        },
        "3026": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4951,
                5079
            ],
            "op": "MSTORE",
            "path": "4"
        },
        "3027": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "3029": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4951,
                5079
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x4"
        },
        "3031": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4951,
                5079
            ],
            "op": "DUP3",
            "path": "4"
        },
        "3032": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4951,
                5079
            ],
            "op": "ADD",
            "path": "4"
        },
        "3033": {
            "op": "MSTORE"
        },
        "3034": {
            "op": "PUSH1",
            "value": "0x1F"
        },
        "3036": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "3038": {
            "op": "DUP3"
        },
        "3039": {
            "op": "ADD"
        },
        "3040": {
            "op": "MSTORE"
        },
        "3041": {
            "op": "PUSH32",
            "value": "0x6D696E206C6F7474657279206475726174696F6E206E6F742070617373656400"
        },
        "3074": {
            "op": "PUSH1",
            "value": "0x44"
        },
        "3076": {
            "op": "DUP3"
        },
        "3077": {
            "op": "ADD"
        },
        "3078": {
            "op": "MSTORE"
        },
        "3079": {
            "op": "PUSH1",
            "value": "0x64"
        },
        "3081": {
            "op": "ADD"
        },
        "3082": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4951,
                5079
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x7BA"
        },
        "3085": {
            "op": "JUMP"
        },
        "3086": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                4951,
                5079
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "3087": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                5098,
                5108
            ],
            "op": "CALLER",
            "path": "4",
            "statement": 23
        },
        "3088": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                5097,
                5121
            ],
            "op": "EXTCODESIZE",
            "path": "4"
        },
        "3089": {
            "branch": 89,
            "fn": "MyLottery.end_lottery",
            "offset": [
                5097,
                5126
            ],
            "op": "ISZERO",
            "path": "4"
        },
        "3090": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                5089,
                5152
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0xC55"
        },
        "3093": {
            "branch": 89,
            "fn": "MyLottery.end_lottery",
            "offset": [
                5089,
                5152
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "3094": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                5089,
                5152
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "3096": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                5089,
                5152
            ],
            "op": "MLOAD",
            "path": "4"
        },
        "3097": {
            "op": "PUSH3",
            "value": "0x461BCD"
        },
        "3101": {
            "op": "PUSH1",
            "value": "0xE5"
        },
        "3103": {
            "op": "SHL"
        },
        "3104": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                5089,
                5152
            ],
            "op": "DUP2",
            "path": "4"
        },
        "3105": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                5089,
                5152
            ],
            "op": "MSTORE",
            "path": "4"
        },
        "3106": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "3108": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                5089,
                5152
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x4"
        },
        "3110": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                5089,
                5152
            ],
            "op": "DUP3",
            "path": "4"
        },
        "3111": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                5089,
                5152
            ],
            "op": "ADD",
            "path": "4"
        },
        "3112": {
            "op": "MSTORE"
        },
        "3113": {
            "op": "PUSH1",
            "value": "0x15"
        },
        "3115": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "3117": {
            "op": "DUP3"
        },
        "3118": {
            "op": "ADD"
        },
        "3119": {
            "op": "MSTORE"
        },
        "3120": {
            "op": "PUSH21",
            "value": "0x21B7B73A3930B1BA1031B0B73737BA1032B73A32B9"
        },
        "3142": {
            "op": "PUSH1",
            "value": "0x59"
        },
        "3144": {
            "op": "SHL"
        },
        "3145": {
            "op": "PUSH1",
            "value": "0x44"
        },
        "3147": {
            "op": "DUP3"
        },
        "3148": {
            "op": "ADD"
        },
        "3149": {
            "op": "MSTORE"
        },
        "3150": {
            "op": "PUSH1",
            "value": "0x64"
        },
        "3152": {
            "op": "ADD"
        },
        "3153": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                5089,
                5152
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x7BA"
        },
        "3156": {
            "op": "JUMP"
        },
        "3157": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                5089,
                5152
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "3158": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                5238,
                5257
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x5"
        },
        "3160": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                5238,
                5257
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "3161": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                5221,
                5228
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x2"
        },
        "3163": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                5221,
                5235
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "3164": {
            "branch": 90,
            "fn": "MyLottery.end_lottery",
            "offset": [
                5221,
                5257
            ],
            "op": "LT",
            "path": "4"
        },
        "3165": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                5217,
                5419
            ],
            "op": "ISZERO",
            "path": "4"
        },
        "3166": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                5217,
                5419
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0xC6E"
        },
        "3169": {
            "branch": 90,
            "fn": "MyLottery.end_lottery",
            "offset": [
                5217,
                5419
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "3170": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                5273,
                5297
            ],
            "op": "PUSH2",
            "path": "4",
            "statement": 24,
            "value": "0xC69"
        },
        "3173": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                5273,
                5295
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1419"
        },
        "3176": {
            "fn": "MyLottery.end_lottery",
            "jump": "i",
            "offset": [
                5273,
                5297
            ],
            "op": "JUMP",
            "path": "4"
        },
        "3177": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                5273,
                5297
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "3178": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                5217,
                5419
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0xC85"
        },
        "3181": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                5217,
                5419
            ],
            "op": "JUMP",
            "path": "4"
        },
        "3182": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                5217,
                5419
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "3183": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                5328,
                5341
            ],
            "op": "PUSH1",
            "path": "4",
            "statement": 25,
            "value": "0x12"
        },
        "3185": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                5328,
                5376
            ],
            "op": "DUP1",
            "path": "4"
        },
        "3186": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                5328,
                5376
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "3187": {
            "op": "PUSH2",
            "value": "0xFF00"
        },
        "3190": {
            "op": "NOT"
        },
        "3191": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                5328,
                5376
            ],
            "op": "AND",
            "path": "4"
        },
        "3192": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                5328,
                5376
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x200"
        },
        "3195": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                5328,
                5376
            ],
            "op": "OR",
            "path": "4"
        },
        "3196": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                5328,
                5376
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "3197": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                5328,
                5376
            ],
            "op": "SSTORE",
            "path": "4"
        },
        "3198": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                5390,
                5408
            ],
            "op": "PUSH2",
            "path": "4",
            "statement": 26,
            "value": "0xC85"
        },
        "3201": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                5390,
                5406
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x157A"
        },
        "3204": {
            "fn": "MyLottery.end_lottery",
            "jump": "i",
            "offset": [
                5390,
                5408
            ],
            "op": "JUMP",
            "path": "4"
        },
        "3205": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                5390,
                5408
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "3206": {
            "offset": [
                1701,
                1702
            ],
            "op": "PUSH1",
            "path": "1",
            "value": "0x1"
        },
        "3208": {
            "offset": [
                2628,
                2650
            ],
            "op": "DUP1",
            "path": "1"
        },
        "3209": {
            "fn": "MyLottery.end_lottery",
            "offset": [
                2628,
                2650
            ],
            "op": "SSTORE",
            "path": "1"
        },
        "3210": {
            "fn": "MyLottery.end_lottery",
            "jump": "o",
            "offset": [
                4749,
                5479
            ],
            "op": "JUMP",
            "path": "4"
        },
        "3211": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4249,
                4743
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "3212": {
            "offset": [
                1744,
                1745
            ],
            "op": "PUSH1",
            "path": "1",
            "value": "0x2"
        },
        "3214": {
            "offset": [
                2325,
                2332
            ],
            "op": "PUSH1",
            "path": "1",
            "value": "0x1"
        },
        "3216": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                2325,
                2332
            ],
            "op": "SLOAD",
            "path": "1"
        },
        "3217": {
            "offset": [
                2325,
                2344
            ],
            "op": "SUB",
            "path": "1"
        },
        "3218": {
            "offset": [
                2317,
                2380
            ],
            "op": "PUSH2",
            "path": "1",
            "value": "0xCAD"
        },
        "3221": {
            "offset": [
                2317,
                2380
            ],
            "op": "JUMPI",
            "path": "1"
        },
        "3222": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                2317,
                2380
            ],
            "op": "PUSH1",
            "path": "1",
            "value": "0x40"
        },
        "3224": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                2317,
                2380
            ],
            "op": "MLOAD",
            "path": "1"
        },
        "3225": {
            "op": "PUSH3",
            "value": "0x461BCD"
        },
        "3229": {
            "op": "PUSH1",
            "value": "0xE5"
        },
        "3231": {
            "op": "SHL"
        },
        "3232": {
            "offset": [
                2317,
                2380
            ],
            "op": "DUP2",
            "path": "1"
        },
        "3233": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                2317,
                2380
            ],
            "op": "MSTORE",
            "path": "1"
        },
        "3234": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                2317,
                2380
            ],
            "op": "PUSH1",
            "path": "1",
            "value": "0x4"
        },
        "3236": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                2317,
                2380
            ],
            "op": "ADD",
            "path": "1"
        },
        "3237": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                2317,
                2380
            ],
            "op": "PUSH2",
            "path": "1",
            "value": "0x7BA"
        },
        "3240": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                2317,
                2380
            ],
            "op": "SWAP1",
            "path": "1"
        },
        "3241": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                2317,
                2380
            ],
            "op": "PUSH2",
            "path": "1",
            "value": "0x195A"
        },
        "3244": {
            "fn": "MyLottery.start_lottery",
            "jump": "i",
            "offset": [
                2317,
                2380
            ],
            "op": "JUMP",
            "path": "1"
        },
        "3245": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                2317,
                2380
            ],
            "op": "JUMPDEST",
            "path": "1"
        },
        "3246": {
            "offset": [
                1744,
                1745
            ],
            "op": "PUSH1",
            "path": "1",
            "value": "0x2"
        },
        "3248": {
            "offset": [
                2455,
                2462
            ],
            "op": "PUSH1",
            "path": "1",
            "value": "0x1"
        },
        "3250": {
            "offset": [
                2455,
                2473
            ],
            "op": "SWAP1",
            "path": "1"
        },
        "3251": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                2455,
                2473
            ],
            "op": "DUP2",
            "path": "1"
        },
        "3252": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                2455,
                2473
            ],
            "op": "SSTORE",
            "path": "1"
        },
        "3253": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4325,
                4338
            ],
            "op": "PUSH1",
            "path": "4",
            "statement": 27,
            "value": "0x12"
        },
        "3255": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4325,
                4338
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "3256": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4325,
                4338
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x100"
        },
        "3259": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4325,
                4338
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "3260": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4325,
                4338
            ],
            "op": "DIV",
            "path": "4"
        },
        "3261": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4325,
                4338
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0xFF"
        },
        "3263": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4325,
                4338
            ],
            "op": "AND",
            "path": "4"
        },
        "3264": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4325,
                4362
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x2"
        },
        "3266": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4325,
                4362
            ],
            "op": "DUP2",
            "path": "4"
        },
        "3267": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4325,
                4362
            ],
            "op": "GT",
            "path": "4"
        },
        "3268": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4325,
                4362
            ],
            "op": "ISZERO",
            "path": "4"
        },
        "3269": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4325,
                4362
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0xCD0"
        },
        "3272": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4325,
                4362
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "3273": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4325,
                4362
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0xCD0"
        },
        "3276": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4325,
                4362
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x18AF"
        },
        "3279": {
            "fn": "MyLottery.start_lottery",
            "jump": "i",
            "offset": [
                4325,
                4362
            ],
            "op": "JUMP",
            "path": "4"
        },
        "3280": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4325,
                4362
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "3281": {
            "branch": 91,
            "fn": "MyLottery.start_lottery",
            "offset": [
                4325,
                4362
            ],
            "op": "EQ",
            "path": "4"
        },
        "3282": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4304,
                4411
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0xD1D"
        },
        "3285": {
            "branch": 91,
            "fn": "MyLottery.start_lottery",
            "offset": [
                4304,
                4411
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "3286": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4304,
                4411
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "3288": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4304,
                4411
            ],
            "op": "MLOAD",
            "path": "4"
        },
        "3289": {
            "op": "PUSH3",
            "value": "0x461BCD"
        },
        "3293": {
            "op": "PUSH1",
            "value": "0xE5"
        },
        "3295": {
            "op": "SHL"
        },
        "3296": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4304,
                4411
            ],
            "op": "DUP2",
            "path": "4"
        },
        "3297": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4304,
                4411
            ],
            "op": "MSTORE",
            "path": "4"
        },
        "3298": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "3300": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4304,
                4411
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x4"
        },
        "3302": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4304,
                4411
            ],
            "op": "DUP3",
            "path": "4"
        },
        "3303": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4304,
                4411
            ],
            "op": "ADD",
            "path": "4"
        },
        "3304": {
            "op": "MSTORE"
        },
        "3305": {
            "op": "PUSH1",
            "value": "0x17"
        },
        "3307": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "3309": {
            "op": "DUP3"
        },
        "3310": {
            "op": "ADD"
        },
        "3311": {
            "op": "MSTORE"
        },
        "3312": {
            "op": "PUSH32",
            "value": "0x4C6F747465727920416C72656164792073746172746564000000000000000000"
        },
        "3345": {
            "op": "PUSH1",
            "value": "0x44"
        },
        "3347": {
            "op": "DUP3"
        },
        "3348": {
            "op": "ADD"
        },
        "3349": {
            "op": "MSTORE"
        },
        "3350": {
            "op": "PUSH1",
            "value": "0x64"
        },
        "3352": {
            "op": "ADD"
        },
        "3353": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4304,
                4411
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x7BA"
        },
        "3356": {
            "op": "JUMP"
        },
        "3357": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4304,
                4411
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "3358": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4442,
                4463
            ],
            "op": "PUSH1",
            "path": "4",
            "statement": 28,
            "value": "0x1"
        },
        "3360": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4429,
                4438
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x12"
        },
        "3362": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4429,
                4438
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "3363": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4429,
                4438
            ],
            "op": "PUSH3",
            "path": "4",
            "value": "0x10000"
        },
        "3367": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4429,
                4438
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "3368": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4429,
                4438
            ],
            "op": "DIV",
            "path": "4"
        },
        "3369": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4429,
                4438
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0xFF"
        },
        "3371": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4429,
                4438
            ],
            "op": "AND",
            "path": "4"
        },
        "3372": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4429,
                4463
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x1"
        },
        "3374": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4429,
                4463
            ],
            "op": "DUP2",
            "path": "4"
        },
        "3375": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4429,
                4463
            ],
            "op": "GT",
            "path": "4"
        },
        "3376": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4429,
                4463
            ],
            "op": "ISZERO",
            "path": "4"
        },
        "3377": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4429,
                4463
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0xD3C"
        },
        "3380": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4429,
                4463
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "3381": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4429,
                4463
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0xD3C"
        },
        "3384": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4429,
                4463
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x18AF"
        },
        "3387": {
            "fn": "MyLottery.start_lottery",
            "jump": "i",
            "offset": [
                4429,
                4463
            ],
            "op": "JUMP",
            "path": "4"
        },
        "3388": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4429,
                4463
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "3389": {
            "branch": 92,
            "fn": "MyLottery.start_lottery",
            "offset": [
                4429,
                4463
            ],
            "op": "EQ",
            "path": "4"
        },
        "3390": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4421,
                4483
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0xD59"
        },
        "3393": {
            "branch": 92,
            "fn": "MyLottery.start_lottery",
            "offset": [
                4421,
                4483
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "3394": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4421,
                4483
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "3396": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4421,
                4483
            ],
            "op": "MLOAD",
            "path": "4"
        },
        "3397": {
            "op": "PUSH3",
            "value": "0x461BCD"
        },
        "3401": {
            "op": "PUSH1",
            "value": "0xE5"
        },
        "3403": {
            "op": "SHL"
        },
        "3404": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4421,
                4483
            ],
            "op": "DUP2",
            "path": "4"
        },
        "3405": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4421,
                4483
            ],
            "op": "MSTORE",
            "path": "4"
        },
        "3406": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4421,
                4483
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x4"
        },
        "3408": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4421,
                4483
            ],
            "op": "ADD",
            "path": "4"
        },
        "3409": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4421,
                4483
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x7BA"
        },
        "3412": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4421,
                4483
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "3413": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4421,
                4483
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1991"
        },
        "3416": {
            "fn": "MyLottery.start_lottery",
            "jump": "i",
            "offset": [
                4421,
                4483
            ],
            "op": "JUMP",
            "path": "4"
        },
        "3417": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4421,
                4483
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "3418": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4546,
                4565
            ],
            "op": "PUSH1",
            "path": "4",
            "statement": 29,
            "value": "0x11"
        },
        "3420": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4546,
                4565
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "3421": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4533,
                4543
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0xF"
        },
        "3423": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4533,
                4543
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "3424": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4533,
                4565
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0xD69"
        },
        "3427": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4533,
                4565
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "3428": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4533,
                4565
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "3429": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4533,
                4565
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1AB1"
        },
        "3432": {
            "fn": "MyLottery.start_lottery",
            "jump": "i",
            "offset": [
                4533,
                4565
            ],
            "op": "JUMP",
            "path": "4"
        },
        "3433": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4533,
                4565
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "3434": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4514,
                4529
            ],
            "op": "TIMESTAMP",
            "path": "4"
        },
        "3435": {
            "branch": 93,
            "fn": "MyLottery.start_lottery",
            "offset": [
                4514,
                4566
            ],
            "op": "GT",
            "path": "4"
        },
        "3436": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4493,
                4628
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0xDC3"
        },
        "3439": {
            "branch": 93,
            "fn": "MyLottery.start_lottery",
            "offset": [
                4493,
                4628
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "3440": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4493,
                4628
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "3442": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4493,
                4628
            ],
            "op": "MLOAD",
            "path": "4"
        },
        "3443": {
            "op": "PUSH3",
            "value": "0x461BCD"
        },
        "3447": {
            "op": "PUSH1",
            "value": "0xE5"
        },
        "3449": {
            "op": "SHL"
        },
        "3450": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4493,
                4628
            ],
            "op": "DUP2",
            "path": "4"
        },
        "3451": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4493,
                4628
            ],
            "op": "MSTORE",
            "path": "4"
        },
        "3452": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "3454": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4493,
                4628
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x4"
        },
        "3456": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4493,
                4628
            ],
            "op": "DUP3",
            "path": "4"
        },
        "3457": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4493,
                4628
            ],
            "op": "ADD",
            "path": "4"
        },
        "3458": {
            "op": "MSTORE"
        },
        "3459": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "3461": {
            "op": "DUP1"
        },
        "3462": {
            "op": "DUP3"
        },
        "3463": {
            "op": "ADD"
        },
        "3464": {
            "op": "MSTORE"
        },
        "3465": {
            "op": "PUSH32",
            "value": "0x6D696E206C6F74746572792070726570206475726174696F6E206E6F74207061"
        },
        "3498": {
            "op": "PUSH1",
            "value": "0x44"
        },
        "3500": {
            "op": "DUP3"
        },
        "3501": {
            "op": "ADD"
        },
        "3502": {
            "op": "MSTORE"
        },
        "3503": {
            "op": "PUSH4",
            "value": "0x1CDCD959"
        },
        "3508": {
            "op": "PUSH1",
            "value": "0xE2"
        },
        "3510": {
            "op": "SHL"
        },
        "3511": {
            "op": "PUSH1",
            "value": "0x64"
        },
        "3513": {
            "op": "DUP3"
        },
        "3514": {
            "op": "ADD"
        },
        "3515": {
            "op": "MSTORE"
        },
        "3516": {
            "op": "PUSH1",
            "value": "0x84"
        },
        "3518": {
            "op": "ADD"
        },
        "3519": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4493,
                4628
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x7BA"
        },
        "3522": {
            "op": "JUMP"
        },
        "3523": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4493,
                4628
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "3524": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4638,
                4651
            ],
            "op": "PUSH1",
            "path": "4",
            "statement": 30,
            "value": "0x12"
        },
        "3526": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4638,
                4672
            ],
            "op": "DUP1",
            "path": "4"
        },
        "3527": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4638,
                4672
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "3528": {
            "op": "PUSH2",
            "value": "0xFF00"
        },
        "3531": {
            "op": "NOT"
        },
        "3532": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4638,
                4672
            ],
            "op": "AND",
            "path": "4"
        },
        "3533": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4638,
                4672
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "3534": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4638,
                4672
            ],
            "op": "SSTORE",
            "path": "4"
        },
        "3535": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4654,
                4672
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "3537": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4682,
                4692
            ],
            "op": "PUSH1",
            "path": "4",
            "statement": 31,
            "value": "0x4"
        },
        "3539": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4682,
                4696
            ],
            "op": "SSTORE",
            "path": "4"
        },
        "3540": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4721,
                4736
            ],
            "op": "TIMESTAMP",
            "path": "4",
            "statement": 32
        },
        "3541": {
            "op": "PUSH1",
            "value": "0xE"
        },
        "3543": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                4706,
                4736
            ],
            "op": "SSTORE",
            "path": "4"
        },
        "3544": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "3546": {
            "offset": [
                2628,
                2650
            ],
            "op": "DUP1",
            "path": "1"
        },
        "3547": {
            "fn": "MyLottery.start_lottery",
            "offset": [
                2628,
                2650
            ],
            "op": "SSTORE",
            "path": "1"
        },
        "3548": {
            "fn": "MyLottery.start_lottery",
            "jump": "o",
            "offset": [
                4249,
                4743
            ],
            "op": "JUMP",
            "path": "4"
        },
        "3549": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6359,
                6940
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "3550": {
            "offset": [
                1094,
                1107
            ],
            "op": "PUSH2",
            "path": "0",
            "value": "0xDE5"
        },
        "3553": {
            "offset": [
                1094,
                1105
            ],
            "op": "PUSH2",
            "path": "0",
            "value": "0x1024"
        },
        "3556": {
            "jump": "i",
            "offset": [
                1094,
                1107
            ],
            "op": "JUMP",
            "path": "0"
        },
        "3557": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                1094,
                1107
            ],
            "op": "JUMPDEST",
            "path": "0"
        },
        "3558": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6554,
                6574
            ],
            "op": "PUSH1",
            "path": "4",
            "statement": 33,
            "value": "0x1"
        },
        "3560": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6537,
                6550
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x12"
        },
        "3562": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6537,
                6550
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "3563": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6537,
                6550
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x100"
        },
        "3566": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6537,
                6550
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "3567": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6537,
                6550
            ],
            "op": "DIV",
            "path": "4"
        },
        "3568": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6537,
                6550
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0xFF"
        },
        "3570": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6537,
                6550
            ],
            "op": "AND",
            "path": "4"
        },
        "3571": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6537,
                6574
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x2"
        },
        "3573": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6537,
                6574
            ],
            "op": "DUP2",
            "path": "4"
        },
        "3574": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6537,
                6574
            ],
            "op": "GT",
            "path": "4"
        },
        "3575": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6537,
                6574
            ],
            "op": "ISZERO",
            "path": "4"
        },
        "3576": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6537,
                6574
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0xE03"
        },
        "3579": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6537,
                6574
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "3580": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6537,
                6574
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0xE03"
        },
        "3583": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6537,
                6574
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x18AF"
        },
        "3586": {
            "fn": "MyLottery.setPrizePercents",
            "jump": "i",
            "offset": [
                6537,
                6574
            ],
            "op": "JUMP",
            "path": "4"
        },
        "3587": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6537,
                6574
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "3588": {
            "branch": 94,
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6537,
                6574
            ],
            "op": "EQ",
            "path": "4"
        },
        "3589": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6516,
                6629
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0xE20"
        },
        "3592": {
            "branch": 94,
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6516,
                6629
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "3593": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6516,
                6629
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "3595": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6516,
                6629
            ],
            "op": "MLOAD",
            "path": "4"
        },
        "3596": {
            "op": "PUSH3",
            "value": "0x461BCD"
        },
        "3600": {
            "op": "PUSH1",
            "value": "0xE5"
        },
        "3602": {
            "op": "SHL"
        },
        "3603": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6516,
                6629
            ],
            "op": "DUP2",
            "path": "4"
        },
        "3604": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6516,
                6629
            ],
            "op": "MSTORE",
            "path": "4"
        },
        "3605": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6516,
                6629
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x4"
        },
        "3607": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6516,
                6629
            ],
            "op": "ADD",
            "path": "4"
        },
        "3608": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6516,
                6629
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x7BA"
        },
        "3611": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6516,
                6629
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "3612": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6516,
                6629
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1A64"
        },
        "3615": {
            "fn": "MyLottery.setPrizePercents",
            "jump": "i",
            "offset": [
                6516,
                6629
            ],
            "op": "JUMP",
            "path": "4"
        },
        "3616": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6516,
                6629
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "3617": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6712,
                6715
            ],
            "op": "PUSH1",
            "path": "4",
            "statement": 34,
            "value": "0x64"
        },
        "3619": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6692,
                6708
            ],
            "op": "DUP2",
            "path": "4"
        },
        "3620": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6660,
                6689
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0xE2D"
        },
        "3623": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6676,
                6689
            ],
            "op": "DUP5",
            "path": "4"
        },
        "3624": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6660,
                6673
            ],
            "op": "DUP7",
            "path": "4"
        },
        "3625": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6660,
                6689
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1AB1"
        },
        "3628": {
            "fn": "MyLottery.setPrizePercents",
            "jump": "i",
            "offset": [
                6660,
                6689
            ],
            "op": "JUMP",
            "path": "4"
        },
        "3629": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6660,
                6689
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "3630": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6660,
                6708
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0xE37"
        },
        "3633": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6660,
                6708
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "3634": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6660,
                6708
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "3635": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6660,
                6708
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1AB1"
        },
        "3638": {
            "fn": "MyLottery.setPrizePercents",
            "jump": "i",
            "offset": [
                6660,
                6708
            ],
            "op": "JUMP",
            "path": "4"
        },
        "3639": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6660,
                6708
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "3640": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6660,
                6715
            ],
            "op": "GT",
            "path": "4"
        },
        "3641": {
            "branch": 95,
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6660,
                6715
            ],
            "op": "ISZERO",
            "path": "4"
        },
        "3642": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6639,
                6757
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0xE78"
        },
        "3645": {
            "branch": 95,
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6639,
                6757
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "3646": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6639,
                6757
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "3648": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6639,
                6757
            ],
            "op": "MLOAD",
            "path": "4"
        },
        "3649": {
            "op": "PUSH3",
            "value": "0x461BCD"
        },
        "3653": {
            "op": "PUSH1",
            "value": "0xE5"
        },
        "3655": {
            "op": "SHL"
        },
        "3656": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6639,
                6757
            ],
            "op": "DUP2",
            "path": "4"
        },
        "3657": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6639,
                6757
            ],
            "op": "MSTORE",
            "path": "4"
        },
        "3658": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "3660": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6639,
                6757
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x4"
        },
        "3662": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6639,
                6757
            ],
            "op": "DUP3",
            "path": "4"
        },
        "3663": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6639,
                6757
            ],
            "op": "ADD",
            "path": "4"
        },
        "3664": {
            "op": "MSTORE"
        },
        "3665": {
            "op": "PUSH1",
            "value": "0x10"
        },
        "3667": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "3669": {
            "op": "DUP3"
        },
        "3670": {
            "op": "ADD"
        },
        "3671": {
            "op": "MSTORE"
        },
        "3672": {
            "op": "PUSH16",
            "value": "0x63616E206E6F74206F7665722031303"
        },
        "3689": {
            "op": "PUSH1",
            "value": "0x84"
        },
        "3691": {
            "op": "SHL"
        },
        "3692": {
            "op": "PUSH1",
            "value": "0x44"
        },
        "3694": {
            "op": "DUP3"
        },
        "3695": {
            "op": "ADD"
        },
        "3696": {
            "op": "MSTORE"
        },
        "3697": {
            "op": "PUSH1",
            "value": "0x64"
        },
        "3699": {
            "op": "ADD"
        },
        "3700": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6639,
                6757
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x7BA"
        },
        "3703": {
            "op": "JUMP"
        },
        "3704": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6639,
                6757
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "3705": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6791,
                6793
            ],
            "op": "PUSH1",
            "path": "4",
            "statement": 35,
            "value": "0x32"
        },
        "3707": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6775,
                6788
            ],
            "op": "DUP4",
            "path": "4"
        },
        "3708": {
            "branch": 96,
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6775,
                6793
            ],
            "op": "LT",
            "path": "4"
        },
        "3709": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6767,
                6813
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0xEBA"
        },
        "3712": {
            "branch": 96,
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6767,
                6813
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "3713": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6767,
                6813
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "3715": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6767,
                6813
            ],
            "op": "MLOAD",
            "path": "4"
        },
        "3716": {
            "op": "PUSH3",
            "value": "0x461BCD"
        },
        "3720": {
            "op": "PUSH1",
            "value": "0xE5"
        },
        "3722": {
            "op": "SHL"
        },
        "3723": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6767,
                6813
            ],
            "op": "DUP2",
            "path": "4"
        },
        "3724": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6767,
                6813
            ],
            "op": "MSTORE",
            "path": "4"
        },
        "3725": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "3727": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6767,
                6813
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x4"
        },
        "3729": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6767,
                6813
            ],
            "op": "DUP3",
            "path": "4"
        },
        "3730": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6767,
                6813
            ],
            "op": "ADD",
            "path": "4"
        },
        "3731": {
            "op": "MSTORE"
        },
        "3732": {
            "op": "PUSH1",
            "value": "0xF"
        },
        "3734": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "3736": {
            "op": "DUP3"
        },
        "3737": {
            "op": "ADD"
        },
        "3738": {
            "op": "MSTORE"
        },
        "3739": {
            "op": "PUSH15",
            "value": "0x63616E206E6F74206C65737320353"
        },
        "3755": {
            "op": "PUSH1",
            "value": "0x8C"
        },
        "3757": {
            "op": "SHL"
        },
        "3758": {
            "op": "PUSH1",
            "value": "0x44"
        },
        "3760": {
            "op": "DUP3"
        },
        "3761": {
            "op": "ADD"
        },
        "3762": {
            "op": "MSTORE"
        },
        "3763": {
            "op": "PUSH1",
            "value": "0x64"
        },
        "3765": {
            "op": "ADD"
        },
        "3766": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6767,
                6813
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x7BA"
        },
        "3769": {
            "op": "JUMP"
        },
        "3770": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6767,
                6813
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "3771": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6823,
                6835
            ],
            "op": "PUSH1",
            "path": "4",
            "statement": 36,
            "value": "0x9"
        },
        "3773": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6823,
                6851
            ],
            "op": "SWAP3",
            "path": "4"
        },
        "3774": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6823,
                6851
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "3775": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6823,
                6851
            ],
            "op": "SWAP3",
            "path": "4"
        },
        "3776": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6823,
                6851
            ],
            "op": "SSTORE",
            "path": "4"
        },
        "3777": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6861,
                6873
            ],
            "op": "PUSH1",
            "path": "4",
            "statement": 37,
            "value": "0xA"
        },
        "3779": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6861,
                6889
            ],
            "op": "SSTORE",
            "path": "4"
        },
        "3780": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6899,
                6914
            ],
            "op": "PUSH1",
            "path": "4",
            "statement": 38,
            "value": "0xB"
        },
        "3782": {
            "fn": "MyLottery.setPrizePercents",
            "offset": [
                6899,
                6933
            ],
            "op": "SSTORE",
            "path": "4"
        },
        "3783": {
            "fn": "MyLottery.setPrizePercents",
            "jump": "o",
            "offset": [
                6359,
                6940
            ],
            "op": "JUMP",
            "path": "4"
        },
        "3784": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                2081,
                2279
            ],
            "op": "JUMPDEST",
            "path": "0"
        },
        "3785": {
            "offset": [
                1094,
                1107
            ],
            "op": "PUSH2",
            "path": "0",
            "value": "0xED0"
        },
        "3788": {
            "offset": [
                1094,
                1105
            ],
            "op": "PUSH2",
            "path": "0",
            "value": "0x1024"
        },
        "3791": {
            "jump": "i",
            "offset": [
                1094,
                1107
            ],
            "op": "JUMP",
            "path": "0"
        },
        "3792": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                1094,
                1107
            ],
            "op": "JUMPDEST",
            "path": "0"
        },
        "3793": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "3795": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "3797": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "3799": {
            "op": "SHL"
        },
        "3800": {
            "op": "SUB"
        },
        "3801": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                2169,
                2191
            ],
            "op": "DUP2",
            "path": "0",
            "statement": 39
        },
        "3802": {
            "branch": 106,
            "fn": "Ownable.transferOwnership",
            "offset": [
                2169,
                2191
            ],
            "op": "AND",
            "path": "0"
        },
        "3803": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                2161,
                2234
            ],
            "op": "PUSH2",
            "path": "0",
            "value": "0xF35"
        },
        "3806": {
            "branch": 106,
            "fn": "Ownable.transferOwnership",
            "offset": [
                2161,
                2234
            ],
            "op": "JUMPI",
            "path": "0"
        },
        "3807": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                2161,
                2234
            ],
            "op": "PUSH1",
            "path": "0",
            "value": "0x40"
        },
        "3809": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                2161,
                2234
            ],
            "op": "MLOAD",
            "path": "0"
        },
        "3810": {
            "op": "PUSH3",
            "value": "0x461BCD"
        },
        "3814": {
            "op": "PUSH1",
            "value": "0xE5"
        },
        "3816": {
            "op": "SHL"
        },
        "3817": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                2161,
                2234
            ],
            "op": "DUP2",
            "path": "0"
        },
        "3818": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                2161,
                2234
            ],
            "op": "MSTORE",
            "path": "0"
        },
        "3819": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "3821": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                2161,
                2234
            ],
            "op": "PUSH1",
            "path": "0",
            "value": "0x4"
        },
        "3823": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                2161,
                2234
            ],
            "op": "DUP3",
            "path": "0"
        },
        "3824": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                2161,
                2234
            ],
            "op": "ADD",
            "path": "0"
        },
        "3825": {
            "op": "MSTORE"
        },
        "3826": {
            "op": "PUSH1",
            "value": "0x26"
        },
        "3828": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "3830": {
            "op": "DUP3"
        },
        "3831": {
            "op": "ADD"
        },
        "3832": {
            "op": "MSTORE"
        },
        "3833": {
            "op": "PUSH32",
            "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
        },
        "3866": {
            "op": "PUSH1",
            "value": "0x44"
        },
        "3868": {
            "op": "DUP3"
        },
        "3869": {
            "op": "ADD"
        },
        "3870": {
            "op": "MSTORE"
        },
        "3871": {
            "op": "PUSH6",
            "value": "0x646472657373"
        },
        "3878": {
            "op": "PUSH1",
            "value": "0xD0"
        },
        "3880": {
            "op": "SHL"
        },
        "3881": {
            "op": "PUSH1",
            "value": "0x64"
        },
        "3883": {
            "op": "DUP3"
        },
        "3884": {
            "op": "ADD"
        },
        "3885": {
            "op": "MSTORE"
        },
        "3886": {
            "op": "PUSH1",
            "value": "0x84"
        },
        "3888": {
            "op": "ADD"
        },
        "3889": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                2161,
                2234
            ],
            "op": "PUSH2",
            "path": "0",
            "value": "0x7BA"
        },
        "3892": {
            "op": "JUMP"
        },
        "3893": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                2161,
                2234
            ],
            "op": "JUMPDEST",
            "path": "0"
        },
        "3894": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                2244,
                2272
            ],
            "op": "PUSH2",
            "path": "0",
            "statement": 40,
            "value": "0xA1B"
        },
        "3897": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                2263,
                2271
            ],
            "op": "DUP2",
            "path": "0"
        },
        "3898": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                2244,
                2262
            ],
            "op": "PUSH2",
            "path": "0",
            "value": "0x13C9"
        },
        "3901": {
            "fn": "Ownable.transferOwnership",
            "jump": "i",
            "offset": [
                2244,
                2272
            ],
            "op": "JUMP",
            "path": "0"
        },
        "3902": {
            "offset": [
                1274,
                1306
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "3903": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                1274,
                1306
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x2"
        },
        "3905": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                1274,
                1306
            ],
            "op": "DUP2",
            "path": "4"
        },
        "3906": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                1274,
                1306
            ],
            "op": "DUP2",
            "path": "4"
        },
        "3907": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                1274,
                1306
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "3908": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                1274,
                1306
            ],
            "op": "DUP2",
            "path": "4"
        },
        "3909": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                1274,
                1306
            ],
            "op": "LT",
            "path": "4"
        },
        "3910": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                1274,
                1306
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0xF4E"
        },
        "3913": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                1274,
                1306
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "3914": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                1274,
                1306
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "3916": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                1274,
                1306
            ],
            "op": "DUP1",
            "path": "4"
        },
        "3917": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                1274,
                1306
            ],
            "op": "REVERT",
            "path": "4"
        },
        "3918": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                1274,
                1306
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "3919": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                1274,
                1306
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "3921": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                1274,
                1306
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "3922": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                1274,
                1306
            ],
            "op": "DUP3",
            "path": "4"
        },
        "3923": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                1274,
                1306
            ],
            "op": "MSTORE",
            "path": "4"
        },
        "3924": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                1274,
                1306
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x20"
        },
        "3926": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                1274,
                1306
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "3927": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                1274,
                1306
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "3928": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                1274,
                1306
            ],
            "op": "KECCAK256",
            "path": "4"
        },
        "3929": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                1274,
                1306
            ],
            "op": "ADD",
            "path": "4"
        },
        "3930": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                1274,
                1306
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "3931": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "3933": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "3935": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "3937": {
            "op": "SHL"
        },
        "3938": {
            "op": "SUB"
        },
        "3939": {
            "offset": [
                1274,
                1306
            ],
            "op": "AND",
            "path": "4"
        },
        "3940": {
            "fn": "Ownable.transferOwnership",
            "offset": [
                1274,
                1306
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "3941": {
            "op": "POP"
        },
        "3942": {
            "offset": [
                1274,
                1306
            ],
            "op": "DUP2",
            "path": "4"
        },
        "3943": {
            "fn": "Ownable.transferOwnership",
            "jump": "o",
            "offset": [
                1274,
                1306
            ],
            "op": "JUMP",
            "path": "4"
        },
        "3944": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7825,
                8069
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "3945": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7962,
                8038
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "3947": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7962,
                8038
            ],
            "op": "MLOAD",
            "path": "4"
        },
        "3948": {
            "op": "PUSH4",
            "value": "0x70A08231"
        },
        "3953": {
            "op": "PUSH1",
            "value": "0xE0"
        },
        "3955": {
            "op": "SHL"
        },
        "3956": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7962,
                8038
            ],
            "op": "DUP2",
            "path": "4"
        },
        "3957": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7962,
                8038
            ],
            "op": "MSTORE",
            "path": "4"
        },
        "3958": {
            "fn": "MyLottery.getBalance",
            "offset": [
                8023,
                8027
            ],
            "op": "ADDRESS",
            "path": "4"
        },
        "3959": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7962,
                8038
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x4"
        },
        "3961": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7962,
                8038
            ],
            "op": "DUP3",
            "path": "4"
        },
        "3962": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7962,
                8038
            ],
            "op": "ADD",
            "path": "4"
        },
        "3963": {
            "op": "MSTORE"
        },
        "3964": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7921,
                7928
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "3966": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7921,
                7928
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "3967": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7921,
                7928
            ],
            "op": "DUP2",
            "path": "4"
        },
        "3968": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7921,
                7928
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "3969": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "3971": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "3973": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "3975": {
            "op": "SHL"
        },
        "3976": {
            "op": "SUB"
        },
        "3977": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7962,
                8001
            ],
            "op": "DUP5",
            "path": "4"
        },
        "3978": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7962,
                8001
            ],
            "op": "AND",
            "path": "4"
        },
        "3979": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7962,
                8001
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "3980": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7962,
                8001
            ],
            "op": "PUSH4",
            "path": "4",
            "value": "0x70A08231"
        },
        "3985": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7962,
                8001
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "3986": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "3988": {
            "op": "ADD"
        },
        "3989": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7962,
                8038
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x20"
        },
        "3991": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7962,
                8038
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "3993": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7962,
                8038
            ],
            "op": "MLOAD",
            "path": "4"
        },
        "3994": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7962,
                8038
            ],
            "op": "DUP1",
            "path": "4"
        },
        "3995": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7962,
                8038
            ],
            "op": "DUP4",
            "path": "4"
        },
        "3996": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7962,
                8038
            ],
            "op": "SUB",
            "path": "4"
        },
        "3997": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7962,
                8038
            ],
            "op": "DUP2",
            "path": "4"
        },
        "3998": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7962,
                8038
            ],
            "op": "DUP7",
            "path": "4"
        },
        "3999": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7962,
                8038
            ],
            "op": "GAS",
            "path": "4"
        },
        "4000": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7962,
                8038
            ],
            "op": "STATICCALL",
            "path": "4"
        },
        "4001": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7962,
                8038
            ],
            "op": "ISZERO",
            "path": "4"
        },
        "4002": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7962,
                8038
            ],
            "op": "DUP1",
            "path": "4"
        },
        "4003": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7962,
                8038
            ],
            "op": "ISZERO",
            "path": "4"
        },
        "4004": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7962,
                8038
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0xFB1"
        },
        "4007": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7962,
                8038
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "4008": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7962,
                8038
            ],
            "op": "RETURNDATASIZE",
            "path": "4"
        },
        "4009": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7962,
                8038
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "4011": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7962,
                8038
            ],
            "op": "DUP1",
            "path": "4"
        },
        "4012": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7962,
                8038
            ],
            "op": "RETURNDATACOPY",
            "path": "4"
        },
        "4013": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7962,
                8038
            ],
            "op": "RETURNDATASIZE",
            "path": "4"
        },
        "4014": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7962,
                8038
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "4016": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7962,
                8038
            ],
            "op": "REVERT",
            "path": "4"
        },
        "4017": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7962,
                8038
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "4018": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7962,
                8038
            ],
            "op": "POP",
            "path": "4"
        },
        "4019": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7962,
                8038
            ],
            "op": "POP",
            "path": "4"
        },
        "4020": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7962,
                8038
            ],
            "op": "POP",
            "path": "4"
        },
        "4021": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7962,
                8038
            ],
            "op": "POP",
            "path": "4"
        },
        "4022": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7962,
                8038
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "4024": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7962,
                8038
            ],
            "op": "MLOAD",
            "path": "4"
        },
        "4025": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7962,
                8038
            ],
            "op": "RETURNDATASIZE",
            "path": "4"
        },
        "4026": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7962,
                8038
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x1F"
        },
        "4028": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7962,
                8038
            ],
            "op": "NOT",
            "path": "4"
        },
        "4029": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7962,
                8038
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x1F"
        },
        "4031": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7962,
                8038
            ],
            "op": "DUP3",
            "path": "4"
        },
        "4032": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7962,
                8038
            ],
            "op": "ADD",
            "path": "4"
        },
        "4033": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7962,
                8038
            ],
            "op": "AND",
            "path": "4"
        },
        "4034": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7962,
                8038
            ],
            "op": "DUP3",
            "path": "4"
        },
        "4035": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7962,
                8038
            ],
            "op": "ADD",
            "path": "4"
        },
        "4036": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7962,
                8038
            ],
            "op": "DUP1",
            "path": "4"
        },
        "4037": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7962,
                8038
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "4039": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7962,
                8038
            ],
            "op": "MSTORE",
            "path": "4"
        },
        "4040": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7962,
                8038
            ],
            "op": "POP",
            "path": "4"
        },
        "4041": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7962,
                8038
            ],
            "op": "DUP2",
            "path": "4"
        },
        "4042": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7962,
                8038
            ],
            "op": "ADD",
            "path": "4"
        },
        "4043": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7962,
                8038
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "4044": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7962,
                8038
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0xFD5"
        },
        "4047": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7962,
                8038
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "4048": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7962,
                8038
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "4049": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7962,
                8038
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x191F"
        },
        "4052": {
            "fn": "MyLottery.getBalance",
            "jump": "i",
            "offset": [
                7962,
                8038
            ],
            "op": "JUMP",
            "path": "4"
        },
        "4053": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7962,
                8038
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "4054": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7944,
                8038
            ],
            "op": "SWAP4",
            "path": "4"
        },
        "4055": {
            "fn": "MyLottery.getBalance",
            "offset": [
                7825,
                8069
            ],
            "op": "SWAP3",
            "path": "4"
        },
        "4056": {
            "op": "POP"
        },
        "4057": {
            "op": "POP"
        },
        "4058": {
            "op": "POP"
        },
        "4059": {
            "fn": "MyLottery.getBalance",
            "jump": "o",
            "offset": [
                7825,
                8069
            ],
            "op": "JUMP",
            "path": "4"
        },
        "4060": {
            "fn": "MyLottery.setEntranceFee",
            "offset": [
                7431,
                7653
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "4061": {
            "offset": [
                1094,
                1107
            ],
            "op": "PUSH2",
            "path": "0",
            "value": "0xFE4"
        },
        "4064": {
            "offset": [
                1094,
                1105
            ],
            "op": "PUSH2",
            "path": "0",
            "value": "0x1024"
        },
        "4067": {
            "jump": "i",
            "offset": [
                1094,
                1107
            ],
            "op": "JUMP",
            "path": "0"
        },
        "4068": {
            "fn": "MyLottery.setEntranceFee",
            "offset": [
                1094,
                1107
            ],
            "op": "JUMPDEST",
            "path": "0"
        },
        "4069": {
            "fn": "MyLottery.setEntranceFee",
            "offset": [
                7541,
                7561
            ],
            "op": "PUSH1",
            "path": "4",
            "statement": 41,
            "value": "0x1"
        },
        "4071": {
            "fn": "MyLottery.setEntranceFee",
            "offset": [
                7524,
                7537
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x12"
        },
        "4073": {
            "fn": "MyLottery.setEntranceFee",
            "offset": [
                7524,
                7537
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "4074": {
            "fn": "MyLottery.setEntranceFee",
            "offset": [
                7524,
                7537
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x100"
        },
        "4077": {
            "fn": "MyLottery.setEntranceFee",
            "offset": [
                7524,
                7537
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "4078": {
            "fn": "MyLottery.setEntranceFee",
            "offset": [
                7524,
                7537
            ],
            "op": "DIV",
            "path": "4"
        },
        "4079": {
            "fn": "MyLottery.setEntranceFee",
            "offset": [
                7524,
                7537
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0xFF"
        },
        "4081": {
            "fn": "MyLottery.setEntranceFee",
            "offset": [
                7524,
                7537
            ],
            "op": "AND",
            "path": "4"
        },
        "4082": {
            "fn": "MyLottery.setEntranceFee",
            "offset": [
                7524,
                7561
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x2"
        },
        "4084": {
            "fn": "MyLottery.setEntranceFee",
            "offset": [
                7524,
                7561
            ],
            "op": "DUP2",
            "path": "4"
        },
        "4085": {
            "fn": "MyLottery.setEntranceFee",
            "offset": [
                7524,
                7561
            ],
            "op": "GT",
            "path": "4"
        },
        "4086": {
            "fn": "MyLottery.setEntranceFee",
            "offset": [
                7524,
                7561
            ],
            "op": "ISZERO",
            "path": "4"
        },
        "4087": {
            "fn": "MyLottery.setEntranceFee",
            "offset": [
                7524,
                7561
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1002"
        },
        "4090": {
            "fn": "MyLottery.setEntranceFee",
            "offset": [
                7524,
                7561
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "4091": {
            "fn": "MyLottery.setEntranceFee",
            "offset": [
                7524,
                7561
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1002"
        },
        "4094": {
            "fn": "MyLottery.setEntranceFee",
            "offset": [
                7524,
                7561
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x18AF"
        },
        "4097": {
            "fn": "MyLottery.setEntranceFee",
            "jump": "i",
            "offset": [
                7524,
                7561
            ],
            "op": "JUMP",
            "path": "4"
        },
        "4098": {
            "fn": "MyLottery.setEntranceFee",
            "offset": [
                7524,
                7561
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "4099": {
            "branch": 97,
            "fn": "MyLottery.setEntranceFee",
            "offset": [
                7524,
                7561
            ],
            "op": "EQ",
            "path": "4"
        },
        "4100": {
            "fn": "MyLottery.setEntranceFee",
            "offset": [
                7503,
                7616
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x101F"
        },
        "4103": {
            "branch": 97,
            "fn": "MyLottery.setEntranceFee",
            "offset": [
                7503,
                7616
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "4104": {
            "fn": "MyLottery.setEntranceFee",
            "offset": [
                7503,
                7616
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "4106": {
            "fn": "MyLottery.setEntranceFee",
            "offset": [
                7503,
                7616
            ],
            "op": "MLOAD",
            "path": "4"
        },
        "4107": {
            "op": "PUSH3",
            "value": "0x461BCD"
        },
        "4111": {
            "op": "PUSH1",
            "value": "0xE5"
        },
        "4113": {
            "op": "SHL"
        },
        "4114": {
            "fn": "MyLottery.setEntranceFee",
            "offset": [
                7503,
                7616
            ],
            "op": "DUP2",
            "path": "4"
        },
        "4115": {
            "fn": "MyLottery.setEntranceFee",
            "offset": [
                7503,
                7616
            ],
            "op": "MSTORE",
            "path": "4"
        },
        "4116": {
            "fn": "MyLottery.setEntranceFee",
            "offset": [
                7503,
                7616
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x4"
        },
        "4118": {
            "fn": "MyLottery.setEntranceFee",
            "offset": [
                7503,
                7616
            ],
            "op": "ADD",
            "path": "4"
        },
        "4119": {
            "fn": "MyLottery.setEntranceFee",
            "offset": [
                7503,
                7616
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x7BA"
        },
        "4122": {
            "fn": "MyLottery.setEntranceFee",
            "offset": [
                7503,
                7616
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "4123": {
            "fn": "MyLottery.setEntranceFee",
            "offset": [
                7503,
                7616
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1A64"
        },
        "4126": {
            "fn": "MyLottery.setEntranceFee",
            "jump": "i",
            "offset": [
                7503,
                7616
            ],
            "op": "JUMP",
            "path": "4"
        },
        "4127": {
            "fn": "MyLottery.setEntranceFee",
            "offset": [
                7503,
                7616
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "4128": {
            "fn": "MyLottery.setEntranceFee",
            "offset": [
                7626,
                7634
            ],
            "op": "PUSH1",
            "path": "4",
            "statement": 42,
            "value": "0x7"
        },
        "4130": {
            "fn": "MyLottery.setEntranceFee",
            "offset": [
                7626,
                7646
            ],
            "op": "SSTORE",
            "path": "4"
        },
        "4131": {
            "fn": "MyLottery.setEntranceFee",
            "jump": "o",
            "offset": [
                7431,
                7653
            ],
            "op": "JUMP",
            "path": "4"
        },
        "4132": {
            "fn": "Ownable._checkOwner",
            "offset": [
                1359,
                1489
            ],
            "op": "JUMPDEST",
            "path": "0"
        },
        "4133": {
            "fn": "Ownable.owner",
            "offset": [
                1247,
                1254
            ],
            "op": "PUSH1",
            "path": "0",
            "value": "0x0"
        },
        "4135": {
            "fn": "Ownable.owner",
            "offset": [
                1273,
                1279
            ],
            "op": "SLOAD",
            "path": "0"
        },
        "4136": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "4138": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "4140": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "4142": {
            "op": "SHL"
        },
        "4143": {
            "op": "SUB"
        },
        "4144": {
            "fn": "Ownable.owner",
            "offset": [
                1273,
                1279
            ],
            "op": "AND",
            "path": "0"
        },
        "4145": {
            "fn": "Context._msgSender",
            "offset": [
                719,
                729
            ],
            "op": "CALLER",
            "path": "2",
            "statement": 43
        },
        "4146": {
            "branch": 107,
            "fn": "Ownable._checkOwner",
            "offset": [
                1422,
                1445
            ],
            "op": "EQ",
            "path": "0",
            "statement": 44
        },
        "4147": {
            "fn": "Ownable._checkOwner",
            "offset": [
                1414,
                1482
            ],
            "op": "PUSH2",
            "path": "0",
            "value": "0xA6E"
        },
        "4150": {
            "branch": 107,
            "fn": "Ownable._checkOwner",
            "offset": [
                1414,
                1482
            ],
            "op": "JUMPI",
            "path": "0"
        },
        "4151": {
            "fn": "Ownable._checkOwner",
            "offset": [
                1414,
                1482
            ],
            "op": "PUSH1",
            "path": "0",
            "value": "0x40"
        },
        "4153": {
            "fn": "Ownable._checkOwner",
            "offset": [
                1414,
                1482
            ],
            "op": "MLOAD",
            "path": "0"
        },
        "4154": {
            "op": "PUSH3",
            "value": "0x461BCD"
        },
        "4158": {
            "op": "PUSH1",
            "value": "0xE5"
        },
        "4160": {
            "op": "SHL"
        },
        "4161": {
            "fn": "Ownable._checkOwner",
            "offset": [
                1414,
                1482
            ],
            "op": "DUP2",
            "path": "0"
        },
        "4162": {
            "fn": "Ownable._checkOwner",
            "offset": [
                1414,
                1482
            ],
            "op": "MSTORE",
            "path": "0"
        },
        "4163": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "4165": {
            "fn": "Ownable._checkOwner",
            "offset": [
                1414,
                1482
            ],
            "op": "PUSH1",
            "path": "0",
            "value": "0x4"
        },
        "4167": {
            "fn": "Ownable._checkOwner",
            "offset": [
                1414,
                1482
            ],
            "op": "DUP3",
            "path": "0"
        },
        "4168": {
            "fn": "Ownable._checkOwner",
            "offset": [
                1414,
                1482
            ],
            "op": "ADD",
            "path": "0"
        },
        "4169": {
            "op": "DUP2"
        },
        "4170": {
            "op": "SWAP1"
        },
        "4171": {
            "op": "MSTORE"
        },
        "4172": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "4174": {
            "op": "DUP3"
        },
        "4175": {
            "op": "ADD"
        },
        "4176": {
            "op": "MSTORE"
        },
        "4177": {
            "op": "PUSH32",
            "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
        },
        "4210": {
            "op": "PUSH1",
            "value": "0x44"
        },
        "4212": {
            "op": "DUP3"
        },
        "4213": {
            "op": "ADD"
        },
        "4214": {
            "op": "MSTORE"
        },
        "4215": {
            "op": "PUSH1",
            "value": "0x64"
        },
        "4217": {
            "op": "ADD"
        },
        "4218": {
            "fn": "Ownable._checkOwner",
            "offset": [
                1414,
                1482
            ],
            "op": "PUSH2",
            "path": "0",
            "value": "0x7BA"
        },
        "4221": {
            "op": "JUMP"
        },
        "4222": {
            "fn": "Strings.toString",
            "offset": [
                392,
                1095
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "4223": {
            "fn": "Strings.toString",
            "offset": [
                448,
                461
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x60"
        },
        "4225": {
            "fn": "Strings.toString",
            "offset": [
                665,
                670
            ],
            "op": "DUP2",
            "path": "3"
        },
        "4226": {
            "fn": "Strings.toString",
            "offset": [
                674,
                675
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x0"
        },
        "4228": {
            "branch": 108,
            "fn": "Strings.toString",
            "offset": [
                665,
                675
            ],
            "op": "SUB",
            "path": "3"
        },
        "4229": {
            "fn": "Strings.toString",
            "offset": [
                661,
                712
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x10A5"
        },
        "4232": {
            "branch": 108,
            "fn": "Strings.toString",
            "offset": [
                661,
                712
            ],
            "op": "JUMPI",
            "path": "3"
        },
        "4233": {
            "op": "POP"
        },
        "4234": {
            "op": "POP"
        },
        "4235": {
            "fn": "Strings.toString",
            "offset": [
                691,
                701
            ],
            "op": "PUSH1",
            "path": "3",
            "statement": 45,
            "value": "0x40"
        },
        "4237": {
            "fn": "Strings.toString",
            "offset": [
                691,
                701
            ],
            "op": "DUP1",
            "path": "3"
        },
        "4238": {
            "fn": "Strings.toString",
            "offset": [
                691,
                701
            ],
            "op": "MLOAD",
            "path": "3"
        },
        "4239": {
            "fn": "Strings.toString",
            "offset": [
                691,
                701
            ],
            "op": "DUP1",
            "path": "3"
        },
        "4240": {
            "fn": "Strings.toString",
            "offset": [
                691,
                701
            ],
            "op": "DUP3",
            "path": "3"
        },
        "4241": {
            "fn": "Strings.toString",
            "offset": [
                691,
                701
            ],
            "op": "ADD",
            "path": "3"
        },
        "4242": {
            "fn": "Strings.toString",
            "offset": [
                691,
                701
            ],
            "op": "SWAP1",
            "path": "3"
        },
        "4243": {
            "fn": "Strings.toString",
            "offset": [
                691,
                701
            ],
            "op": "SWAP2",
            "path": "3"
        },
        "4244": {
            "fn": "Strings.toString",
            "offset": [
                691,
                701
            ],
            "op": "MSTORE",
            "path": "3"
        },
        "4245": {
            "fn": "Strings.toString",
            "offset": [
                691,
                701
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x1"
        },
        "4247": {
            "fn": "Strings.toString",
            "offset": [
                691,
                701
            ],
            "op": "DUP2",
            "path": "3"
        },
        "4248": {
            "fn": "Strings.toString",
            "offset": [
                691,
                701
            ],
            "op": "MSTORE",
            "path": "3"
        },
        "4249": {
            "op": "PUSH1",
            "value": "0x3"
        },
        "4251": {
            "op": "PUSH1",
            "value": "0xFC"
        },
        "4253": {
            "op": "SHL"
        },
        "4254": {
            "fn": "Strings.toString",
            "offset": [
                691,
                701
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x20"
        },
        "4256": {
            "fn": "Strings.toString",
            "offset": [
                691,
                701
            ],
            "op": "DUP3",
            "path": "3"
        },
        "4257": {
            "fn": "Strings.toString",
            "offset": [
                691,
                701
            ],
            "op": "ADD",
            "path": "3"
        },
        "4258": {
            "fn": "Strings.toString",
            "offset": [
                691,
                701
            ],
            "op": "MSTORE",
            "path": "3"
        },
        "4259": {
            "fn": "Strings.toString",
            "offset": [
                691,
                701
            ],
            "op": "SWAP1",
            "path": "3"
        },
        "4260": {
            "fn": "Strings.toString",
            "jump": "o",
            "offset": [
                392,
                1095
            ],
            "op": "JUMP",
            "path": "3"
        },
        "4261": {
            "fn": "Strings.toString",
            "offset": [
                661,
                712
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "4262": {
            "fn": "Strings.toString",
            "offset": [
                736,
                741
            ],
            "op": "DUP2",
            "path": "3"
        },
        "4263": {
            "fn": "Strings.toString",
            "offset": [
                721,
                733
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x0"
        },
        "4265": {
            "fn": "Strings.toString",
            "offset": [
                775,
                850
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "4266": {
            "fn": "Strings.toString",
            "offset": [
                782,
                791
            ],
            "op": "DUP2",
            "path": "3"
        },
        "4267": {
            "fn": "Strings.toString",
            "offset": [
                782,
                791
            ],
            "op": "ISZERO",
            "path": "3"
        },
        "4268": {
            "fn": "Strings.toString",
            "offset": [
                775,
                850
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x10CF"
        },
        "4271": {
            "fn": "Strings.toString",
            "offset": [
                775,
                850
            ],
            "op": "JUMPI",
            "path": "3"
        },
        "4272": {
            "fn": "Strings.toString",
            "offset": [
                807,
                815
            ],
            "op": "DUP1",
            "path": "3",
            "statement": 46
        },
        "4273": {
            "fn": "Strings.toString",
            "offset": [
                807,
                815
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x10B9"
        },
        "4276": {
            "fn": "Strings.toString",
            "offset": [
                807,
                815
            ],
            "op": "DUP2",
            "path": "3"
        },
        "4277": {
            "fn": "Strings.toString",
            "offset": [
                807,
                815
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x1ACA"
        },
        "4280": {
            "fn": "Strings.toString",
            "jump": "i",
            "offset": [
                807,
                815
            ],
            "op": "JUMP",
            "path": "3"
        },
        "4281": {
            "fn": "Strings.toString",
            "offset": [
                807,
                815
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "4282": {
            "fn": "Strings.toString",
            "offset": [
                807,
                815
            ],
            "op": "SWAP2",
            "path": "3"
        },
        "4283": {
            "op": "POP"
        },
        "4284": {
            "fn": "Strings.toString",
            "offset": [
                829,
                839
            ],
            "op": "PUSH2",
            "path": "3",
            "statement": 47,
            "value": "0x10C8"
        },
        "4287": {
            "fn": "Strings.toString",
            "offset": [
                829,
                839
            ],
            "op": "SWAP1",
            "path": "3"
        },
        "4288": {
            "op": "POP"
        },
        "4289": {
            "fn": "Strings.toString",
            "offset": [
                837,
                839
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0xA"
        },
        "4291": {
            "fn": "Strings.toString",
            "offset": [
                829,
                839
            ],
            "op": "DUP4",
            "path": "3"
        },
        "4292": {
            "fn": "Strings.toString",
            "offset": [
                829,
                839
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x1AF9"
        },
        "4295": {
            "fn": "Strings.toString",
            "jump": "i",
            "offset": [
                829,
                839
            ],
            "op": "JUMP",
            "path": "3"
        },
        "4296": {
            "fn": "Strings.toString",
            "offset": [
                829,
                839
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "4297": {
            "fn": "Strings.toString",
            "offset": [
                829,
                839
            ],
            "op": "SWAP2",
            "path": "3"
        },
        "4298": {
            "fn": "Strings.toString",
            "offset": [
                829,
                839
            ],
            "op": "POP",
            "path": "3"
        },
        "4299": {
            "fn": "Strings.toString",
            "offset": [
                775,
                850
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x10A9"
        },
        "4302": {
            "fn": "Strings.toString",
            "offset": [
                775,
                850
            ],
            "op": "JUMP",
            "path": "3"
        },
        "4303": {
            "fn": "Strings.toString",
            "offset": [
                775,
                850
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "4304": {
            "fn": "Strings.toString",
            "offset": [
                859,
                878
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x0"
        },
        "4306": {
            "fn": "Strings.toString",
            "offset": [
                891,
                897
            ],
            "op": "DUP2",
            "path": "3"
        },
        "4307": {
            "fn": "Strings.toString",
            "offset": [
                881,
                898
            ],
            "op": "PUSH8",
            "path": "3",
            "value": "0xFFFFFFFFFFFFFFFF"
        },
        "4316": {
            "fn": "Strings.toString",
            "offset": [
                881,
                898
            ],
            "op": "DUP2",
            "path": "3"
        },
        "4317": {
            "fn": "Strings.toString",
            "offset": [
                881,
                898
            ],
            "op": "GT",
            "path": "3"
        },
        "4318": {
            "fn": "Strings.toString",
            "offset": [
                881,
                898
            ],
            "op": "ISZERO",
            "path": "3"
        },
        "4319": {
            "fn": "Strings.toString",
            "offset": [
                881,
                898
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x10EA"
        },
        "4322": {
            "fn": "Strings.toString",
            "offset": [
                881,
                898
            ],
            "op": "JUMPI",
            "path": "3"
        },
        "4323": {
            "fn": "Strings.toString",
            "offset": [
                881,
                898
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x10EA"
        },
        "4326": {
            "fn": "Strings.toString",
            "offset": [
                881,
                898
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x1B0D"
        },
        "4329": {
            "fn": "Strings.toString",
            "jump": "i",
            "offset": [
                881,
                898
            ],
            "op": "JUMP",
            "path": "3"
        },
        "4330": {
            "fn": "Strings.toString",
            "offset": [
                881,
                898
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "4331": {
            "fn": "Strings.toString",
            "offset": [
                881,
                898
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x40"
        },
        "4333": {
            "fn": "Strings.toString",
            "offset": [
                881,
                898
            ],
            "op": "MLOAD",
            "path": "3"
        },
        "4334": {
            "fn": "Strings.toString",
            "offset": [
                881,
                898
            ],
            "op": "SWAP1",
            "path": "3"
        },
        "4335": {
            "fn": "Strings.toString",
            "offset": [
                881,
                898
            ],
            "op": "DUP1",
            "path": "3"
        },
        "4336": {
            "fn": "Strings.toString",
            "offset": [
                881,
                898
            ],
            "op": "DUP3",
            "path": "3"
        },
        "4337": {
            "fn": "Strings.toString",
            "offset": [
                881,
                898
            ],
            "op": "MSTORE",
            "path": "3"
        },
        "4338": {
            "fn": "Strings.toString",
            "offset": [
                881,
                898
            ],
            "op": "DUP1",
            "path": "3"
        },
        "4339": {
            "fn": "Strings.toString",
            "offset": [
                881,
                898
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x1F"
        },
        "4341": {
            "fn": "Strings.toString",
            "offset": [
                881,
                898
            ],
            "op": "ADD",
            "path": "3"
        },
        "4342": {
            "fn": "Strings.toString",
            "offset": [
                881,
                898
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x1F"
        },
        "4344": {
            "fn": "Strings.toString",
            "offset": [
                881,
                898
            ],
            "op": "NOT",
            "path": "3"
        },
        "4345": {
            "fn": "Strings.toString",
            "offset": [
                881,
                898
            ],
            "op": "AND",
            "path": "3"
        },
        "4346": {
            "fn": "Strings.toString",
            "offset": [
                881,
                898
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x20"
        },
        "4348": {
            "fn": "Strings.toString",
            "offset": [
                881,
                898
            ],
            "op": "ADD",
            "path": "3"
        },
        "4349": {
            "fn": "Strings.toString",
            "offset": [
                881,
                898
            ],
            "op": "DUP3",
            "path": "3"
        },
        "4350": {
            "fn": "Strings.toString",
            "offset": [
                881,
                898
            ],
            "op": "ADD",
            "path": "3"
        },
        "4351": {
            "fn": "Strings.toString",
            "offset": [
                881,
                898
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x40"
        },
        "4353": {
            "fn": "Strings.toString",
            "offset": [
                881,
                898
            ],
            "op": "MSTORE",
            "path": "3"
        },
        "4354": {
            "fn": "Strings.toString",
            "offset": [
                881,
                898
            ],
            "op": "DUP1",
            "path": "3"
        },
        "4355": {
            "fn": "Strings.toString",
            "offset": [
                881,
                898
            ],
            "op": "ISZERO",
            "path": "3"
        },
        "4356": {
            "fn": "Strings.toString",
            "offset": [
                881,
                898
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x1114"
        },
        "4359": {
            "fn": "Strings.toString",
            "offset": [
                881,
                898
            ],
            "op": "JUMPI",
            "path": "3"
        },
        "4360": {
            "fn": "Strings.toString",
            "offset": [
                881,
                898
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x20"
        },
        "4362": {
            "fn": "Strings.toString",
            "offset": [
                881,
                898
            ],
            "op": "DUP3",
            "path": "3"
        },
        "4363": {
            "fn": "Strings.toString",
            "offset": [
                881,
                898
            ],
            "op": "ADD",
            "path": "3"
        },
        "4364": {
            "fn": "Strings.toString",
            "offset": [
                881,
                898
            ],
            "op": "DUP2",
            "path": "3"
        },
        "4365": {
            "fn": "Strings.toString",
            "offset": [
                881,
                898
            ],
            "op": "DUP1",
            "path": "3"
        },
        "4366": {
            "fn": "Strings.toString",
            "offset": [
                881,
                898
            ],
            "op": "CALLDATASIZE",
            "path": "3"
        },
        "4367": {
            "fn": "Strings.toString",
            "offset": [
                881,
                898
            ],
            "op": "DUP4",
            "path": "3"
        },
        "4368": {
            "fn": "Strings.toString",
            "offset": [
                881,
                898
            ],
            "op": "CALLDATACOPY",
            "path": "3"
        },
        "4369": {
            "fn": "Strings.toString",
            "offset": [
                881,
                898
            ],
            "op": "ADD",
            "path": "3"
        },
        "4370": {
            "fn": "Strings.toString",
            "offset": [
                881,
                898
            ],
            "op": "SWAP1",
            "path": "3"
        },
        "4371": {
            "op": "POP"
        },
        "4372": {
            "fn": "Strings.toString",
            "offset": [
                881,
                898
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "4373": {
            "fn": "Strings.toString",
            "offset": [
                881,
                898
            ],
            "op": "POP",
            "path": "3"
        },
        "4374": {
            "fn": "Strings.toString",
            "offset": [
                859,
                898
            ],
            "op": "SWAP1",
            "path": "3"
        },
        "4375": {
            "fn": "Strings.toString",
            "offset": [
                859,
                898
            ],
            "op": "POP",
            "path": "3"
        },
        "4376": {
            "fn": "Strings.toString",
            "offset": [
                908,
                1058
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "4377": {
            "fn": "Strings.toString",
            "offset": [
                915,
                925
            ],
            "op": "DUP5",
            "path": "3"
        },
        "4378": {
            "fn": "Strings.toString",
            "offset": [
                915,
                925
            ],
            "op": "ISZERO",
            "path": "3"
        },
        "4379": {
            "fn": "Strings.toString",
            "offset": [
                908,
                1058
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x117F"
        },
        "4382": {
            "fn": "Strings.toString",
            "offset": [
                908,
                1058
            ],
            "op": "JUMPI",
            "path": "3"
        },
        "4383": {
            "fn": "Strings.toString",
            "offset": [
                941,
                952
            ],
            "op": "PUSH2",
            "path": "3",
            "statement": 48,
            "value": "0x1129"
        },
        "4386": {
            "fn": "Strings.toString",
            "offset": [
                951,
                952
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x1"
        },
        "4388": {
            "fn": "Strings.toString",
            "offset": [
                941,
                952
            ],
            "op": "DUP4",
            "path": "3"
        },
        "4389": {
            "fn": "Strings.toString",
            "offset": [
                941,
                952
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x1B23"
        },
        "4392": {
            "fn": "Strings.toString",
            "jump": "i",
            "offset": [
                941,
                952
            ],
            "op": "JUMP",
            "path": "3"
        },
        "4393": {
            "fn": "Strings.toString",
            "offset": [
                941,
                952
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "4394": {
            "fn": "Strings.toString",
            "offset": [
                941,
                952
            ],
            "op": "SWAP2",
            "path": "3"
        },
        "4395": {
            "op": "POP"
        },
        "4396": {
            "fn": "Strings.toString",
            "offset": [
                1009,
                1019
            ],
            "op": "PUSH2",
            "path": "3",
            "statement": 49,
            "value": "0x1136"
        },
        "4399": {
            "fn": "Strings.toString",
            "offset": [
                1017,
                1019
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0xA"
        },
        "4401": {
            "fn": "Strings.toString",
            "offset": [
                1009,
                1014
            ],
            "op": "DUP7",
            "path": "3"
        },
        "4402": {
            "fn": "Strings.toString",
            "offset": [
                1009,
                1019
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x1B36"
        },
        "4405": {
            "fn": "Strings.toString",
            "jump": "i",
            "offset": [
                1009,
                1019
            ],
            "op": "JUMP",
            "path": "3"
        },
        "4406": {
            "fn": "Strings.toString",
            "offset": [
                1009,
                1019
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "4407": {
            "fn": "Strings.toString",
            "offset": [
                996,
                1020
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x1141"
        },
        "4410": {
            "fn": "Strings.toString",
            "offset": [
                996,
                1020
            ],
            "op": "SWAP1",
            "path": "3"
        },
        "4411": {
            "fn": "Strings.toString",
            "offset": [
                996,
                998
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x30"
        },
        "4413": {
            "fn": "Strings.toString",
            "offset": [
                996,
                1020
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x1AB1"
        },
        "4416": {
            "fn": "Strings.toString",
            "jump": "i",
            "offset": [
                996,
                1020
            ],
            "op": "JUMP",
            "path": "3"
        },
        "4417": {
            "fn": "Strings.toString",
            "offset": [
                996,
                1020
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "4418": {
            "fn": "Strings.toString",
            "offset": [
                983,
                1022
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0xF8"
        },
        "4420": {
            "fn": "Strings.toString",
            "offset": [
                983,
                1022
            ],
            "op": "SHL",
            "path": "3"
        },
        "4421": {
            "fn": "Strings.toString",
            "offset": [
                966,
                972
            ],
            "op": "DUP2",
            "path": "3"
        },
        "4422": {
            "fn": "Strings.toString",
            "offset": [
                973,
                979
            ],
            "op": "DUP4",
            "path": "3"
        },
        "4423": {
            "fn": "Strings.toString",
            "offset": [
                966,
                980
            ],
            "op": "DUP2",
            "path": "3"
        },
        "4424": {
            "fn": "Strings.toString",
            "offset": [
                966,
                980
            ],
            "op": "MLOAD",
            "path": "3"
        },
        "4425": {
            "fn": "Strings.toString",
            "offset": [
                966,
                980
            ],
            "op": "DUP2",
            "path": "3"
        },
        "4426": {
            "fn": "Strings.toString",
            "offset": [
                966,
                980
            ],
            "op": "LT",
            "path": "3"
        },
        "4427": {
            "fn": "Strings.toString",
            "offset": [
                966,
                980
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x1156"
        },
        "4430": {
            "fn": "Strings.toString",
            "offset": [
                966,
                980
            ],
            "op": "JUMPI",
            "path": "3"
        },
        "4431": {
            "fn": "Strings.toString",
            "offset": [
                966,
                980
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x1156"
        },
        "4434": {
            "fn": "Strings.toString",
            "offset": [
                966,
                980
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x1B4A"
        },
        "4437": {
            "fn": "Strings.toString",
            "jump": "i",
            "offset": [
                966,
                980
            ],
            "op": "JUMP",
            "path": "3"
        },
        "4438": {
            "fn": "Strings.toString",
            "offset": [
                966,
                980
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "4439": {
            "fn": "Strings.toString",
            "offset": [
                966,
                980
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x20"
        },
        "4441": {
            "fn": "Strings.toString",
            "offset": [
                966,
                980
            ],
            "op": "ADD",
            "path": "3"
        },
        "4442": {
            "fn": "Strings.toString",
            "offset": [
                966,
                980
            ],
            "op": "ADD",
            "path": "3"
        },
        "4443": {
            "fn": "Strings.toString",
            "offset": [
                966,
                1022
            ],
            "op": "SWAP1",
            "path": "3"
        },
        "4444": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "4446": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "4448": {
            "op": "PUSH1",
            "value": "0xF8"
        },
        "4450": {
            "op": "SHL"
        },
        "4451": {
            "op": "SUB"
        },
        "4452": {
            "fn": "Strings.toString",
            "offset": [
                966,
                1022
            ],
            "op": "NOT",
            "path": "3"
        },
        "4453": {
            "fn": "Strings.toString",
            "offset": [
                966,
                1022
            ],
            "op": "AND",
            "path": "3"
        },
        "4454": {
            "fn": "Strings.toString",
            "offset": [
                966,
                1022
            ],
            "op": "SWAP1",
            "path": "3"
        },
        "4455": {
            "fn": "Strings.toString",
            "offset": [
                966,
                1022
            ],
            "op": "DUP2",
            "path": "3"
        },
        "4456": {
            "fn": "Strings.toString",
            "offset": [
                966,
                1022
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0x0"
        },
        "4458": {
            "fn": "Strings.toString",
            "offset": [
                966,
                1022
            ],
            "op": "BYTE",
            "path": "3"
        },
        "4459": {
            "fn": "Strings.toString",
            "offset": [
                966,
                1022
            ],
            "op": "SWAP1",
            "path": "3"
        },
        "4460": {
            "fn": "Strings.toString",
            "offset": [
                966,
                1022
            ],
            "op": "MSTORE8",
            "path": "3"
        },
        "4461": {
            "op": "POP"
        },
        "4462": {
            "fn": "Strings.toString",
            "offset": [
                1036,
                1047
            ],
            "op": "PUSH2",
            "path": "3",
            "statement": 50,
            "value": "0x1178"
        },
        "4465": {
            "fn": "Strings.toString",
            "offset": [
                1045,
                1047
            ],
            "op": "PUSH1",
            "path": "3",
            "value": "0xA"
        },
        "4467": {
            "fn": "Strings.toString",
            "offset": [
                1036,
                1047
            ],
            "op": "DUP7",
            "path": "3"
        },
        "4468": {
            "fn": "Strings.toString",
            "offset": [
                1036,
                1047
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x1AF9"
        },
        "4471": {
            "fn": "Strings.toString",
            "jump": "i",
            "offset": [
                1036,
                1047
            ],
            "op": "JUMP",
            "path": "3"
        },
        "4472": {
            "fn": "Strings.toString",
            "offset": [
                1036,
                1047
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "4473": {
            "fn": "Strings.toString",
            "offset": [
                1036,
                1047
            ],
            "op": "SWAP5",
            "path": "3"
        },
        "4474": {
            "fn": "Strings.toString",
            "offset": [
                1036,
                1047
            ],
            "op": "POP",
            "path": "3"
        },
        "4475": {
            "fn": "Strings.toString",
            "offset": [
                908,
                1058
            ],
            "op": "PUSH2",
            "path": "3",
            "value": "0x1118"
        },
        "4478": {
            "fn": "Strings.toString",
            "offset": [
                908,
                1058
            ],
            "op": "JUMP",
            "path": "3"
        },
        "4479": {
            "fn": "Strings.toString",
            "offset": [
                908,
                1058
            ],
            "op": "JUMPDEST",
            "path": "3"
        },
        "4480": {
            "fn": "Strings.toString",
            "offset": [
                1081,
                1087
            ],
            "op": "SWAP5",
            "path": "3",
            "statement": 51
        },
        "4481": {
            "fn": "Strings.toString",
            "offset": [
                392,
                1095
            ],
            "op": "SWAP4",
            "path": "3"
        },
        "4482": {
            "op": "POP"
        },
        "4483": {
            "op": "POP"
        },
        "4484": {
            "op": "POP"
        },
        "4485": {
            "op": "POP"
        },
        "4486": {
            "fn": "Strings.toString",
            "jump": "o",
            "offset": [
                392,
                1095
            ],
            "op": "JUMP",
            "path": "3"
        },
        "4487": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9201,
                10277
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "4488": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9241,
                9248
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "4490": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9298,
                9330
            ],
            "op": "PUSH1",
            "path": "4",
            "statement": 52,
            "value": "0x2"
        },
        "4492": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9281,
                9294
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x12"
        },
        "4494": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9281,
                9294
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "4495": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9281,
                9294
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x100"
        },
        "4498": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9281,
                9294
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "4499": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9281,
                9294
            ],
            "op": "DIV",
            "path": "4"
        },
        "4500": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9281,
                9294
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0xFF"
        },
        "4502": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9281,
                9294
            ],
            "op": "AND",
            "path": "4"
        },
        "4503": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9281,
                9330
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x2"
        },
        "4505": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9281,
                9330
            ],
            "op": "DUP2",
            "path": "4"
        },
        "4506": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9281,
                9330
            ],
            "op": "GT",
            "path": "4"
        },
        "4507": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9281,
                9330
            ],
            "op": "ISZERO",
            "path": "4"
        },
        "4508": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9281,
                9330
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x11A7"
        },
        "4511": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9281,
                9330
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "4512": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9281,
                9330
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x11A7"
        },
        "4515": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9281,
                9330
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x18AF"
        },
        "4518": {
            "fn": "MyLottery.sendPrizes",
            "jump": "i",
            "offset": [
                9281,
                9330
            ],
            "op": "JUMP",
            "path": "4"
        },
        "4519": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9281,
                9330
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "4520": {
            "branch": 98,
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9281,
                9330
            ],
            "op": "EQ",
            "path": "4"
        },
        "4521": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9260,
                9379
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x11F4"
        },
        "4524": {
            "branch": 98,
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9260,
                9379
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "4525": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9260,
                9379
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "4527": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9260,
                9379
            ],
            "op": "MLOAD",
            "path": "4"
        },
        "4528": {
            "op": "PUSH3",
            "value": "0x461BCD"
        },
        "4532": {
            "op": "PUSH1",
            "value": "0xE5"
        },
        "4534": {
            "op": "SHL"
        },
        "4535": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9260,
                9379
            ],
            "op": "DUP2",
            "path": "4"
        },
        "4536": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9260,
                9379
            ],
            "op": "MSTORE",
            "path": "4"
        },
        "4537": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "4539": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9260,
                9379
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x4"
        },
        "4541": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9260,
                9379
            ],
            "op": "DUP3",
            "path": "4"
        },
        "4542": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9260,
                9379
            ],
            "op": "ADD",
            "path": "4"
        },
        "4543": {
            "op": "MSTORE"
        },
        "4544": {
            "op": "PUSH1",
            "value": "0x17"
        },
        "4546": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "4548": {
            "op": "DUP3"
        },
        "4549": {
            "op": "ADD"
        },
        "4550": {
            "op": "MSTORE"
        },
        "4551": {
            "op": "PUSH32",
            "value": "0x2073656E64207072697A652077726F6E67207374617465000000000000000000"
        },
        "4584": {
            "op": "PUSH1",
            "value": "0x44"
        },
        "4586": {
            "op": "DUP3"
        },
        "4587": {
            "op": "ADD"
        },
        "4588": {
            "op": "MSTORE"
        },
        "4589": {
            "op": "PUSH1",
            "value": "0x64"
        },
        "4591": {
            "op": "ADD"
        },
        "4592": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9260,
                9379
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x7BA"
        },
        "4595": {
            "op": "JUMP"
        },
        "4596": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9260,
                9379
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "4597": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9460,
                9469
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x12"
        },
        "4599": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9460,
                9469
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "4600": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9411,
                9432
            ],
            "op": "SELFBALANCE",
            "path": "4"
        },
        "4601": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9411,
                9432
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "4602": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9460,
                9469
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0xFF"
        },
        "4604": {
            "branch": 99,
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9460,
                9469
            ],
            "op": "AND",
            "path": "4"
        },
        "4605": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9442,
                9938
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1305"
        },
        "4608": {
            "branch": 99,
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9442,
                9938
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "4609": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9564,
                9573
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "4611": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9575,
                9592
            ],
            "op": "DUP1",
            "path": "4"
        },
        "4612": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9596,
                9603
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1215"
        },
        "4615": {
            "fn": "Ownable.owner",
            "offset": [
                1247,
                1254
            ],
            "op": "PUSH1",
            "path": "0",
            "value": "0x0"
        },
        "4617": {
            "fn": "Ownable.owner",
            "offset": [
                1273,
                1279
            ],
            "op": "SLOAD",
            "path": "0"
        },
        "4618": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "4620": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "4622": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "4624": {
            "op": "SHL"
        },
        "4625": {
            "op": "SUB"
        },
        "4626": {
            "fn": "Ownable.owner",
            "offset": [
                1273,
                1279
            ],
            "op": "AND",
            "path": "0"
        },
        "4627": {
            "fn": "Ownable.owner",
            "offset": [
                1273,
                1279
            ],
            "op": "SWAP1",
            "path": "0"
        },
        "4628": {
            "fn": "Ownable.owner",
            "offset": [
                1201,
                1286
            ],
            "op": "JUMP",
            "path": "0"
        },
        "4629": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9596,
                9603
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "4630": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "4632": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "4634": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "4636": {
            "op": "SHL"
        },
        "4637": {
            "op": "SUB"
        },
        "4638": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9596,
                9608
            ],
            "op": "AND",
            "path": "4"
        },
        "4639": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9664,
                9667
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x64"
        },
        "4641": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9648,
                9660
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0xA"
        },
        "4643": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9648,
                9660
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "4644": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9634,
                9645
            ],
            "op": "DUP6",
            "path": "4"
        },
        "4645": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9634,
                9660
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x122E"
        },
        "4648": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9634,
                9660
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "4649": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9634,
                9660
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "4650": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9634,
                9660
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1B60"
        },
        "4653": {
            "fn": "MyLottery.sendPrizes",
            "jump": "i",
            "offset": [
                9634,
                9660
            ],
            "op": "JUMP",
            "path": "4"
        },
        "4654": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9634,
                9660
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "4655": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9633,
                9667
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1238"
        },
        "4658": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9633,
                9667
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "4659": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9633,
                9667
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "4660": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9633,
                9667
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1AF9"
        },
        "4663": {
            "fn": "MyLottery.sendPrizes",
            "jump": "i",
            "offset": [
                9633,
                9667
            ],
            "op": "JUMP",
            "path": "4"
        },
        "4664": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9633,
                9667
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "4665": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9596,
                9685
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "4667": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9596,
                9685
            ],
            "op": "MLOAD",
            "path": "4"
        },
        "4668": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9596,
                9685
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "4670": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9596,
                9685
            ],
            "op": "DUP2",
            "path": "4"
        },
        "4671": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9596,
                9685
            ],
            "op": "DUP2",
            "path": "4"
        },
        "4672": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9596,
                9685
            ],
            "op": "DUP2",
            "path": "4"
        },
        "4673": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9596,
                9685
            ],
            "op": "DUP6",
            "path": "4"
        },
        "4674": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9596,
                9685
            ],
            "op": "DUP8",
            "path": "4"
        },
        "4675": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9596,
                9685
            ],
            "op": "GAS",
            "path": "4"
        },
        "4676": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9596,
                9685
            ],
            "op": "CALL",
            "path": "4"
        },
        "4677": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9596,
                9685
            ],
            "op": "SWAP3",
            "path": "4"
        },
        "4678": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9596,
                9685
            ],
            "op": "POP",
            "path": "4"
        },
        "4679": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9596,
                9685
            ],
            "op": "POP",
            "path": "4"
        },
        "4680": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9596,
                9685
            ],
            "op": "POP",
            "path": "4"
        },
        "4681": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9596,
                9685
            ],
            "op": "RETURNDATASIZE",
            "path": "4"
        },
        "4682": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9596,
                9685
            ],
            "op": "DUP1",
            "path": "4"
        },
        "4683": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9596,
                9685
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "4685": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9596,
                9685
            ],
            "op": "DUP2",
            "path": "4"
        },
        "4686": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9596,
                9685
            ],
            "op": "EQ",
            "path": "4"
        },
        "4687": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9596,
                9685
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1274"
        },
        "4690": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9596,
                9685
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "4691": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9596,
                9685
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "4693": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9596,
                9685
            ],
            "op": "MLOAD",
            "path": "4"
        },
        "4694": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9596,
                9685
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "4695": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9596,
                9685
            ],
            "op": "POP",
            "path": "4"
        },
        "4696": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9596,
                9685
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x1F"
        },
        "4698": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9596,
                9685
            ],
            "op": "NOT",
            "path": "4"
        },
        "4699": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9596,
                9685
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x3F"
        },
        "4701": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9596,
                9685
            ],
            "op": "RETURNDATASIZE",
            "path": "4"
        },
        "4702": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9596,
                9685
            ],
            "op": "ADD",
            "path": "4"
        },
        "4703": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9596,
                9685
            ],
            "op": "AND",
            "path": "4"
        },
        "4704": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9596,
                9685
            ],
            "op": "DUP3",
            "path": "4"
        },
        "4705": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9596,
                9685
            ],
            "op": "ADD",
            "path": "4"
        },
        "4706": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9596,
                9685
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "4708": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9596,
                9685
            ],
            "op": "MSTORE",
            "path": "4"
        },
        "4709": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9596,
                9685
            ],
            "op": "RETURNDATASIZE",
            "path": "4"
        },
        "4710": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9596,
                9685
            ],
            "op": "DUP3",
            "path": "4"
        },
        "4711": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9596,
                9685
            ],
            "op": "MSTORE",
            "path": "4"
        },
        "4712": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9596,
                9685
            ],
            "op": "RETURNDATASIZE",
            "path": "4"
        },
        "4713": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9596,
                9685
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "4715": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9596,
                9685
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x20"
        },
        "4717": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9596,
                9685
            ],
            "op": "DUP5",
            "path": "4"
        },
        "4718": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9596,
                9685
            ],
            "op": "ADD",
            "path": "4"
        },
        "4719": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9596,
                9685
            ],
            "op": "RETURNDATACOPY",
            "path": "4"
        },
        "4720": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9596,
                9685
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1279"
        },
        "4723": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9596,
                9685
            ],
            "op": "JUMP",
            "path": "4"
        },
        "4724": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9596,
                9685
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "4725": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9596,
                9685
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x60"
        },
        "4727": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9596,
                9685
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "4728": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9596,
                9685
            ],
            "op": "POP",
            "path": "4"
        },
        "4729": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9596,
                9685
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "4730": {
            "op": "POP"
        },
        "4731": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9699,
                9708
            ],
            "op": "PUSH1",
            "path": "4",
            "statement": 53,
            "value": "0x12"
        },
        "4733": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9699,
                9715
            ],
            "op": "DUP1",
            "path": "4"
        },
        "4734": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9699,
                9715
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "4735": {
            "op": "PUSH1",
            "value": "0xFF"
        },
        "4737": {
            "op": "NOT"
        },
        "4738": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9699,
                9715
            ],
            "op": "AND",
            "path": "4"
        },
        "4739": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9699,
                9715
            ],
            "op": "DUP4",
            "path": "4"
        },
        "4740": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9699,
                9715
            ],
            "op": "ISZERO",
            "path": "4"
        },
        "4741": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9699,
                9715
            ],
            "op": "ISZERO",
            "path": "4"
        },
        "4742": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9699,
                9715
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "4743": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9699,
                9715
            ],
            "op": "DUP2",
            "path": "4"
        },
        "4744": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9699,
                9715
            ],
            "op": "OR",
            "path": "4"
        },
        "4745": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9699,
                9715
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "4746": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9699,
                9715
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "4747": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9699,
                9715
            ],
            "op": "SSTORE",
            "path": "4"
        },
        "4748": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9699,
                9715
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "4749": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9699,
                9715
            ],
            "op": "SWAP4",
            "path": "4"
        },
        "4750": {
            "op": "POP"
        },
        "4751": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9563,
                9685
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "4752": {
            "op": "POP"
        },
        "4753": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9699,
                9715
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0xFF"
        },
        "4755": {
            "branch": 100,
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9734,
                9743
            ],
            "op": "AND",
            "path": "4"
        },
        "4756": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9729,
                9928
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1302"
        },
        "4759": {
            "branch": 100,
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9729,
                9928
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "4760": {
            "fn": "Ownable.owner",
            "offset": [
                1247,
                1254
            ],
            "op": "PUSH1",
            "path": "0",
            "value": "0x0"
        },
        "4762": {
            "fn": "Ownable.owner",
            "offset": [
                1273,
                1279
            ],
            "op": "SLOAD",
            "path": "0"
        },
        "4763": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "4765": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "4767": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "4769": {
            "op": "SHL"
        },
        "4770": {
            "op": "SUB"
        },
        "4771": {
            "fn": "Ownable.owner",
            "offset": [
                1273,
                1279
            ],
            "op": "AND",
            "path": "0"
        },
        "4772": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "4774": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "4776": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "4778": {
            "op": "SHL"
        },
        "4779": {
            "op": "SUB"
        },
        "4780": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9768,
                9887
            ],
            "op": "AND",
            "path": "4",
            "statement": 54
        },
        "4781": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9768,
                9887
            ],
            "op": "PUSH32",
            "path": "4",
            "value": "0x7A4C4FDF5D3172470D96D64C965B30DE694852175EFC7A6B546FB3BDBF76D178"
        },
        "4814": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9866,
                9869
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x64"
        },
        "4816": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9850,
                9862
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0xA"
        },
        "4818": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9850,
                9862
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "4819": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9836,
                9847
            ],
            "op": "DUP7",
            "path": "4"
        },
        "4820": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9836,
                9862
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x12DD"
        },
        "4823": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9836,
                9862
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "4824": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9836,
                9862
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "4825": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9836,
                9862
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1B60"
        },
        "4828": {
            "fn": "MyLottery.sendPrizes",
            "jump": "i",
            "offset": [
                9836,
                9862
            ],
            "op": "JUMP",
            "path": "4"
        },
        "4829": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9836,
                9862
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "4830": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9835,
                9869
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x12E7"
        },
        "4833": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9835,
                9869
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "4834": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9835,
                9869
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "4835": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9835,
                9869
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1AF9"
        },
        "4838": {
            "fn": "MyLottery.sendPrizes",
            "jump": "i",
            "offset": [
                9835,
                9869
            ],
            "op": "JUMP",
            "path": "4"
        },
        "4839": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9835,
                9869
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "4840": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9768,
                9887
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "4842": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9768,
                9887
            ],
            "op": "MLOAD",
            "path": "4"
        },
        "4843": {
            "op": "SWAP1"
        },
        "4844": {
            "op": "DUP2"
        },
        "4845": {
            "op": "MSTORE"
        },
        "4846": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "4848": {
            "op": "ADD"
        },
        "4849": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9768,
                9887
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "4851": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9768,
                9887
            ],
            "op": "MLOAD",
            "path": "4"
        },
        "4852": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9768,
                9887
            ],
            "op": "DUP1",
            "path": "4"
        },
        "4853": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9768,
                9887
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "4854": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9768,
                9887
            ],
            "op": "SUB",
            "path": "4"
        },
        "4855": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9768,
                9887
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "4856": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9768,
                9887
            ],
            "op": "LOG2",
            "path": "4"
        },
        "4857": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9912,
                9913
            ],
            "op": "PUSH1",
            "path": "4",
            "statement": 55,
            "value": "0x1"
        },
        "4859": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9905,
                9913
            ],
            "op": "SWAP4",
            "path": "4"
        },
        "4860": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9905,
                9913
            ],
            "op": "POP",
            "path": "4"
        },
        "4861": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9905,
                9913
            ],
            "op": "POP",
            "path": "4"
        },
        "4862": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9905,
                9913
            ],
            "op": "POP",
            "path": "4"
        },
        "4863": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9905,
                9913
            ],
            "op": "POP",
            "path": "4"
        },
        "4864": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9201,
                10277
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "4865": {
            "fn": "MyLottery.sendPrizes",
            "jump": "o",
            "offset": [
                9201,
                10277
            ],
            "op": "JUMP",
            "path": "4"
        },
        "4866": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9729,
                9928
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "4867": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9549,
                9938
            ],
            "op": "POP",
            "path": "4"
        },
        "4868": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9549,
                9938
            ],
            "op": "POP",
            "path": "4"
        },
        "4869": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9442,
                9938
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "4870": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9981,
                9993
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x3"
        },
        "4872": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9981,
                9993
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "4873": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                10034,
                10046
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x9"
        },
        "4875": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                10034,
                10046
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "4876": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9949,
                9958
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "4878": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9949,
                9958
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "4879": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9949,
                9958
            ],
            "op": "DUP3",
            "path": "4"
        },
        "4880": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9949,
                9958
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "4881": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "4883": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "4885": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "4887": {
            "op": "SHL"
        },
        "4888": {
            "op": "SUB"
        },
        "4889": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9981,
                9993
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "4890": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9981,
                9993
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "4891": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9981,
                9993
            ],
            "op": "AND",
            "path": "4"
        },
        "4892": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9981,
                9993
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "4893": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                10050,
                10053
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x64"
        },
        "4895": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                10050,
                10053
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "4896": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                10020,
                10046
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1329"
        },
        "4899": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                10020,
                10046
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "4900": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                10020,
                10031
            ],
            "op": "DUP7",
            "path": "4"
        },
        "4901": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                10020,
                10046
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1B60"
        },
        "4904": {
            "fn": "MyLottery.sendPrizes",
            "jump": "i",
            "offset": [
                10020,
                10046
            ],
            "op": "JUMP",
            "path": "4"
        },
        "4905": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                10020,
                10046
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "4906": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                10019,
                10053
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1333"
        },
        "4909": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                10019,
                10053
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "4910": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                10019,
                10053
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "4911": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                10019,
                10053
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1AF9"
        },
        "4914": {
            "fn": "MyLottery.sendPrizes",
            "jump": "i",
            "offset": [
                10019,
                10053
            ],
            "op": "JUMP",
            "path": "4"
        },
        "4915": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                10019,
                10053
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "4916": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9981,
                10067
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "4918": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9981,
                10067
            ],
            "op": "MLOAD",
            "path": "4"
        },
        "4919": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9981,
                10067
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "4921": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9981,
                10067
            ],
            "op": "DUP2",
            "path": "4"
        },
        "4922": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9981,
                10067
            ],
            "op": "DUP2",
            "path": "4"
        },
        "4923": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9981,
                10067
            ],
            "op": "DUP2",
            "path": "4"
        },
        "4924": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9981,
                10067
            ],
            "op": "DUP6",
            "path": "4"
        },
        "4925": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9981,
                10067
            ],
            "op": "DUP8",
            "path": "4"
        },
        "4926": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9981,
                10067
            ],
            "op": "GAS",
            "path": "4"
        },
        "4927": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9981,
                10067
            ],
            "op": "CALL",
            "path": "4"
        },
        "4928": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9981,
                10067
            ],
            "op": "SWAP3",
            "path": "4"
        },
        "4929": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9981,
                10067
            ],
            "op": "POP",
            "path": "4"
        },
        "4930": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9981,
                10067
            ],
            "op": "POP",
            "path": "4"
        },
        "4931": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9981,
                10067
            ],
            "op": "POP",
            "path": "4"
        },
        "4932": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9981,
                10067
            ],
            "op": "RETURNDATASIZE",
            "path": "4"
        },
        "4933": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9981,
                10067
            ],
            "op": "DUP1",
            "path": "4"
        },
        "4934": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9981,
                10067
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "4936": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9981,
                10067
            ],
            "op": "DUP2",
            "path": "4"
        },
        "4937": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9981,
                10067
            ],
            "op": "EQ",
            "path": "4"
        },
        "4938": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9981,
                10067
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x136F"
        },
        "4941": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9981,
                10067
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "4942": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9981,
                10067
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "4944": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9981,
                10067
            ],
            "op": "MLOAD",
            "path": "4"
        },
        "4945": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9981,
                10067
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "4946": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9981,
                10067
            ],
            "op": "POP",
            "path": "4"
        },
        "4947": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9981,
                10067
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x1F"
        },
        "4949": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9981,
                10067
            ],
            "op": "NOT",
            "path": "4"
        },
        "4950": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9981,
                10067
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x3F"
        },
        "4952": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9981,
                10067
            ],
            "op": "RETURNDATASIZE",
            "path": "4"
        },
        "4953": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9981,
                10067
            ],
            "op": "ADD",
            "path": "4"
        },
        "4954": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9981,
                10067
            ],
            "op": "AND",
            "path": "4"
        },
        "4955": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9981,
                10067
            ],
            "op": "DUP3",
            "path": "4"
        },
        "4956": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9981,
                10067
            ],
            "op": "ADD",
            "path": "4"
        },
        "4957": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9981,
                10067
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "4959": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9981,
                10067
            ],
            "op": "MSTORE",
            "path": "4"
        },
        "4960": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9981,
                10067
            ],
            "op": "RETURNDATASIZE",
            "path": "4"
        },
        "4961": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9981,
                10067
            ],
            "op": "DUP3",
            "path": "4"
        },
        "4962": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9981,
                10067
            ],
            "op": "MSTORE",
            "path": "4"
        },
        "4963": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9981,
                10067
            ],
            "op": "RETURNDATASIZE",
            "path": "4"
        },
        "4964": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9981,
                10067
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "4966": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9981,
                10067
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x20"
        },
        "4968": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9981,
                10067
            ],
            "op": "DUP5",
            "path": "4"
        },
        "4969": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9981,
                10067
            ],
            "op": "ADD",
            "path": "4"
        },
        "4970": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9981,
                10067
            ],
            "op": "RETURNDATACOPY",
            "path": "4"
        },
        "4971": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9981,
                10067
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1374"
        },
        "4974": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9981,
                10067
            ],
            "op": "JUMP",
            "path": "4"
        },
        "4975": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9981,
                10067
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "4976": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9981,
                10067
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x60"
        },
        "4978": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9981,
                10067
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "4979": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9981,
                10067
            ],
            "op": "POP",
            "path": "4"
        },
        "4980": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9981,
                10067
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "4981": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9981,
                10067
            ],
            "op": "POP",
            "path": "4"
        },
        "4982": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9948,
                10067
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "4983": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9948,
                10067
            ],
            "op": "POP",
            "path": "4"
        },
        "4984": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9948,
                10067
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "4985": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9948,
                10067
            ],
            "op": "POP",
            "path": "4"
        },
        "4986": {
            "branch": 101,
            "fn": "MyLottery.sendPrizes",
            "offset": [
                10082,
                10086
            ],
            "op": "DUP2",
            "path": "4"
        },
        "4987": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                10077,
                10253
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x13BF"
        },
        "4990": {
            "branch": 101,
            "fn": "MyLottery.sendPrizes",
            "offset": [
                10077,
                10253
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "4991": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                10142,
                10154
            ],
            "op": "PUSH1",
            "path": "4",
            "statement": 56,
            "value": "0x3"
        },
        "4993": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                10142,
                10154
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "4994": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                10187,
                10199
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x9"
        },
        "4996": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                10187,
                10199
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "4997": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "4999": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "5001": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "5003": {
            "op": "SHL"
        },
        "5004": {
            "op": "SUB"
        },
        "5005": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                10142,
                10154
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "5006": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                10142,
                10154
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "5007": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                10142,
                10154
            ],
            "op": "AND",
            "path": "4"
        },
        "5008": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                10142,
                10154
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "5009": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                10107,
                10220
            ],
            "op": "PUSH32",
            "path": "4",
            "value": "0x977E2C32BE07C8AA27BFE58F2BF200E11ECA859B94D36E76E645FCAF1D4CC946"
        },
        "5042": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                10107,
                10220
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "5043": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                10203,
                10206
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x64"
        },
        "5045": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                10203,
                10206
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "5046": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                10173,
                10199
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x12DD"
        },
        "5049": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                10173,
                10199
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "5050": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                10173,
                10184
            ],
            "op": "DUP8",
            "path": "4"
        },
        "5051": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                10173,
                10199
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1B60"
        },
        "5054": {
            "fn": "MyLottery.sendPrizes",
            "jump": "i",
            "offset": [
                10173,
                10199
            ],
            "op": "JUMP",
            "path": "4"
        },
        "5055": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                10077,
                10253
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "5056": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                10269,
                10270
            ],
            "op": "PUSH1",
            "path": "4",
            "statement": 57,
            "value": "0x0"
        },
        "5058": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                10262,
                10270
            ],
            "op": "SWAP4",
            "path": "4"
        },
        "5059": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                10262,
                10270
            ],
            "op": "POP",
            "path": "4"
        },
        "5060": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                10262,
                10270
            ],
            "op": "POP",
            "path": "4"
        },
        "5061": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                10262,
                10270
            ],
            "op": "POP",
            "path": "4"
        },
        "5062": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                10262,
                10270
            ],
            "op": "POP",
            "path": "4"
        },
        "5063": {
            "fn": "MyLottery.sendPrizes",
            "offset": [
                9201,
                10277
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "5064": {
            "fn": "MyLottery.sendPrizes",
            "jump": "o",
            "offset": [
                9201,
                10277
            ],
            "op": "JUMP",
            "path": "4"
        },
        "5065": {
            "fn": "Ownable._transferOwnership",
            "offset": [
                2433,
                2620
            ],
            "op": "JUMPDEST",
            "path": "0"
        },
        "5066": {
            "fn": "Ownable._transferOwnership",
            "offset": [
                2506,
                2522
            ],
            "op": "PUSH1",
            "path": "0",
            "value": "0x0"
        },
        "5068": {
            "fn": "Ownable._transferOwnership",
            "offset": [
                2525,
                2531
            ],
            "op": "DUP1",
            "path": "0"
        },
        "5069": {
            "fn": "Ownable._transferOwnership",
            "offset": [
                2525,
                2531
            ],
            "op": "SLOAD",
            "path": "0"
        },
        "5070": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "5072": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "5074": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "5076": {
            "op": "SHL"
        },
        "5077": {
            "op": "SUB"
        },
        "5078": {
            "fn": "Ownable._transferOwnership",
            "offset": [
                2541,
                2558
            ],
            "op": "DUP4",
            "path": "0",
            "statement": 58
        },
        "5079": {
            "fn": "Ownable._transferOwnership",
            "offset": [
                2541,
                2558
            ],
            "op": "DUP2",
            "path": "0"
        },
        "5080": {
            "fn": "Ownable._transferOwnership",
            "offset": [
                2541,
                2558
            ],
            "op": "AND",
            "path": "0"
        },
        "5081": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "5083": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "5085": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "5087": {
            "op": "SHL"
        },
        "5088": {
            "op": "SUB"
        },
        "5089": {
            "op": "NOT"
        },
        "5090": {
            "fn": "Ownable._transferOwnership",
            "offset": [
                2541,
                2558
            ],
            "op": "DUP4",
            "path": "0"
        },
        "5091": {
            "fn": "Ownable._transferOwnership",
            "offset": [
                2541,
                2558
            ],
            "op": "AND",
            "path": "0"
        },
        "5092": {
            "fn": "Ownable._transferOwnership",
            "offset": [
                2541,
                2558
            ],
            "op": "DUP2",
            "path": "0"
        },
        "5093": {
            "fn": "Ownable._transferOwnership",
            "offset": [
                2541,
                2558
            ],
            "op": "OR",
            "path": "0"
        },
        "5094": {
            "fn": "Ownable._transferOwnership",
            "offset": [
                2541,
                2558
            ],
            "op": "DUP5",
            "path": "0"
        },
        "5095": {
            "fn": "Ownable._transferOwnership",
            "offset": [
                2541,
                2558
            ],
            "op": "SSTORE",
            "path": "0"
        },
        "5096": {
            "fn": "Ownable._transferOwnership",
            "offset": [
                2573,
                2613
            ],
            "op": "PUSH1",
            "path": "0",
            "statement": 59,
            "value": "0x40"
        },
        "5098": {
            "fn": "Ownable._transferOwnership",
            "offset": [
                2573,
                2613
            ],
            "op": "MLOAD",
            "path": "0"
        },
        "5099": {
            "fn": "Ownable._transferOwnership",
            "offset": [
                2525,
                2531
            ],
            "op": "SWAP2",
            "path": "0"
        },
        "5100": {
            "fn": "Ownable._transferOwnership",
            "offset": [
                2525,
                2531
            ],
            "op": "SWAP1",
            "path": "0"
        },
        "5101": {
            "fn": "Ownable._transferOwnership",
            "offset": [
                2525,
                2531
            ],
            "op": "SWAP3",
            "path": "0"
        },
        "5102": {
            "fn": "Ownable._transferOwnership",
            "offset": [
                2525,
                2531
            ],
            "op": "AND",
            "path": "0"
        },
        "5103": {
            "fn": "Ownable._transferOwnership",
            "offset": [
                2525,
                2531
            ],
            "op": "SWAP3",
            "path": "0"
        },
        "5104": {
            "fn": "Ownable._transferOwnership",
            "offset": [
                2525,
                2531
            ],
            "op": "DUP4",
            "path": "0"
        },
        "5105": {
            "fn": "Ownable._transferOwnership",
            "offset": [
                2525,
                2531
            ],
            "op": "SWAP2",
            "path": "0"
        },
        "5106": {
            "fn": "Ownable._transferOwnership",
            "offset": [
                2573,
                2613
            ],
            "op": "PUSH32",
            "path": "0",
            "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
        },
        "5139": {
            "fn": "Ownable._transferOwnership",
            "offset": [
                2573,
                2613
            ],
            "op": "SWAP2",
            "path": "0"
        },
        "5140": {
            "fn": "Ownable._transferOwnership",
            "offset": [
                2506,
                2522
            ],
            "op": "SWAP1",
            "path": "0"
        },
        "5141": {
            "fn": "Ownable._transferOwnership",
            "offset": [
                2573,
                2613
            ],
            "op": "LOG3",
            "path": "0"
        },
        "5142": {
            "fn": "Ownable._transferOwnership",
            "offset": [
                2496,
                2620
            ],
            "op": "POP",
            "path": "0"
        },
        "5143": {
            "fn": "Ownable._transferOwnership",
            "offset": [
                2433,
                2620
            ],
            "op": "POP",
            "path": "0"
        },
        "5144": {
            "fn": "Ownable._transferOwnership",
            "jump": "o",
            "offset": [
                2433,
                2620
            ],
            "op": "JUMP",
            "path": "0"
        },
        "5145": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                10787,
                11323
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "5146": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                10845,
                10852
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "5148": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                10840,
                11293
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "5149": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                10862,
                10869
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x2"
        },
        "5151": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                10862,
                10876
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "5152": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                10858,
                10876
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0xFF"
        },
        "5154": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                10858,
                10876
            ],
            "op": "DUP3",
            "path": "4"
        },
        "5155": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                10858,
                10876
            ],
            "op": "AND",
            "path": "4"
        },
        "5156": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                10858,
                10876
            ],
            "op": "LT",
            "path": "4"
        },
        "5157": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                10840,
                11293
            ],
            "op": "ISZERO",
            "path": "4"
        },
        "5158": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                10840,
                11293
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1571"
        },
        "5161": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                10840,
                11293
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "5162": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                10977,
                10986
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "5164": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                10988,
                11005
            ],
            "op": "DUP1",
            "path": "4"
        },
        "5165": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11016
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x2"
        },
        "5167": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11017,
                11018
            ],
            "op": "DUP4",
            "path": "4"
        },
        "5168": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11019
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0xFF"
        },
        "5170": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11019
            ],
            "op": "AND",
            "path": "4"
        },
        "5171": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11019
            ],
            "op": "DUP2",
            "path": "4"
        },
        "5172": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11019
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "5173": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11019
            ],
            "op": "DUP2",
            "path": "4"
        },
        "5174": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11019
            ],
            "op": "LT",
            "path": "4"
        },
        "5175": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11019
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1442"
        },
        "5178": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11019
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "5179": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11019
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1442"
        },
        "5182": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11019
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1B4A"
        },
        "5185": {
            "fn": "MyLottery.not_enough_participant",
            "jump": "i",
            "offset": [
                11009,
                11019
            ],
            "op": "JUMP",
            "path": "4"
        },
        "5186": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11019
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "5187": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11019
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "5189": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11019
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "5190": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11019
            ],
            "op": "DUP3",
            "path": "4"
        },
        "5191": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11019
            ],
            "op": "MSTORE",
            "path": "4"
        },
        "5192": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11019
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x20"
        },
        "5194": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11019
            ],
            "op": "DUP3",
            "path": "4"
        },
        "5195": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11019
            ],
            "op": "KECCAK256",
            "path": "4"
        },
        "5196": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11019
            ],
            "op": "ADD",
            "path": "4"
        },
        "5197": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11019
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "5198": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11032,
                11040
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x7"
        },
        "5200": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11032,
                11040
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "5201": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11075
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "5203": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11075
            ],
            "op": "MLOAD",
            "path": "4"
        },
        "5204": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "5206": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "5208": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "5210": {
            "op": "SHL"
        },
        "5211": {
            "op": "SUB"
        },
        "5212": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11019
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "5213": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11019
            ],
            "op": "SWAP3",
            "path": "4"
        },
        "5214": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11019
            ],
            "op": "AND",
            "path": "4"
        },
        "5215": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11019
            ],
            "op": "SWAP3",
            "path": "4"
        },
        "5216": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11032,
                11040
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "5217": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11032,
                11040
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "5218": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11075
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "5219": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11075
            ],
            "op": "DUP2",
            "path": "4"
        },
        "5220": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11019
            ],
            "op": "DUP2",
            "path": "4"
        },
        "5221": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11075
            ],
            "op": "DUP2",
            "path": "4"
        },
        "5222": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11032,
                11040
            ],
            "op": "DUP6",
            "path": "4"
        },
        "5223": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11019
            ],
            "op": "DUP8",
            "path": "4"
        },
        "5224": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11075
            ],
            "op": "GAS",
            "path": "4"
        },
        "5225": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11075
            ],
            "op": "CALL",
            "path": "4"
        },
        "5226": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11075
            ],
            "op": "SWAP3",
            "path": "4"
        },
        "5227": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11075
            ],
            "op": "POP",
            "path": "4"
        },
        "5228": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11075
            ],
            "op": "POP",
            "path": "4"
        },
        "5229": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11075
            ],
            "op": "POP",
            "path": "4"
        },
        "5230": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11075
            ],
            "op": "RETURNDATASIZE",
            "path": "4"
        },
        "5231": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11075
            ],
            "op": "DUP1",
            "path": "4"
        },
        "5232": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11075
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "5234": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11075
            ],
            "op": "DUP2",
            "path": "4"
        },
        "5235": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11075
            ],
            "op": "EQ",
            "path": "4"
        },
        "5236": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11075
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1499"
        },
        "5239": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11075
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "5240": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11075
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "5242": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11075
            ],
            "op": "MLOAD",
            "path": "4"
        },
        "5243": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11075
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "5244": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11075
            ],
            "op": "POP",
            "path": "4"
        },
        "5245": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11075
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x1F"
        },
        "5247": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11075
            ],
            "op": "NOT",
            "path": "4"
        },
        "5248": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11075
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x3F"
        },
        "5250": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11075
            ],
            "op": "RETURNDATASIZE",
            "path": "4"
        },
        "5251": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11075
            ],
            "op": "ADD",
            "path": "4"
        },
        "5252": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11075
            ],
            "op": "AND",
            "path": "4"
        },
        "5253": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11075
            ],
            "op": "DUP3",
            "path": "4"
        },
        "5254": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11075
            ],
            "op": "ADD",
            "path": "4"
        },
        "5255": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11075
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "5257": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11075
            ],
            "op": "MSTORE",
            "path": "4"
        },
        "5258": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11075
            ],
            "op": "RETURNDATASIZE",
            "path": "4"
        },
        "5259": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11075
            ],
            "op": "DUP3",
            "path": "4"
        },
        "5260": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11075
            ],
            "op": "MSTORE",
            "path": "4"
        },
        "5261": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11075
            ],
            "op": "RETURNDATASIZE",
            "path": "4"
        },
        "5262": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11075
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "5264": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11075
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x20"
        },
        "5266": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11075
            ],
            "op": "DUP5",
            "path": "4"
        },
        "5267": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11075
            ],
            "op": "ADD",
            "path": "4"
        },
        "5268": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11075
            ],
            "op": "RETURNDATACOPY",
            "path": "4"
        },
        "5269": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11075
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x149E"
        },
        "5272": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11075
            ],
            "op": "JUMP",
            "path": "4"
        },
        "5273": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11075
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "5274": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11075
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x60"
        },
        "5276": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11075
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "5277": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11075
            ],
            "op": "POP",
            "path": "4"
        },
        "5278": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11075
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "5279": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11009,
                11075
            ],
            "op": "POP",
            "path": "4"
        },
        "5280": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                10976,
                11075
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "5281": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                10976,
                11075
            ],
            "op": "POP",
            "path": "4"
        },
        "5282": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                10976,
                11075
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "5283": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                10976,
                11075
            ],
            "op": "POP",
            "path": "4"
        },
        "5284": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11117,
                11122
            ],
            "op": "PUSH1",
            "path": "4",
            "statement": 60,
            "value": "0x0"
        },
        "5286": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11089,
                11102
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x8"
        },
        "5288": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11089,
                11114
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "5290": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11103,
                11110
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x2"
        },
        "5292": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11111,
                11112
            ],
            "op": "DUP7",
            "path": "4"
        },
        "5293": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11103,
                11113
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0xFF"
        },
        "5295": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11103,
                11113
            ],
            "op": "AND",
            "path": "4"
        },
        "5296": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11103,
                11113
            ],
            "op": "DUP2",
            "path": "4"
        },
        "5297": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11103,
                11113
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "5298": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11103,
                11113
            ],
            "op": "DUP2",
            "path": "4"
        },
        "5299": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11103,
                11113
            ],
            "op": "LT",
            "path": "4"
        },
        "5300": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11103,
                11113
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x14BF"
        },
        "5303": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11103,
                11113
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "5304": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11103,
                11113
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x14BF"
        },
        "5307": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11103,
                11113
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1B4A"
        },
        "5310": {
            "fn": "MyLottery.not_enough_participant",
            "jump": "i",
            "offset": [
                11103,
                11113
            ],
            "op": "JUMP",
            "path": "4"
        },
        "5311": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11103,
                11113
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "5312": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11103,
                11113
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "5314": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11103,
                11113
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "5315": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11103,
                11113
            ],
            "op": "DUP3",
            "path": "4"
        },
        "5316": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11103,
                11113
            ],
            "op": "MSTORE",
            "path": "4"
        },
        "5317": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11103,
                11113
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x20"
        },
        "5319": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11103,
                11113
            ],
            "op": "DUP1",
            "path": "4"
        },
        "5320": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11103,
                11113
            ],
            "op": "DUP4",
            "path": "4"
        },
        "5321": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11103,
                11113
            ],
            "op": "KECCAK256",
            "path": "4"
        },
        "5322": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11103,
                11113
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "5323": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11103,
                11113
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "5324": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11103,
                11113
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "5325": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11103,
                11113
            ],
            "op": "ADD",
            "path": "4"
        },
        "5326": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11103,
                11113
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "5327": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "5329": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "5331": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "5333": {
            "op": "SHL"
        },
        "5334": {
            "op": "SUB"
        },
        "5335": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11103,
                11113
            ],
            "op": "AND",
            "path": "4"
        },
        "5336": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11089,
                11114
            ],
            "op": "DUP4",
            "path": "4"
        },
        "5337": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11089,
                11114
            ],
            "op": "MSTORE",
            "path": "4"
        },
        "5338": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11089,
                11114
            ],
            "op": "DUP3",
            "path": "4"
        },
        "5339": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11089,
                11114
            ],
            "op": "ADD",
            "path": "4"
        },
        "5340": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11089,
                11114
            ],
            "op": "SWAP3",
            "path": "4"
        },
        "5341": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11089,
                11114
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "5342": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11089,
                11114
            ],
            "op": "SWAP3",
            "path": "4"
        },
        "5343": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11089,
                11114
            ],
            "op": "MSTORE",
            "path": "4"
        },
        "5344": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11089,
                11114
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "5346": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11089,
                11114
            ],
            "op": "ADD",
            "path": "4"
        },
        "5347": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11089,
                11114
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "5348": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11089,
                11114
            ],
            "op": "KECCAK256",
            "path": "4"
        },
        "5349": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11089,
                11122
            ],
            "op": "DUP1",
            "path": "4"
        },
        "5350": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11089,
                11122
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "5351": {
            "op": "PUSH1",
            "value": "0xFF"
        },
        "5353": {
            "op": "NOT"
        },
        "5354": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11089,
                11122
            ],
            "op": "AND",
            "path": "4"
        },
        "5355": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11089,
                11122
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "5356": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11089,
                11122
            ],
            "op": "ISZERO",
            "path": "4"
        },
        "5357": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11089,
                11122
            ],
            "op": "ISZERO",
            "path": "4"
        },
        "5358": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11089,
                11122
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "5359": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11089,
                11122
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "5360": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11089,
                11122
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "5361": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11089,
                11122
            ],
            "op": "OR",
            "path": "4"
        },
        "5362": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11089,
                11122
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "5363": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11089,
                11122
            ],
            "op": "SSTORE",
            "path": "4"
        },
        "5364": {
            "branch": 102,
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11194,
                11198
            ],
            "op": "DUP2",
            "path": "4"
        },
        "5365": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11189,
                11283
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x155C"
        },
        "5368": {
            "branch": 102,
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11189,
                11283
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "5369": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11247,
                11254
            ],
            "op": "PUSH1",
            "path": "4",
            "statement": 61,
            "value": "0x2"
        },
        "5371": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11255,
                11256
            ],
            "op": "DUP4",
            "path": "4"
        },
        "5372": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11247,
                11257
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0xFF"
        },
        "5374": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11247,
                11257
            ],
            "op": "AND",
            "path": "4"
        },
        "5375": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11247,
                11257
            ],
            "op": "DUP2",
            "path": "4"
        },
        "5376": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11247,
                11257
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "5377": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11247,
                11257
            ],
            "op": "DUP2",
            "path": "4"
        },
        "5378": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11247,
                11257
            ],
            "op": "LT",
            "path": "4"
        },
        "5379": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11247,
                11257
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x150E"
        },
        "5382": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11247,
                11257
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "5383": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11247,
                11257
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x150E"
        },
        "5386": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11247,
                11257
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1B4A"
        },
        "5389": {
            "fn": "MyLottery.not_enough_participant",
            "jump": "i",
            "offset": [
                11247,
                11257
            ],
            "op": "JUMP",
            "path": "4"
        },
        "5390": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11247,
                11257
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "5391": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11247,
                11257
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "5393": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11247,
                11257
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "5394": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11247,
                11257
            ],
            "op": "DUP3",
            "path": "4"
        },
        "5395": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11247,
                11257
            ],
            "op": "MSTORE",
            "path": "4"
        },
        "5396": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11247,
                11257
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x20"
        },
        "5398": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11247,
                11257
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "5399": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11247,
                11257
            ],
            "op": "DUP3",
            "path": "4"
        },
        "5400": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11247,
                11257
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "5401": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11247,
                11257
            ],
            "op": "KECCAK256",
            "path": "4"
        },
        "5402": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11247,
                11257
            ],
            "op": "ADD",
            "path": "4"
        },
        "5403": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11247,
                11257
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "5404": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11259,
                11267
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x7"
        },
        "5406": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11259,
                11267
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "5407": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11223,
                11268
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "5409": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11223,
                11268
            ],
            "op": "MLOAD",
            "path": "4"
        },
        "5410": {
            "op": "SWAP1"
        },
        "5411": {
            "op": "DUP2"
        },
        "5412": {
            "op": "MSTORE"
        },
        "5413": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "5415": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "5417": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "5419": {
            "op": "SHL"
        },
        "5420": {
            "op": "SUB"
        },
        "5421": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11247,
                11257
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "5422": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11247,
                11257
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "5423": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11247,
                11257
            ],
            "op": "AND",
            "path": "4"
        },
        "5424": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11247,
                11257
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "5425": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11223,
                11268
            ],
            "op": "PUSH32",
            "path": "4",
            "value": "0x1198B3902400A4722F08A21EB834E8F872109A5DAB83213639D3670A10D8D40A"
        },
        "5458": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11223,
                11268
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "5459": {
            "op": "ADD"
        },
        "5460": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11223,
                11268
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "5462": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11223,
                11268
            ],
            "op": "MLOAD",
            "path": "4"
        },
        "5463": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11223,
                11268
            ],
            "op": "DUP1",
            "path": "4"
        },
        "5464": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11223,
                11268
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "5465": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11223,
                11268
            ],
            "op": "SUB",
            "path": "4"
        },
        "5466": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11223,
                11268
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "5467": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11223,
                11268
            ],
            "op": "LOG2",
            "path": "4"
        },
        "5468": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11189,
                11283
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "5469": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                10883,
                11293
            ],
            "op": "POP",
            "path": "4"
        },
        "5470": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                10883,
                11293
            ],
            "op": "POP",
            "path": "4"
        },
        "5471": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                10878,
                10881
            ],
            "op": "DUP1",
            "path": "4",
            "statement": 62
        },
        "5472": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                10878,
                10881
            ],
            "op": "DUP1",
            "path": "4"
        },
        "5473": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                10878,
                10881
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1569"
        },
        "5476": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                10878,
                10881
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "5477": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                10878,
                10881
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1B77"
        },
        "5480": {
            "fn": "MyLottery.not_enough_participant",
            "jump": "i",
            "offset": [
                10878,
                10881
            ],
            "op": "JUMP",
            "path": "4"
        },
        "5481": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                10878,
                10881
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "5482": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                10878,
                10881
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "5483": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                10878,
                10881
            ],
            "op": "POP",
            "path": "4"
        },
        "5484": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                10878,
                10881
            ],
            "op": "POP",
            "path": "4"
        },
        "5485": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                10840,
                11293
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x141C"
        },
        "5488": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                10840,
                11293
            ],
            "op": "JUMP",
            "path": "4"
        },
        "5489": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                10840,
                11293
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "5490": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                10840,
                11293
            ],
            "op": "POP",
            "path": "4"
        },
        "5491": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11302,
                11316
            ],
            "op": "PUSH2",
            "path": "4",
            "statement": 63,
            "value": "0xA6E"
        },
        "5494": {
            "fn": "MyLottery.not_enough_participant",
            "offset": [
                11302,
                11314
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1666"
        },
        "5497": {
            "fn": "MyLottery.not_enough_participant",
            "jump": "i",
            "offset": [
                11302,
                11316
            ],
            "op": "JUMP",
            "path": "4"
        },
        "5498": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                5805,
                6353
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "5499": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6028,
                6035
            ],
            "op": "PUSH1",
            "path": "4",
            "statement": 64,
            "value": "0x2"
        },
        "5501": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6036,
                6037
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "5503": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6028,
                6038
            ],
            "op": "DUP2",
            "path": "4"
        },
        "5504": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6028,
                6038
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "5505": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6028,
                6038
            ],
            "op": "DUP2",
            "path": "4"
        },
        "5506": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6028,
                6038
            ],
            "op": "LT",
            "path": "4"
        },
        "5507": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6028,
                6038
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x158E"
        },
        "5510": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6028,
                6038
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "5511": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6028,
                6038
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x158E"
        },
        "5514": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6028,
                6038
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1B4A"
        },
        "5517": {
            "fn": "MyLottery.calculate_winner",
            "jump": "i",
            "offset": [
                6028,
                6038
            ],
            "op": "JUMP",
            "path": "4"
        },
        "5518": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6028,
                6038
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "5519": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6028,
                6038
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "5521": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6028,
                6038
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "5522": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6028,
                6038
            ],
            "op": "DUP3",
            "path": "4"
        },
        "5523": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6028,
                6038
            ],
            "op": "MSTORE",
            "path": "4"
        },
        "5524": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6028,
                6038
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x20"
        },
        "5526": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6028,
                6038
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "5527": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6028,
                6038
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "5528": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6028,
                6038
            ],
            "op": "KECCAK256",
            "path": "4"
        },
        "5529": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6028,
                6038
            ],
            "op": "ADD",
            "path": "4"
        },
        "5530": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6028,
                6038
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "5531": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6073,
                6080
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x2"
        },
        "5533": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6073,
                6083
            ],
            "op": "DUP1",
            "path": "4"
        },
        "5534": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6073,
                6083
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "5535": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "5537": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "5539": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "5541": {
            "op": "SHL"
        },
        "5542": {
            "op": "SUB"
        },
        "5543": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6028,
                6038
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "5544": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6028,
                6038
            ],
            "op": "SWAP3",
            "path": "4"
        },
        "5545": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6028,
                6038
            ],
            "op": "AND",
            "path": "4"
        },
        "5546": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6028,
                6038
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "5547": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6028,
                6038
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x1"
        },
        "5549": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6028,
                6038
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "5550": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6073,
                6083
            ],
            "op": "DUP2",
            "path": "4"
        },
        "5551": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6073,
                6083
            ],
            "op": "LT",
            "path": "4"
        },
        "5552": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6073,
                6083
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x15BB"
        },
        "5555": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6073,
                6083
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "5556": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6073,
                6083
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x15BB"
        },
        "5559": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6073,
                6083
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1B4A"
        },
        "5562": {
            "fn": "MyLottery.calculate_winner",
            "jump": "i",
            "offset": [
                6073,
                6083
            ],
            "op": "JUMP",
            "path": "4"
        },
        "5563": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6073,
                6083
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "5564": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6073,
                6083
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "5566": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6073,
                6083
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "5567": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6073,
                6083
            ],
            "op": "DUP3",
            "path": "4"
        },
        "5568": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6073,
                6083
            ],
            "op": "MSTORE",
            "path": "4"
        },
        "5569": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6073,
                6083
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x20"
        },
        "5571": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6073,
                6083
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "5572": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6073,
                6083
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "5573": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6073,
                6083
            ],
            "op": "KECCAK256",
            "path": "4"
        },
        "5574": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6073,
                6083
            ],
            "op": "ADD",
            "path": "4"
        },
        "5575": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6073,
                6083
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "5576": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6105,
                6112
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x2"
        },
        "5578": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6113,
                6127
            ],
            "op": "DUP1",
            "path": "4"
        },
        "5579": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6113,
                6127
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "5580": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "5582": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "5584": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "5586": {
            "op": "SHL"
        },
        "5587": {
            "op": "SUB"
        },
        "5588": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6073,
                6083
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "5589": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6073,
                6083
            ],
            "op": "SWAP3",
            "path": "4"
        },
        "5590": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6073,
                6083
            ],
            "op": "AND",
            "path": "4"
        },
        "5591": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6073,
                6083
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "5592": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6113,
                6131
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x15E3"
        },
        "5595": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6113,
                6131
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "5596": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6073,
                6083
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x1"
        },
        "5598": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6073,
                6083
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "5599": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6113,
                6131
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1B23"
        },
        "5602": {
            "fn": "MyLottery.calculate_winner",
            "jump": "i",
            "offset": [
                6113,
                6131
            ],
            "op": "JUMP",
            "path": "4"
        },
        "5603": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6113,
                6131
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "5604": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6105,
                6132
            ],
            "op": "DUP2",
            "path": "4"
        },
        "5605": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6105,
                6132
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "5606": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6105,
                6132
            ],
            "op": "DUP2",
            "path": "4"
        },
        "5607": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6105,
                6132
            ],
            "op": "LT",
            "path": "4"
        },
        "5608": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6105,
                6132
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x15F3"
        },
        "5611": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6105,
                6132
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "5612": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6105,
                6132
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x15F3"
        },
        "5615": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6105,
                6132
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1B4A"
        },
        "5618": {
            "fn": "MyLottery.calculate_winner",
            "jump": "i",
            "offset": [
                6105,
                6132
            ],
            "op": "JUMP",
            "path": "4"
        },
        "5619": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6105,
                6132
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "5620": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6105,
                6132
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "5622": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6105,
                6132
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "5623": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6105,
                6132
            ],
            "op": "DUP3",
            "path": "4"
        },
        "5624": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6105,
                6132
            ],
            "op": "MSTORE",
            "path": "4"
        },
        "5625": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6105,
                6132
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x20"
        },
        "5627": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6105,
                6132
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "5628": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6105,
                6132
            ],
            "op": "DUP3",
            "path": "4"
        },
        "5629": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6105,
                6132
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "5630": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6105,
                6132
            ],
            "op": "KECCAK256",
            "path": "4"
        },
        "5631": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6105,
                6132
            ],
            "op": "ADD",
            "path": "4"
        },
        "5632": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6105,
                6132
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "5633": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                5990,
                6299
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "5635": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                5990,
                6299
            ],
            "op": "MLOAD",
            "path": "4"
        },
        "5636": {
            "op": "PUSH12",
            "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
        },
        "5649": {
            "op": "NOT"
        },
        "5650": {
            "op": "PUSH1",
            "value": "0x60"
        },
        "5652": {
            "op": "SWAP6"
        },
        "5653": {
            "op": "DUP7"
        },
        "5654": {
            "op": "SHL"
        },
        "5655": {
            "op": "DUP2"
        },
        "5656": {
            "op": "AND"
        },
        "5657": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                5990,
                6299
            ],
            "op": "SWAP4",
            "path": "4"
        },
        "5658": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                5990,
                6299
            ],
            "op": "DUP3",
            "path": "4"
        },
        "5659": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                5990,
                6299
            ],
            "op": "ADD",
            "path": "4"
        },
        "5660": {
            "op": "SWAP4"
        },
        "5661": {
            "op": "SWAP1"
        },
        "5662": {
            "op": "SWAP4"
        },
        "5663": {
            "op": "MSTORE"
        },
        "5664": {
            "op": "SWAP3"
        },
        "5665": {
            "op": "DUP5"
        },
        "5666": {
            "op": "SHL"
        },
        "5667": {
            "op": "DUP3"
        },
        "5668": {
            "op": "AND"
        },
        "5669": {
            "op": "PUSH1",
            "value": "0x34"
        },
        "5671": {
            "op": "DUP5"
        },
        "5672": {
            "op": "ADD"
        },
        "5673": {
            "op": "MSTORE"
        },
        "5674": {
            "op": "SWAP1"
        },
        "5675": {
            "op": "SWAP3"
        },
        "5676": {
            "op": "SHL"
        },
        "5677": {
            "op": "SWAP1"
        },
        "5678": {
            "op": "SWAP2"
        },
        "5679": {
            "op": "AND"
        },
        "5680": {
            "op": "PUSH1",
            "value": "0x48"
        },
        "5682": {
            "op": "DUP3"
        },
        "5683": {
            "op": "ADD"
        },
        "5684": {
            "op": "MSTORE"
        },
        "5685": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6154,
                6170
            ],
            "op": "DIFFICULTY",
            "path": "4"
        },
        "5686": {
            "op": "PUSH1",
            "value": "0x5C"
        },
        "5688": {
            "op": "DUP3"
        },
        "5689": {
            "op": "ADD"
        },
        "5690": {
            "op": "MSTORE"
        },
        "5691": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6238,
                6253
            ],
            "op": "TIMESTAMP",
            "path": "4"
        },
        "5692": {
            "op": "PUSH1",
            "value": "0x7C"
        },
        "5694": {
            "op": "DUP3"
        },
        "5695": {
            "op": "ADD"
        },
        "5696": {
            "op": "MSTORE"
        },
        "5697": {
            "op": "PUSH1",
            "value": "0x9C"
        },
        "5699": {
            "op": "ADD"
        },
        "5700": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                5990,
                6299
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "5702": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                5990,
                6299
            ],
            "op": "DUP1",
            "path": "4"
        },
        "5703": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                5990,
                6299
            ],
            "op": "MLOAD",
            "path": "4"
        },
        "5704": {
            "op": "PUSH1",
            "value": "0x1F"
        },
        "5706": {
            "op": "NOT"
        },
        "5707": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                5990,
                6299
            ],
            "op": "DUP2",
            "path": "4"
        },
        "5708": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                5990,
                6299
            ],
            "op": "DUP5",
            "path": "4"
        },
        "5709": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                5990,
                6299
            ],
            "op": "SUB",
            "path": "4"
        },
        "5710": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                5990,
                6299
            ],
            "op": "ADD",
            "path": "4"
        },
        "5711": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                5990,
                6299
            ],
            "op": "DUP2",
            "path": "4"
        },
        "5712": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                5990,
                6299
            ],
            "op": "MSTORE",
            "path": "4"
        },
        "5713": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                5990,
                6299
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "5714": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                5990,
                6299
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "5715": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                5990,
                6299
            ],
            "op": "MSTORE",
            "path": "4"
        },
        "5716": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                5963,
                6313
            ],
            "op": "DUP1",
            "path": "4"
        },
        "5717": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                5963,
                6313
            ],
            "op": "MLOAD",
            "path": "4"
        },
        "5718": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                5990,
                6299
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x20"
        },
        "5720": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                5963,
                6313
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "5721": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                5963,
                6313
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "5722": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                5963,
                6313
            ],
            "op": "ADD",
            "path": "4"
        },
        "5723": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                5963,
                6313
            ],
            "op": "KECCAK256",
            "path": "4"
        },
        "5724": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                5929,
                5939
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x4"
        },
        "5726": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                5929,
                6323
            ],
            "op": "SSTORE",
            "path": "4"
        },
        "5727": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6333,
                6346
            ],
            "op": "PUSH2",
            "path": "4",
            "statement": 65,
            "value": "0xA6E"
        },
        "5730": {
            "fn": "MyLottery.calculate_winner",
            "offset": [
                6333,
                6344
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1711"
        },
        "5733": {
            "fn": "MyLottery.calculate_winner",
            "jump": "i",
            "offset": [
                6333,
                6346
            ],
            "op": "JUMP",
            "path": "4"
        },
        "5734": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11439,
                11793
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "5735": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11487,
                11494
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "5737": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11482,
                11583
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "5738": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11504,
                11511
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x2"
        },
        "5740": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11504,
                11518
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "5741": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11500,
                11518
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0xFF"
        },
        "5743": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11500,
                11518
            ],
            "op": "DUP3",
            "path": "4"
        },
        "5744": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11500,
                11518
            ],
            "op": "AND",
            "path": "4"
        },
        "5745": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11500,
                11518
            ],
            "op": "LT",
            "path": "4"
        },
        "5746": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11482,
                11583
            ],
            "op": "ISZERO",
            "path": "4"
        },
        "5747": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11482,
                11583
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x16D8"
        },
        "5750": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11482,
                11583
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "5751": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11567,
                11572
            ],
            "op": "PUSH1",
            "path": "4",
            "statement": 66,
            "value": "0x0"
        },
        "5753": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11539,
                11552
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x8"
        },
        "5755": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11539,
                11564
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "5757": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11553,
                11560
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x2"
        },
        "5759": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11561,
                11562
            ],
            "op": "DUP5",
            "path": "4"
        },
        "5760": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11553,
                11563
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0xFF"
        },
        "5762": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11553,
                11563
            ],
            "op": "AND",
            "path": "4"
        },
        "5763": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11553,
                11563
            ],
            "op": "DUP2",
            "path": "4"
        },
        "5764": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11553,
                11563
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "5765": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11553,
                11563
            ],
            "op": "DUP2",
            "path": "4"
        },
        "5766": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11553,
                11563
            ],
            "op": "LT",
            "path": "4"
        },
        "5767": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11553,
                11563
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1692"
        },
        "5770": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11553,
                11563
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "5771": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11553,
                11563
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1692"
        },
        "5774": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11553,
                11563
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1B4A"
        },
        "5777": {
            "fn": "MyLottery.clearPlayers",
            "jump": "i",
            "offset": [
                11553,
                11563
            ],
            "op": "JUMP",
            "path": "4"
        },
        "5778": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11553,
                11563
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "5779": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11553,
                11563
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "5781": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11553,
                11563
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "5782": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11553,
                11563
            ],
            "op": "DUP3",
            "path": "4"
        },
        "5783": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11553,
                11563
            ],
            "op": "MSTORE",
            "path": "4"
        },
        "5784": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11553,
                11563
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x20"
        },
        "5786": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11553,
                11563
            ],
            "op": "DUP1",
            "path": "4"
        },
        "5787": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11553,
                11563
            ],
            "op": "DUP4",
            "path": "4"
        },
        "5788": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11553,
                11563
            ],
            "op": "KECCAK256",
            "path": "4"
        },
        "5789": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11553,
                11563
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "5790": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11553,
                11563
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "5791": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11553,
                11563
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "5792": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11553,
                11563
            ],
            "op": "ADD",
            "path": "4"
        },
        "5793": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11553,
                11563
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "5794": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "5796": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "5798": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "5800": {
            "op": "SHL"
        },
        "5801": {
            "op": "SUB"
        },
        "5802": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11553,
                11563
            ],
            "op": "AND",
            "path": "4"
        },
        "5803": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11539,
                11564
            ],
            "op": "DUP4",
            "path": "4"
        },
        "5804": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11539,
                11564
            ],
            "op": "MSTORE",
            "path": "4"
        },
        "5805": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11539,
                11564
            ],
            "op": "DUP3",
            "path": "4"
        },
        "5806": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11539,
                11564
            ],
            "op": "ADD",
            "path": "4"
        },
        "5807": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11539,
                11564
            ],
            "op": "SWAP3",
            "path": "4"
        },
        "5808": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11539,
                11564
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "5809": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11539,
                11564
            ],
            "op": "SWAP3",
            "path": "4"
        },
        "5810": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11539,
                11564
            ],
            "op": "MSTORE",
            "path": "4"
        },
        "5811": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11539,
                11564
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "5813": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11539,
                11564
            ],
            "op": "ADD",
            "path": "4"
        },
        "5814": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11539,
                11564
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "5815": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11539,
                11564
            ],
            "op": "KECCAK256",
            "path": "4"
        },
        "5816": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11539,
                11572
            ],
            "op": "DUP1",
            "path": "4"
        },
        "5817": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11539,
                11572
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "5818": {
            "op": "PUSH1",
            "value": "0xFF"
        },
        "5820": {
            "op": "NOT"
        },
        "5821": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11539,
                11572
            ],
            "op": "AND",
            "path": "4"
        },
        "5822": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11539,
                11572
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "5823": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11539,
                11572
            ],
            "op": "ISZERO",
            "path": "4"
        },
        "5824": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11539,
                11572
            ],
            "op": "ISZERO",
            "path": "4"
        },
        "5825": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11539,
                11572
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "5826": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11539,
                11572
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "5827": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11539,
                11572
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "5828": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11539,
                11572
            ],
            "op": "OR",
            "path": "4"
        },
        "5829": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11539,
                11572
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "5830": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11539,
                11572
            ],
            "op": "SSTORE",
            "path": "4"
        },
        "5831": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11520,
                11523
            ],
            "op": "DUP1",
            "path": "4",
            "statement": 67
        },
        "5832": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11520,
                11523
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x16D0"
        },
        "5835": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11520,
                11523
            ],
            "op": "DUP2",
            "path": "4"
        },
        "5836": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11520,
                11523
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1B77"
        },
        "5839": {
            "fn": "MyLottery.clearPlayers",
            "jump": "i",
            "offset": [
                11520,
                11523
            ],
            "op": "JUMP",
            "path": "4"
        },
        "5840": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11520,
                11523
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "5841": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11520,
                11523
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "5842": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11520,
                11523
            ],
            "op": "POP",
            "path": "4"
        },
        "5843": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11520,
                11523
            ],
            "op": "POP",
            "path": "4"
        },
        "5844": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11482,
                11583
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1669"
        },
        "5847": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11482,
                11583
            ],
            "op": "JUMP",
            "path": "4"
        },
        "5848": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11482,
                11583
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "5849": {
            "op": "POP"
        },
        "5850": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11602,
                11626
            ],
            "op": "PUSH1",
            "path": "4",
            "statement": 68,
            "value": "0x40"
        },
        "5852": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11602,
                11626
            ],
            "op": "DUP1",
            "path": "4"
        },
        "5853": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11602,
                11626
            ],
            "op": "MLOAD",
            "path": "4"
        },
        "5854": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11624,
                11625
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "5856": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11602,
                11626
            ],
            "op": "DUP2",
            "path": "4"
        },
        "5857": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11602,
                11626
            ],
            "op": "MSTORE",
            "path": "4"
        },
        "5858": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11602,
                11626
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x20"
        },
        "5860": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11602,
                11626
            ],
            "op": "DUP2",
            "path": "4"
        },
        "5861": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11602,
                11626
            ],
            "op": "ADD",
            "path": "4"
        },
        "5862": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11602,
                11626
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "5863": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11602,
                11626
            ],
            "op": "DUP3",
            "path": "4"
        },
        "5864": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11602,
                11626
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "5865": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11602,
                11626
            ],
            "op": "MSTORE",
            "path": "4"
        },
        "5866": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11592,
                11626
            ],
            "op": "MLOAD",
            "path": "4"
        },
        "5867": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11592,
                11626
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x16F6"
        },
        "5870": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11592,
                11626
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "5871": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11592,
                11599
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x2"
        },
        "5873": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11592,
                11599
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "5874": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11592,
                11626
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x17F3"
        },
        "5877": {
            "fn": "MyLottery.clearPlayers",
            "jump": "i",
            "offset": [
                11592,
                11626
            ],
            "op": "JUMP",
            "path": "4"
        },
        "5878": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11592,
                11626
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "5879": {
            "op": "POP"
        },
        "5880": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11636,
                11649
            ],
            "op": "PUSH1",
            "path": "4",
            "statement": 69,
            "value": "0x12"
        },
        "5882": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11636,
                11672
            ],
            "op": "DUP1",
            "path": "4"
        },
        "5883": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11636,
                11672
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "5884": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "5886": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11682,
                11691
            ],
            "op": "PUSH1",
            "path": "4",
            "statement": 70,
            "value": "0xD"
        },
        "5888": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11682,
                11695
            ],
            "op": "SSTORE",
            "path": "4"
        },
        "5889": {
            "op": "PUSH2",
            "value": "0xFFFF"
        },
        "5892": {
            "op": "NOT"
        },
        "5893": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11705,
                11722
            ],
            "op": "AND",
            "path": "4",
            "statement": 71
        },
        "5894": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11636,
                11672
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x100"
        },
        "5897": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11705,
                11722
            ],
            "op": "OR",
            "path": "4"
        },
        "5898": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11705,
                11722
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "5899": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11705,
                11722
            ],
            "op": "SSTORE",
            "path": "4"
        },
        "5900": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11745,
                11760
            ],
            "op": "TIMESTAMP",
            "path": "4",
            "statement": 72
        },
        "5901": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11732,
                11742
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0xF"
        },
        "5903": {
            "fn": "MyLottery.clearPlayers",
            "offset": [
                11732,
                11760
            ],
            "op": "SSTORE",
            "path": "4"
        },
        "5904": {
            "fn": "MyLottery.clearPlayers",
            "jump": "o",
            "offset": [
                11439,
                11793
            ],
            "op": "JUMP",
            "path": "4"
        },
        "5905": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8503,
                9114
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "5906": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8576,
                8592
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "5908": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8614,
                8624
            ],
            "op": "PUSH1",
            "path": "4",
            "statement": 73,
            "value": "0x4"
        },
        "5910": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8614,
                8624
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "5911": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8628,
                8629
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "5913": {
            "branch": 103,
            "fn": "MyLottery.afterFinish",
            "offset": [
                8614,
                8629
            ],
            "op": "SUB",
            "path": "4"
        },
        "5914": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8606,
                8654
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x175C"
        },
        "5917": {
            "branch": 103,
            "fn": "MyLottery.afterFinish",
            "offset": [
                8606,
                8654
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "5918": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8606,
                8654
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x40"
        },
        "5920": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8606,
                8654
            ],
            "op": "MLOAD",
            "path": "4"
        },
        "5921": {
            "op": "PUSH3",
            "value": "0x461BCD"
        },
        "5925": {
            "op": "PUSH1",
            "value": "0xE5"
        },
        "5927": {
            "op": "SHL"
        },
        "5928": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8606,
                8654
            ],
            "op": "DUP2",
            "path": "4"
        },
        "5929": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8606,
                8654
            ],
            "op": "MSTORE",
            "path": "4"
        },
        "5930": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "5932": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8606,
                8654
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x4"
        },
        "5934": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8606,
                8654
            ],
            "op": "DUP3",
            "path": "4"
        },
        "5935": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8606,
                8654
            ],
            "op": "ADD",
            "path": "4"
        },
        "5936": {
            "op": "MSTORE"
        },
        "5937": {
            "op": "PUSH1",
            "value": "0x14"
        },
        "5939": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "5941": {
            "op": "DUP3"
        },
        "5942": {
            "op": "ADD"
        },
        "5943": {
            "op": "MSTORE"
        },
        "5944": {
            "op": "PUSH20",
            "value": "0x63616E742066696E642072616E646F6D6E657373"
        },
        "5965": {
            "op": "PUSH1",
            "value": "0x60"
        },
        "5967": {
            "op": "SHL"
        },
        "5968": {
            "op": "PUSH1",
            "value": "0x44"
        },
        "5970": {
            "op": "DUP3"
        },
        "5971": {
            "op": "ADD"
        },
        "5972": {
            "op": "MSTORE"
        },
        "5973": {
            "op": "PUSH1",
            "value": "0x64"
        },
        "5975": {
            "op": "ADD"
        },
        "5976": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8606,
                8654
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x7BA"
        },
        "5979": {
            "op": "JUMP"
        },
        "5980": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8606,
                8654
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "5981": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8701,
                8708
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x2"
        },
        "5983": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8701,
                8715
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "5984": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8688,
                8698
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x4"
        },
        "5986": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8688,
                8698
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "5987": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8664,
                8685
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "5989": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8664,
                8685
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "5990": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8688,
                8715
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x176E"
        },
        "5993": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8688,
                8715
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "5994": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8688,
                8715
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1B36"
        },
        "5997": {
            "fn": "MyLottery.afterFinish",
            "jump": "i",
            "offset": [
                8688,
                8715
            ],
            "op": "JUMP",
            "path": "4"
        },
        "5998": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8688,
                8715
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "5999": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8664,
                8715
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "6000": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8664,
                8715
            ],
            "op": "POP",
            "path": "4"
        },
        "6001": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8740,
                8747
            ],
            "op": "PUSH1",
            "path": "4",
            "statement": 74,
            "value": "0x2"
        },
        "6003": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8748,
                8761
            ],
            "op": "DUP2",
            "path": "4"
        },
        "6004": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8740,
                8762
            ],
            "op": "DUP2",
            "path": "4"
        },
        "6005": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8740,
                8762
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "6006": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8740,
                8762
            ],
            "op": "DUP2",
            "path": "4"
        },
        "6007": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8740,
                8762
            ],
            "op": "LT",
            "path": "4"
        },
        "6008": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8740,
                8762
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1783"
        },
        "6011": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8740,
                8762
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "6012": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8740,
                8762
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1783"
        },
        "6015": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8740,
                8762
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1B4A"
        },
        "6018": {
            "fn": "MyLottery.afterFinish",
            "jump": "i",
            "offset": [
                8740,
                8762
            ],
            "op": "JUMP",
            "path": "4"
        },
        "6019": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8740,
                8762
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "6020": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8740,
                8762
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "6022": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8740,
                8762
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "6023": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8740,
                8762
            ],
            "op": "DUP3",
            "path": "4"
        },
        "6024": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8740,
                8762
            ],
            "op": "MSTORE",
            "path": "4"
        },
        "6025": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8740,
                8762
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x20"
        },
        "6027": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8740,
                8762
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "6028": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8740,
                8762
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "6029": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8740,
                8762
            ],
            "op": "KECCAK256",
            "path": "4"
        },
        "6030": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8740,
                8762
            ],
            "op": "ADD",
            "path": "4"
        },
        "6031": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8740,
                8762
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "6032": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8725,
                8737
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x3"
        },
        "6034": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8725,
                8762
            ],
            "op": "DUP1",
            "path": "4"
        },
        "6035": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8725,
                8762
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "6036": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "6038": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "6040": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "6042": {
            "op": "SHL"
        },
        "6043": {
            "op": "SUB"
        },
        "6044": {
            "op": "NOT"
        },
        "6045": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8725,
                8762
            ],
            "op": "AND",
            "path": "4"
        },
        "6046": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "6048": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "6050": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "6052": {
            "op": "SHL"
        },
        "6053": {
            "op": "SUB"
        },
        "6054": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8740,
                8762
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "6055": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8740,
                8762
            ],
            "op": "SWAP3",
            "path": "4"
        },
        "6056": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8740,
                8762
            ],
            "op": "AND",
            "path": "4"
        },
        "6057": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8725,
                8762
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "6058": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8725,
                8762
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "6059": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8725,
                8762
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "6060": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8725,
                8762
            ],
            "op": "OR",
            "path": "4"
        },
        "6061": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8725,
                8762
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "6062": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8725,
                8762
            ],
            "op": "SSTORE",
            "path": "4"
        },
        "6063": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8784,
                8796
            ],
            "op": "PUSH2",
            "path": "4",
            "statement": 75,
            "value": "0x17B6"
        },
        "6066": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8784,
                8794
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1187"
        },
        "6069": {
            "fn": "MyLottery.afterFinish",
            "jump": "i",
            "offset": [
                8784,
                8796
            ],
            "op": "JUMP",
            "path": "4"
        },
        "6070": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8784,
                8796
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "6071": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8773,
                8796
            ],
            "op": "SWAP2",
            "path": "4"
        },
        "6072": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8773,
                8796
            ],
            "op": "POP",
            "path": "4"
        },
        "6073": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8811,
                8819
            ],
            "op": "DUP2",
            "path": "4"
        },
        "6074": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8823,
                8824
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x0"
        },
        "6076": {
            "branch": 104,
            "fn": "MyLottery.afterFinish",
            "offset": [
                8811,
                8824
            ],
            "op": "SUB",
            "path": "4"
        },
        "6077": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8807,
                9058
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x17CC"
        },
        "6080": {
            "branch": 104,
            "fn": "MyLottery.afterFinish",
            "offset": [
                8807,
                9058
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "6081": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8840,
                8854
            ],
            "op": "PUSH2",
            "path": "4",
            "statement": 76,
            "value": "0x17C8"
        },
        "6084": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8840,
                8852
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1666"
        },
        "6087": {
            "fn": "MyLottery.afterFinish",
            "jump": "i",
            "offset": [
                8840,
                8854
            ],
            "op": "JUMP",
            "path": "4"
        },
        "6088": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8840,
                8854
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "6089": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8535,
                9114
            ],
            "op": "POP",
            "path": "4"
        },
        "6090": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8535,
                9114
            ],
            "op": "POP",
            "path": "4"
        },
        "6091": {
            "fn": "MyLottery.afterFinish",
            "jump": "o",
            "offset": [
                8503,
                9114
            ],
            "op": "JUMP",
            "path": "4"
        },
        "6092": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8807,
                9058
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "6093": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8897,
                8906
            ],
            "op": "PUSH1",
            "path": "4",
            "statement": 77,
            "value": "0xD"
        },
        "6095": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8897,
                8906
            ],
            "op": "SLOAD",
            "path": "4"
        },
        "6096": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8897,
                8910
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x17DA"
        },
        "6099": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8897,
                8910
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "6100": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8909,
                8910
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x1"
        },
        "6102": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8897,
                8910
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x1AB1"
        },
        "6105": {
            "fn": "MyLottery.afterFinish",
            "jump": "i",
            "offset": [
                8897,
                8910
            ],
            "op": "JUMP",
            "path": "4"
        },
        "6106": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8897,
                8910
            ],
            "op": "JUMPDEST",
            "path": "4"
        },
        "6107": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8885,
                8894
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0xD"
        },
        "6109": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8885,
                8910
            ],
            "op": "DUP2",
            "path": "4"
        },
        "6110": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8885,
                8910
            ],
            "op": "SWAP1",
            "path": "4"
        },
        "6111": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8885,
                8910
            ],
            "op": "SSTORE",
            "path": "4"
        },
        "6112": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8941,
                8942
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0x3"
        },
        "6114": {
            "branch": 105,
            "fn": "MyLottery.afterFinish",
            "offset": [
                8928,
                8942
            ],
            "op": "SUB",
            "path": "4"
        },
        "6115": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8924,
                9048
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x17C8"
        },
        "6118": {
            "branch": 105,
            "fn": "MyLottery.afterFinish",
            "offset": [
                8924,
                9048
            ],
            "op": "JUMPI",
            "path": "4"
        },
        "6119": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8974,
                8975
            ],
            "op": "PUSH1",
            "path": "4",
            "statement": 78,
            "value": "0x0"
        },
        "6121": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8962,
                8971
            ],
            "op": "PUSH1",
            "path": "4",
            "value": "0xD"
        },
        "6123": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8962,
                8975
            ],
            "op": "SSTORE",
            "path": "4"
        },
        "6124": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8993,
                9011
            ],
            "op": "PUSH2",
            "path": "4",
            "statement": 79,
            "value": "0x17C8"
        },
        "6127": {
            "fn": "MyLottery.afterFinish",
            "offset": [
                8993,
                9009
            ],
            "op": "PUSH2",
            "path": "4",
            "value": "0x157A"
        },
        "6130": {
            "fn": "MyLottery.afterFinish",
            "jump": "i",
            "offset": [
                8993,
                9011
            ],
            "op": "JUMP",
            "path": "4"
        },
        "6131": {
            "op": "JUMPDEST"
        },
        "6132": {
            "op": "DUP3"
        },
        "6133": {
            "op": "DUP1"
        },
        "6134": {
            "op": "SLOAD"
        },
        "6135": {
            "op": "DUP3"
        },
        "6136": {
            "op": "DUP3"
        },
        "6137": {
            "op": "SSTORE"
        },
        "6138": {
            "op": "SWAP1"
        },
        "6139": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6141": {
            "op": "MSTORE"
        },
        "6142": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "6144": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6146": {
            "op": "KECCAK256"
        },
        "6147": {
            "op": "SWAP1"
        },
        "6148": {
            "op": "DUP2"
        },
        "6149": {
            "op": "ADD"
        },
        "6150": {
            "op": "SWAP3"
        },
        "6151": {
            "op": "DUP3"
        },
        "6152": {
            "op": "ISZERO"
        },
        "6153": {
            "op": "PUSH2",
            "value": "0x1848"
        },
        "6156": {
            "op": "JUMPI"
        },
        "6157": {
            "op": "SWAP2"
        },
        "6158": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "6160": {
            "op": "MUL"
        },
        "6161": {
            "op": "DUP3"
        },
        "6162": {
            "op": "ADD"
        },
        "6163": {
            "op": "JUMPDEST"
        },
        "6164": {
            "op": "DUP3"
        },
        "6165": {
            "op": "DUP2"
        },
        "6166": {
            "op": "GT"
        },
        "6167": {
            "op": "ISZERO"
        },
        "6168": {
            "op": "PUSH2",
            "value": "0x1848"
        },
        "6171": {
            "op": "JUMPI"
        },
        "6172": {
            "op": "DUP3"
        },
        "6173": {
            "op": "MLOAD"
        },
        "6174": {
            "op": "DUP3"
        },
        "6175": {
            "op": "SLOAD"
        },
        "6176": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "6178": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "6180": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "6182": {
            "op": "SHL"
        },
        "6183": {
            "op": "SUB"
        },
        "6184": {
            "op": "NOT"
        },
        "6185": {
            "op": "AND"
        },
        "6186": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "6188": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "6190": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "6192": {
            "op": "SHL"
        },
        "6193": {
            "op": "SUB"
        },
        "6194": {
            "op": "SWAP1"
        },
        "6195": {
            "op": "SWAP2"
        },
        "6196": {
            "op": "AND"
        },
        "6197": {
            "op": "OR"
        },
        "6198": {
            "op": "DUP3"
        },
        "6199": {
            "op": "SSTORE"
        },
        "6200": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "6202": {
            "op": "SWAP1"
        },
        "6203": {
            "op": "SWAP3"
        },
        "6204": {
            "op": "ADD"
        },
        "6205": {
            "op": "SWAP2"
        },
        "6206": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "6208": {
            "op": "SWAP1"
        },
        "6209": {
            "op": "SWAP2"
        },
        "6210": {
            "op": "ADD"
        },
        "6211": {
            "op": "SWAP1"
        },
        "6212": {
            "op": "PUSH2",
            "value": "0x1813"
        },
        "6215": {
            "op": "JUMP"
        },
        "6216": {
            "op": "JUMPDEST"
        },
        "6217": {
            "op": "POP"
        },
        "6218": {
            "op": "PUSH2",
            "value": "0x1854"
        },
        "6221": {
            "op": "SWAP3"
        },
        "6222": {
            "op": "SWAP2"
        },
        "6223": {
            "op": "POP"
        },
        "6224": {
            "op": "PUSH2",
            "value": "0x1858"
        },
        "6227": {
            "jump": "i",
            "op": "JUMP"
        },
        "6228": {
            "op": "JUMPDEST"
        },
        "6229": {
            "op": "POP"
        },
        "6230": {
            "op": "SWAP1"
        },
        "6231": {
            "jump": "o",
            "op": "JUMP"
        },
        "6232": {
            "op": "JUMPDEST"
        },
        "6233": {
            "op": "JUMPDEST"
        },
        "6234": {
            "op": "DUP1"
        },
        "6235": {
            "op": "DUP3"
        },
        "6236": {
            "op": "GT"
        },
        "6237": {
            "op": "ISZERO"
        },
        "6238": {
            "op": "PUSH2",
            "value": "0x1854"
        },
        "6241": {
            "op": "JUMPI"
        },
        "6242": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6244": {
            "op": "DUP2"
        },
        "6245": {
            "op": "SSTORE"
        },
        "6246": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "6248": {
            "op": "ADD"
        },
        "6249": {
            "op": "PUSH2",
            "value": "0x1859"
        },
        "6252": {
            "op": "JUMP"
        },
        "6253": {
            "op": "JUMPDEST"
        },
        "6254": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6256": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "6258": {
            "op": "DUP3"
        },
        "6259": {
            "op": "DUP5"
        },
        "6260": {
            "op": "SUB"
        },
        "6261": {
            "op": "SLT"
        },
        "6262": {
            "op": "ISZERO"
        },
        "6263": {
            "op": "PUSH2",
            "value": "0x187F"
        },
        "6266": {
            "op": "JUMPI"
        },
        "6267": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6269": {
            "op": "DUP1"
        },
        "6270": {
            "op": "REVERT"
        },
        "6271": {
            "op": "JUMPDEST"
        },
        "6272": {
            "op": "DUP2"
        },
        "6273": {
            "op": "CALLDATALOAD"
        },
        "6274": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "6276": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "6278": {
            "op": "PUSH1",
            "value": "0xA0"
        },
        "6280": {
            "op": "SHL"
        },
        "6281": {
            "op": "SUB"
        },
        "6282": {
            "op": "DUP2"
        },
        "6283": {
            "op": "AND"
        },
        "6284": {
            "op": "DUP2"
        },
        "6285": {
            "op": "EQ"
        },
        "6286": {
            "op": "PUSH2",
            "value": "0xFD5"
        },
        "6289": {
            "op": "JUMPI"
        },
        "6290": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6292": {
            "op": "DUP1"
        },
        "6293": {
            "op": "REVERT"
        },
        "6294": {
            "op": "JUMPDEST"
        },
        "6295": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6297": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "6299": {
            "op": "DUP3"
        },
        "6300": {
            "op": "DUP5"
        },
        "6301": {
            "op": "SUB"
        },
        "6302": {
            "op": "SLT"
        },
        "6303": {
            "op": "ISZERO"
        },
        "6304": {
            "op": "PUSH2",
            "value": "0x18A8"
        },
        "6307": {
            "op": "JUMPI"
        },
        "6308": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6310": {
            "op": "DUP1"
        },
        "6311": {
            "op": "REVERT"
        },
        "6312": {
            "op": "JUMPDEST"
        },
        "6313": {
            "op": "POP"
        },
        "6314": {
            "op": "CALLDATALOAD"
        },
        "6315": {
            "op": "SWAP2"
        },
        "6316": {
            "op": "SWAP1"
        },
        "6317": {
            "op": "POP"
        },
        "6318": {
            "jump": "o",
            "op": "JUMP"
        },
        "6319": {
            "op": "JUMPDEST"
        },
        "6320": {
            "op": "PUSH4",
            "value": "0x4E487B71"
        },
        "6325": {
            "op": "PUSH1",
            "value": "0xE0"
        },
        "6327": {
            "op": "SHL"
        },
        "6328": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6330": {
            "op": "MSTORE"
        },
        "6331": {
            "op": "PUSH1",
            "value": "0x21"
        },
        "6333": {
            "op": "PUSH1",
            "value": "0x4"
        },
        "6335": {
            "op": "MSTORE"
        },
        "6336": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "6338": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6340": {
            "op": "REVERT"
        },
        "6341": {
            "op": "JUMPDEST"
        },
        "6342": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "6344": {
            "op": "DUP2"
        },
        "6345": {
            "op": "ADD"
        },
        "6346": {
            "op": "PUSH1",
            "value": "0x3"
        },
        "6348": {
            "op": "DUP4"
        },
        "6349": {
            "op": "LT"
        },
        "6350": {
            "op": "PUSH2",
            "value": "0x18D9"
        },
        "6353": {
            "op": "JUMPI"
        },
        "6354": {
            "op": "PUSH2",
            "value": "0x18D9"
        },
        "6357": {
            "op": "PUSH2",
            "value": "0x18AF"
        },
        "6360": {
            "jump": "i",
            "op": "JUMP"
        },
        "6361": {
            "op": "JUMPDEST"
        },
        "6362": {
            "op": "SWAP2"
        },
        "6363": {
            "op": "SWAP1"
        },
        "6364": {
            "op": "MSTORE"
        },
        "6365": {
            "op": "SWAP1"
        },
        "6366": {
            "jump": "o",
            "op": "JUMP"
        },
        "6367": {
            "op": "JUMPDEST"
        },
        "6368": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "6370": {
            "op": "DUP2"
        },
        "6371": {
            "op": "ADD"
        },
        "6372": {
            "op": "PUSH1",
            "value": "0x2"
        },
        "6374": {
            "op": "DUP4"
        },
        "6375": {
            "op": "LT"
        },
        "6376": {
            "op": "PUSH2",
            "value": "0x18D9"
        },
        "6379": {
            "op": "JUMPI"
        },
        "6380": {
            "op": "PUSH2",
            "value": "0x18D9"
        },
        "6383": {
            "op": "PUSH2",
            "value": "0x18AF"
        },
        "6386": {
            "jump": "i",
            "op": "JUMP"
        },
        "6387": {
            "op": "JUMPDEST"
        },
        "6388": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6390": {
            "op": "DUP1"
        },
        "6391": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6393": {
            "op": "PUSH1",
            "value": "0x60"
        },
        "6395": {
            "op": "DUP5"
        },
        "6396": {
            "op": "DUP7"
        },
        "6397": {
            "op": "SUB"
        },
        "6398": {
            "op": "SLT"
        },
        "6399": {
            "op": "ISZERO"
        },
        "6400": {
            "op": "PUSH2",
            "value": "0x1908"
        },
        "6403": {
            "op": "JUMPI"
        },
        "6404": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6406": {
            "op": "DUP1"
        },
        "6407": {
            "op": "REVERT"
        },
        "6408": {
            "op": "JUMPDEST"
        },
        "6409": {
            "op": "POP"
        },
        "6410": {
            "op": "POP"
        },
        "6411": {
            "op": "DUP2"
        },
        "6412": {
            "op": "CALLDATALOAD"
        },
        "6413": {
            "op": "SWAP4"
        },
        "6414": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "6416": {
            "op": "DUP4"
        },
        "6417": {
            "op": "ADD"
        },
        "6418": {
            "op": "CALLDATALOAD"
        },
        "6419": {
            "op": "SWAP4"
        },
        "6420": {
            "op": "POP"
        },
        "6421": {
            "op": "PUSH1",
            "value": "0x40"
        },
        "6423": {
            "op": "SWAP1"
        },
        "6424": {
            "op": "SWAP3"
        },
        "6425": {
            "op": "ADD"
        },
        "6426": {
            "op": "CALLDATALOAD"
        },
        "6427": {
            "op": "SWAP2"
        },
        "6428": {
            "op": "SWAP1"
        },
        "6429": {
            "op": "POP"
        },
        "6430": {
            "jump": "o",
            "op": "JUMP"
        },
        "6431": {
            "op": "JUMPDEST"
        },
        "6432": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6434": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "6436": {
            "op": "DUP3"
        },
        "6437": {
            "op": "DUP5"
        },
        "6438": {
            "op": "SUB"
        },
        "6439": {
            "op": "SLT"
        },
        "6440": {
            "op": "ISZERO"
        },
        "6441": {
            "op": "PUSH2",
            "value": "0x1931"
        },
        "6444": {
            "op": "JUMPI"
        },
        "6445": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6447": {
            "op": "DUP1"
        },
        "6448": {
            "op": "REVERT"
        },
        "6449": {
            "op": "JUMPDEST"
        },
        "6450": {
            "op": "POP"
        },
        "6451": {
            "op": "MLOAD"
        },
        "6452": {
            "op": "SWAP2"
        },
        "6453": {
            "op": "SWAP1"
        },
        "6454": {
            "op": "POP"
        },
        "6455": {
            "jump": "o",
            "op": "JUMP"
        },
        "6456": {
            "op": "JUMPDEST"
        },
        "6457": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6459": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "6461": {
            "op": "DUP3"
        },
        "6462": {
            "op": "DUP5"
        },
        "6463": {
            "op": "SUB"
        },
        "6464": {
            "op": "SLT"
        },
        "6465": {
            "op": "ISZERO"
        },
        "6466": {
            "op": "PUSH2",
            "value": "0x194A"
        },
        "6469": {
            "op": "JUMPI"
        },
        "6470": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6472": {
            "op": "DUP1"
        },
        "6473": {
            "op": "REVERT"
        },
        "6474": {
            "op": "JUMPDEST"
        },
        "6475": {
            "op": "DUP2"
        },
        "6476": {
            "op": "MLOAD"
        },
        "6477": {
            "op": "DUP1"
        },
        "6478": {
            "op": "ISZERO"
        },
        "6479": {
            "op": "ISZERO"
        },
        "6480": {
            "op": "DUP2"
        },
        "6481": {
            "op": "EQ"
        },
        "6482": {
            "op": "PUSH2",
            "value": "0xFD5"
        },
        "6485": {
            "op": "JUMPI"
        },
        "6486": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6488": {
            "op": "DUP1"
        },
        "6489": {
            "op": "REVERT"
        },
        "6490": {
            "op": "JUMPDEST"
        },
        "6491": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "6493": {
            "op": "DUP1"
        },
        "6494": {
            "op": "DUP3"
        },
        "6495": {
            "op": "MSTORE"
        },
        "6496": {
            "op": "PUSH1",
            "value": "0x1F"
        },
        "6498": {
            "op": "SWAP1"
        },
        "6499": {
            "op": "DUP3"
        },
        "6500": {
            "op": "ADD"
        },
        "6501": {
            "op": "MSTORE"
        },
        "6502": {
            "op": "PUSH32",
            "value": "0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
        },
        "6535": {
            "op": "PUSH1",
            "value": "0x40"
        },
        "6537": {
            "op": "DUP3"
        },
        "6538": {
            "op": "ADD"
        },
        "6539": {
            "op": "MSTORE"
        },
        "6540": {
            "op": "PUSH1",
            "value": "0x60"
        },
        "6542": {
            "op": "ADD"
        },
        "6543": {
            "op": "SWAP1"
        },
        "6544": {
            "jump": "o",
            "op": "JUMP"
        },
        "6545": {
            "op": "JUMPDEST"
        },
        "6546": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "6548": {
            "op": "DUP1"
        },
        "6549": {
            "op": "DUP3"
        },
        "6550": {
            "op": "MSTORE"
        },
        "6551": {
            "op": "PUSH1",
            "value": "0xF"
        },
        "6553": {
            "op": "SWAP1"
        },
        "6554": {
            "op": "DUP3"
        },
        "6555": {
            "op": "ADD"
        },
        "6556": {
            "op": "MSTORE"
        },
        "6557": {
            "op": "PUSH15",
            "value": "0x131BDD1D195C9E4814DD1BDC1C1959"
        },
        "6573": {
            "op": "PUSH1",
            "value": "0x8A"
        },
        "6575": {
            "op": "SHL"
        },
        "6576": {
            "op": "PUSH1",
            "value": "0x40"
        },
        "6578": {
            "op": "DUP3"
        },
        "6579": {
            "op": "ADD"
        },
        "6580": {
            "op": "MSTORE"
        },
        "6581": {
            "op": "PUSH1",
            "value": "0x60"
        },
        "6583": {
            "op": "ADD"
        },
        "6584": {
            "op": "SWAP1"
        },
        "6585": {
            "jump": "o",
            "op": "JUMP"
        },
        "6586": {
            "op": "JUMPDEST"
        },
        "6587": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6589": {
            "op": "JUMPDEST"
        },
        "6590": {
            "op": "DUP4"
        },
        "6591": {
            "op": "DUP2"
        },
        "6592": {
            "op": "LT"
        },
        "6593": {
            "op": "ISZERO"
        },
        "6594": {
            "op": "PUSH2",
            "value": "0x19D5"
        },
        "6597": {
            "op": "JUMPI"
        },
        "6598": {
            "op": "DUP2"
        },
        "6599": {
            "op": "DUP2"
        },
        "6600": {
            "op": "ADD"
        },
        "6601": {
            "op": "MLOAD"
        },
        "6602": {
            "op": "DUP4"
        },
        "6603": {
            "op": "DUP3"
        },
        "6604": {
            "op": "ADD"
        },
        "6605": {
            "op": "MSTORE"
        },
        "6606": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "6608": {
            "op": "ADD"
        },
        "6609": {
            "op": "PUSH2",
            "value": "0x19BD"
        },
        "6612": {
            "op": "JUMP"
        },
        "6613": {
            "op": "JUMPDEST"
        },
        "6614": {
            "op": "POP"
        },
        "6615": {
            "op": "POP"
        },
        "6616": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6618": {
            "op": "SWAP2"
        },
        "6619": {
            "op": "ADD"
        },
        "6620": {
            "op": "MSTORE"
        },
        "6621": {
            "jump": "o",
            "op": "JUMP"
        },
        "6622": {
            "op": "JUMPDEST"
        },
        "6623": {
            "op": "PUSH32",
            "value": "0x456E74727920666565206D75737420626520657175616C20746F3A2000000000"
        },
        "6656": {
            "op": "DUP2"
        },
        "6657": {
            "op": "MSTORE"
        },
        "6658": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6660": {
            "op": "DUP3"
        },
        "6661": {
            "op": "MLOAD"
        },
        "6662": {
            "op": "PUSH2",
            "value": "0x1A16"
        },
        "6665": {
            "op": "DUP2"
        },
        "6666": {
            "op": "PUSH1",
            "value": "0x1C"
        },
        "6668": {
            "op": "DUP6"
        },
        "6669": {
            "op": "ADD"
        },
        "6670": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "6672": {
            "op": "DUP8"
        },
        "6673": {
            "op": "ADD"
        },
        "6674": {
            "op": "PUSH2",
            "value": "0x19BA"
        },
        "6677": {
            "jump": "i",
            "op": "JUMP"
        },
        "6678": {
            "op": "JUMPDEST"
        },
        "6679": {
            "op": "PUSH4",
            "value": "0x408AE8D"
        },
        "6684": {
            "op": "PUSH1",
            "value": "0xE3"
        },
        "6686": {
            "op": "SHL"
        },
        "6687": {
            "op": "PUSH1",
            "value": "0x1C"
        },
        "6689": {
            "op": "SWAP4"
        },
        "6690": {
            "op": "SWAP1"
        },
        "6691": {
            "op": "SWAP2"
        },
        "6692": {
            "op": "ADD"
        },
        "6693": {
            "op": "SWAP3"
        },
        "6694": {
            "op": "DUP4"
        },
        "6695": {
            "op": "ADD"
        },
        "6696": {
            "op": "MSTORE"
        },
        "6697": {
            "op": "POP"
        },
        "6698": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "6700": {
            "op": "ADD"
        },
        "6701": {
            "op": "SWAP2"
        },
        "6702": {
            "op": "SWAP1"
        },
        "6703": {
            "op": "POP"
        },
        "6704": {
            "jump": "o",
            "op": "JUMP"
        },
        "6705": {
            "op": "JUMPDEST"
        },
        "6706": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "6708": {
            "op": "DUP2"
        },
        "6709": {
            "op": "MSTORE"
        },
        "6710": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6712": {
            "op": "DUP3"
        },
        "6713": {
            "op": "MLOAD"
        },
        "6714": {
            "op": "DUP1"
        },
        "6715": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "6717": {
            "op": "DUP5"
        },
        "6718": {
            "op": "ADD"
        },
        "6719": {
            "op": "MSTORE"
        },
        "6720": {
            "op": "PUSH2",
            "value": "0x1A50"
        },
        "6723": {
            "op": "DUP2"
        },
        "6724": {
            "op": "PUSH1",
            "value": "0x40"
        },
        "6726": {
            "op": "DUP6"
        },
        "6727": {
            "op": "ADD"
        },
        "6728": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "6730": {
            "op": "DUP8"
        },
        "6731": {
            "op": "ADD"
        },
        "6732": {
            "op": "PUSH2",
            "value": "0x19BA"
        },
        "6735": {
            "jump": "i",
            "op": "JUMP"
        },
        "6736": {
            "op": "JUMPDEST"
        },
        "6737": {
            "op": "PUSH1",
            "value": "0x1F"
        },
        "6739": {
            "op": "ADD"
        },
        "6740": {
            "op": "PUSH1",
            "value": "0x1F"
        },
        "6742": {
            "op": "NOT"
        },
        "6743": {
            "op": "AND"
        },
        "6744": {
            "op": "SWAP2"
        },
        "6745": {
            "op": "SWAP1"
        },
        "6746": {
            "op": "SWAP2"
        },
        "6747": {
            "op": "ADD"
        },
        "6748": {
            "op": "PUSH1",
            "value": "0x40"
        },
        "6750": {
            "op": "ADD"
        },
        "6751": {
            "op": "SWAP3"
        },
        "6752": {
            "op": "SWAP2"
        },
        "6753": {
            "op": "POP"
        },
        "6754": {
            "op": "POP"
        },
        "6755": {
            "jump": "o",
            "op": "JUMP"
        },
        "6756": {
            "op": "JUMPDEST"
        },
        "6757": {
            "op": "PUSH1",
            "value": "0x20"
        },
        "6759": {
            "op": "DUP1"
        },
        "6760": {
            "op": "DUP3"
        },
        "6761": {
            "op": "MSTORE"
        },
        "6762": {
            "op": "PUSH1",
            "value": "0x1D"
        },
        "6764": {
            "op": "SWAP1"
        },
        "6765": {
            "op": "DUP3"
        },
        "6766": {
            "op": "ADD"
        },
        "6767": {
            "op": "MSTORE"
        },
        "6768": {
            "op": "PUSH32",
            "value": "0x43616E204E6F74207768696C65206C6F7474657279206F6E676F696E67000000"
        },
        "6801": {
            "op": "PUSH1",
            "value": "0x40"
        },
        "6803": {
            "op": "DUP3"
        },
        "6804": {
            "op": "ADD"
        },
        "6805": {
            "op": "MSTORE"
        },
        "6806": {
            "op": "PUSH1",
            "value": "0x60"
        },
        "6808": {
            "op": "ADD"
        },
        "6809": {
            "op": "SWAP1"
        },
        "6810": {
            "jump": "o",
            "op": "JUMP"
        },
        "6811": {
            "op": "JUMPDEST"
        },
        "6812": {
            "op": "PUSH4",
            "value": "0x4E487B71"
        },
        "6817": {
            "op": "PUSH1",
            "value": "0xE0"
        },
        "6819": {
            "op": "SHL"
        },
        "6820": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6822": {
            "op": "MSTORE"
        },
        "6823": {
            "op": "PUSH1",
            "value": "0x11"
        },
        "6825": {
            "op": "PUSH1",
            "value": "0x4"
        },
        "6827": {
            "op": "MSTORE"
        },
        "6828": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "6830": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6832": {
            "op": "REVERT"
        },
        "6833": {
            "op": "JUMPDEST"
        },
        "6834": {
            "op": "DUP1"
        },
        "6835": {
            "op": "DUP3"
        },
        "6836": {
            "op": "ADD"
        },
        "6837": {
            "op": "DUP1"
        },
        "6838": {
            "op": "DUP3"
        },
        "6839": {
            "op": "GT"
        },
        "6840": {
            "op": "ISZERO"
        },
        "6841": {
            "op": "PUSH2",
            "value": "0x1AC4"
        },
        "6844": {
            "op": "JUMPI"
        },
        "6845": {
            "op": "PUSH2",
            "value": "0x1AC4"
        },
        "6848": {
            "op": "PUSH2",
            "value": "0x1A9B"
        },
        "6851": {
            "jump": "i",
            "op": "JUMP"
        },
        "6852": {
            "op": "JUMPDEST"
        },
        "6853": {
            "op": "SWAP3"
        },
        "6854": {
            "op": "SWAP2"
        },
        "6855": {
            "op": "POP"
        },
        "6856": {
            "op": "POP"
        },
        "6857": {
            "jump": "o",
            "op": "JUMP"
        },
        "6858": {
            "op": "JUMPDEST"
        },
        "6859": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6861": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "6863": {
            "op": "DUP3"
        },
        "6864": {
            "op": "ADD"
        },
        "6865": {
            "op": "PUSH2",
            "value": "0x1ADC"
        },
        "6868": {
            "op": "JUMPI"
        },
        "6869": {
            "op": "PUSH2",
            "value": "0x1ADC"
        },
        "6872": {
            "op": "PUSH2",
            "value": "0x1A9B"
        },
        "6875": {
            "jump": "i",
            "op": "JUMP"
        },
        "6876": {
            "op": "JUMPDEST"
        },
        "6877": {
            "op": "POP"
        },
        "6878": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "6880": {
            "op": "ADD"
        },
        "6881": {
            "op": "SWAP1"
        },
        "6882": {
            "jump": "o",
            "op": "JUMP"
        },
        "6883": {
            "op": "JUMPDEST"
        },
        "6884": {
            "op": "PUSH4",
            "value": "0x4E487B71"
        },
        "6889": {
            "op": "PUSH1",
            "value": "0xE0"
        },
        "6891": {
            "op": "SHL"
        },
        "6892": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6894": {
            "op": "MSTORE"
        },
        "6895": {
            "op": "PUSH1",
            "value": "0x12"
        },
        "6897": {
            "op": "PUSH1",
            "value": "0x4"
        },
        "6899": {
            "op": "MSTORE"
        },
        "6900": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "6902": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6904": {
            "op": "REVERT"
        },
        "6905": {
            "op": "JUMPDEST"
        },
        "6906": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6908": {
            "op": "DUP3"
        },
        "6909": {
            "op": "PUSH2",
            "value": "0x1B08"
        },
        "6912": {
            "op": "JUMPI"
        },
        "6913": {
            "op": "PUSH2",
            "value": "0x1B08"
        },
        "6916": {
            "op": "PUSH2",
            "value": "0x1AE3"
        },
        "6919": {
            "jump": "i",
            "op": "JUMP"
        },
        "6920": {
            "op": "JUMPDEST"
        },
        "6921": {
            "op": "POP"
        },
        "6922": {
            "op": "DIV"
        },
        "6923": {
            "op": "SWAP1"
        },
        "6924": {
            "jump": "o",
            "op": "JUMP"
        },
        "6925": {
            "op": "JUMPDEST"
        },
        "6926": {
            "op": "PUSH4",
            "value": "0x4E487B71"
        },
        "6931": {
            "op": "PUSH1",
            "value": "0xE0"
        },
        "6933": {
            "op": "SHL"
        },
        "6934": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6936": {
            "op": "MSTORE"
        },
        "6937": {
            "op": "PUSH1",
            "value": "0x41"
        },
        "6939": {
            "op": "PUSH1",
            "value": "0x4"
        },
        "6941": {
            "op": "MSTORE"
        },
        "6942": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "6944": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6946": {
            "op": "REVERT"
        },
        "6947": {
            "op": "JUMPDEST"
        },
        "6948": {
            "op": "DUP2"
        },
        "6949": {
            "op": "DUP2"
        },
        "6950": {
            "op": "SUB"
        },
        "6951": {
            "op": "DUP2"
        },
        "6952": {
            "op": "DUP2"
        },
        "6953": {
            "op": "GT"
        },
        "6954": {
            "op": "ISZERO"
        },
        "6955": {
            "op": "PUSH2",
            "value": "0x1AC4"
        },
        "6958": {
            "op": "JUMPI"
        },
        "6959": {
            "op": "PUSH2",
            "value": "0x1AC4"
        },
        "6962": {
            "op": "PUSH2",
            "value": "0x1A9B"
        },
        "6965": {
            "jump": "i",
            "op": "JUMP"
        },
        "6966": {
            "op": "JUMPDEST"
        },
        "6967": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6969": {
            "op": "DUP3"
        },
        "6970": {
            "op": "PUSH2",
            "value": "0x1B45"
        },
        "6973": {
            "op": "JUMPI"
        },
        "6974": {
            "op": "PUSH2",
            "value": "0x1B45"
        },
        "6977": {
            "op": "PUSH2",
            "value": "0x1AE3"
        },
        "6980": {
            "jump": "i",
            "op": "JUMP"
        },
        "6981": {
            "op": "JUMPDEST"
        },
        "6982": {
            "op": "POP"
        },
        "6983": {
            "op": "MOD"
        },
        "6984": {
            "op": "SWAP1"
        },
        "6985": {
            "jump": "o",
            "op": "JUMP"
        },
        "6986": {
            "op": "JUMPDEST"
        },
        "6987": {
            "op": "PUSH4",
            "value": "0x4E487B71"
        },
        "6992": {
            "op": "PUSH1",
            "value": "0xE0"
        },
        "6994": {
            "op": "SHL"
        },
        "6995": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "6997": {
            "op": "MSTORE"
        },
        "6998": {
            "op": "PUSH1",
            "value": "0x32"
        },
        "7000": {
            "op": "PUSH1",
            "value": "0x4"
        },
        "7002": {
            "op": "MSTORE"
        },
        "7003": {
            "op": "PUSH1",
            "value": "0x24"
        },
        "7005": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "7007": {
            "op": "REVERT"
        },
        "7008": {
            "op": "JUMPDEST"
        },
        "7009": {
            "op": "DUP1"
        },
        "7010": {
            "op": "DUP3"
        },
        "7011": {
            "op": "MUL"
        },
        "7012": {
            "op": "DUP2"
        },
        "7013": {
            "op": "ISZERO"
        },
        "7014": {
            "op": "DUP3"
        },
        "7015": {
            "op": "DUP3"
        },
        "7016": {
            "op": "DIV"
        },
        "7017": {
            "op": "DUP5"
        },
        "7018": {
            "op": "EQ"
        },
        "7019": {
            "op": "OR"
        },
        "7020": {
            "op": "PUSH2",
            "value": "0x1AC4"
        },
        "7023": {
            "op": "JUMPI"
        },
        "7024": {
            "op": "PUSH2",
            "value": "0x1AC4"
        },
        "7027": {
            "op": "PUSH2",
            "value": "0x1A9B"
        },
        "7030": {
            "jump": "i",
            "op": "JUMP"
        },
        "7031": {
            "op": "JUMPDEST"
        },
        "7032": {
            "op": "PUSH1",
            "value": "0x0"
        },
        "7034": {
            "op": "PUSH1",
            "value": "0xFF"
        },
        "7036": {
            "op": "DUP3"
        },
        "7037": {
            "op": "AND"
        },
        "7038": {
            "op": "PUSH1",
            "value": "0xFF"
        },
        "7040": {
            "op": "DUP2"
        },
        "7041": {
            "op": "SUB"
        },
        "7042": {
            "op": "PUSH2",
            "value": "0x1B8D"
        },
        "7045": {
            "op": "JUMPI"
        },
        "7046": {
            "op": "PUSH2",
            "value": "0x1B8D"
        },
        "7049": {
            "op": "PUSH2",
            "value": "0x1A9B"
        },
        "7052": {
            "jump": "i",
            "op": "JUMP"
        },
        "7053": {
            "op": "JUMPDEST"
        },
        "7054": {
            "op": "PUSH1",
            "value": "0x1"
        },
        "7056": {
            "op": "ADD"
        },
        "7057": {
            "op": "SWAP3"
        },
        "7058": {
            "op": "SWAP2"
        },
        "7059": {
            "op": "POP"
        },
        "7060": {
            "op": "POP"
        },
        "7061": {
            "jump": "o",
            "op": "JUMP"
        }
    },
    "sha1": "0c539c39d8c8d3ce4a78b5688722dcd084ff6297",
    "source": "pragma solidity ^0.8.13;\n\n//import \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n//import \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\n//import \"@chainlink/contracts/src/v0.8/VRFConsumerBase.sol\";\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\n\n//import \"@openzeppelin/contracts/utils/Address.sol\";\n\ninterface IERC20 {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address account) external view returns (uint256);\n\n    function transfer(address recipient, uint256 amount)\n        external\n        returns (bool);\n\n    function allowance(address owner, address spender)\n        external\n        view\n        returns (uint256);\n\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(\n        address indexed owner,\n        address indexed spender,\n        uint256 value\n    );\n}\n\ncontract MyLottery is Ownable, ReentrancyGuard {\n    address payable[] public players;\n    address payable public recentWinner;\n    //address public link;\n    uint256 public randomness;\n    uint256 public minumumParticipants;\n    uint256 public maximumParticipants;\n    uint256 public EntryFee;\n    mapping(address => bool) public isUserEntered;\n    //AggregatorV3Interface internal ethUsdPriceFeed;\n    uint256 public pricePercent;\n    uint256 public ownerPercent;\n    uint256 public contractPercent;\n    uint256 public maxTryCounter;\n    uint256 public errorFlag;\n    uint256 public lotteryStart;\n    uint256 public lotteryEnd;\n    uint256 public lotteryDuration;\n    uint256 public lotteryPrepDuration;\n    bool public ownerSent;\n    //bool public winnerSent;\n\n    //timestamp ekliyip closeda required bilmem kac saat ge\u00e7meden bitemez\n\n    //maxTryCounter  end lottery icin calismali\n    //CALCULATING_WINNER da takilabilir\n    //lottery no id filan belki 1 le ba\u015fl\u0131y\u0131p art\u0131r\u0131p\n    // kazanan i\u00e7in emit event tutar filan\n    //hi\u00e7 kimse kat\u0131lmam\u0131\u015fsa end lotterye gerek yok ilerde python schedule event laz\u0131m olucak\n\n    enum LOTTERY_STATE {\n        OPEN,\n        CLOSED,\n        CALCULATING_WINNER\n    }\n    LOTTERY_STATE public lottery_state;\n\n    enum EMERGENCY {\n        STOPPED,\n        NOT_STOPPED\n    }\n    EMERGENCY public emergency;\n    uint256 public fee;\n    bytes32 public keyhash;\n    event RequestedRandomness(bytes32 requestId);\n    //event ethSendError(address cannotEthSend);\n    event cantSendEthOwner(address indexed to, uint256 value);\n    event cantSendEthWinner(address indexed to, uint256 value);\n    event cantSendEthParticipants(address indexed to, uint256 value);\n\n    // 0\n    // 1\n    // 2\n\n    constructor() public {\n        EntryFee = 0.05 * (10**18); //bura deiscek\n        lottery_state = LOTTERY_STATE.CLOSED;\n        emergency = EMERGENCY.NOT_STOPPED;\n        minumumParticipants = 10;\n        maximumParticipants = 150;\n        pricePercent = 70;\n        ownerPercent = 20;\n        contractPercent = 10;\n        maxTryCounter = 3;\n        lotteryDuration = 259200; //28800 saniye 8 saat *3*3\n        lotteryPrepDuration = 14400; //7200 saniye 2 saat*2\n    }\n\n    /*nonReentrant*/\n    function enter_lottery() public payable nonReentrant {\n        require(isUserEntered[msg.sender] == false, \"Already entered\");\n        isUserEntered[msg.sender] = true;\n        require(lottery_state == LOTTERY_STATE.OPEN, \"Lottery Not started\");\n        require((emergency == EMERGENCY.NOT_STOPPED), \"Lottery Stopped\");\n        require(\n            msg.value == EntryFee,\n            string.concat(\n                \"Entry fee must be equal to: \",\n                Strings.toString(EntryFee),\n                \" Eth\"\n            )\n        );\n        require(\n            players.length <= maximumParticipants,\n            \"Maximum Number reached for  lottery\"\n        );\n        require((msg.sender).code.length <= 0, \"Contract cannot enter\");\n        players.push(payable(msg.sender));\n    }\n\n    function start_lottery() public nonReentrant {\n        require(\n            lottery_state == LOTTERY_STATE.CLOSED,\n            \"Lottery Already started\"\n        );\n        require(emergency == EMERGENCY.NOT_STOPPED, \"Lottery Stopped\");\n        require(\n            block.timestamp > (lotteryEnd + lotteryPrepDuration),\n            \"min lottery prep duration not passed\"\n        );\n        lottery_state = LOTTERY_STATE.OPEN;\n        randomness = 0;\n        lotteryStart = block.timestamp;\n    }\n\n    function end_lottery() public nonReentrant {\n        require(lottery_state == LOTTERY_STATE.OPEN, \"Lottery Not started\");\n        require(emergency == EMERGENCY.NOT_STOPPED, \"Lottery Stopped\");\n        require(\n            block.timestamp > (lotteryStart + lotteryDuration),\n            \"min lottery duration not passed\"\n        );\n        require((msg.sender).code.length <= 0, \"Contract cannot enter\");\n        //some\n        //timestamp requirede gerekiyor\n        if (players.length < minumumParticipants) {\n            not_enough_participant();\n        } else {\n            lottery_state = LOTTERY_STATE.CALCULATING_WINNER;\n            calculate_winner();\n        }\n\n        //ERC20 yeterli link var m\u0131 diye kontrol et\n    }\n\n    //if cant find winner something happens buna gerek kalmadi sanki\n    /*function retry_winner() public onlyOwner {\n        require(\n            lottery_state == LOTTERY_STATE.CALCULATING_WINNER,\n            \"wrong state\"\n        );\n        require(randomness == 0, \"not random\");\n        calculate_winner();\n    }*/\n\n    function calculate_winner() internal {\n        //if players.length>\n\n        //another random not very very random\n\n        randomness = uint256(\n            keccak256(\n                abi.encodePacked(\n                    players[0], //  seenable\n                    players[1],\n                    players[players.length - 1],\n                    block.difficulty, // can actually be manipulated by the miners!\n                    block.timestamp // timestamp is predictable\n                )\n            )\n        );\n        afterFinish();\n    }\n\n    function setPrizePercents(\n        uint256 _pricePercent,\n        uint256 _ownerPercent,\n        uint256 _contractPercent\n    ) external onlyOwner {\n        require(\n            lottery_state == LOTTERY_STATE.CLOSED,\n            \"Can Not while lottery ongoing\"\n        );\n        require(\n            _pricePercent + _ownerPercent + _contractPercent <= 100,\n            \"can not over 100\"\n        );\n        require(_pricePercent < 50, \"can not less 50\");\n        pricePercent = _pricePercent;\n        ownerPercent = _ownerPercent;\n        contractPercent = _contractPercent;\n    }\n\n    function setMinumumParticipants(uint256 _minumumParticipants)\n        external\n        onlyOwner\n    {\n        minumumParticipants = _minumumParticipants;\n    }\n\n    function setLotteryDuration(uint256 _duration) external onlyOwner {\n        lotteryDuration = _duration;\n    }\n\n    function setEmergencyOpen() external onlyOwner {\n        emergency = EMERGENCY.NOT_STOPPED;\n    }\n\n    function setEmergencyClose() external onlyOwner {\n        emergency = EMERGENCY.STOPPED;\n    }\n\n    function setEntranceFee(uint256 _entryFee) external onlyOwner {\n        require(\n            lottery_state == LOTTERY_STATE.CLOSED,\n            \"Can Not while lottery ongoing\"\n        );\n        EntryFee = _entryFee;\n    }\n\n    function setMaximumParticipants(uint256 _maximumParticipants)\n        external\n        onlyOwner\n    {\n        maximumParticipants = _maximumParticipants;\n    }\n\n    function getBalance(address _tokenContractAddress)\n        public\n        view\n        returns (uint256)\n    {\n        uint256 balance = IERC20(_tokenContractAddress).balanceOf(\n            address(this)\n        );\n        return balance;\n    }\n\n    function recoverEth() external onlyOwner {\n        require(\n            lottery_state == LOTTERY_STATE.CLOSED,\n            \"Can Not while lottery ongoing\"\n        );\n        payable(msg.sender).transfer(address(this).balance);\n    }\n\n    function recoverTokens(address tokenAddress) external onlyOwner {\n        IERC20 token = IERC20(tokenAddress);\n        token.transfer(msg.sender, token.balanceOf(address(this)));\n    }\n\n    function afterFinish() internal {\n        //mapping clear unutma\n        uint256 sentFlag = 0;\n        require(randomness != 0, \"cant find randomness\");\n        uint256 indexOfWinner = randomness % players.length;\n        recentWinner = players[indexOfWinner];\n\n        sentFlag = sendPrizes();\n\n        if (sentFlag == 0) {\n            clearPlayers();\n        } else {\n            errorFlag = errorFlag + 1;\n            if (errorFlag == 3) {\n                errorFlag = 0;\n                calculate_winner(); //yeni winner secicez\n            }\n        }\n\n        //require(sent, \"Failed to send Ether\");\n    }\n\n    function retrySendPrizes() external onlyOwner {\n        sendPrizes();\n    }\n\n    function sendPrizes() internal returns (uint256) {\n        require(\n            lottery_state == LOTTERY_STATE.CALCULATING_WINNER,\n            \" send prize wrong state\"\n        );\n        uint256 total_prize = address(this).balance;\n        if (\n            !ownerSent\n        ) //recentWinner.transfer(total_prize * (pricePercent / 100));\n        {\n            (bool sent, bytes memory data) = owner().call{\n                value: (total_prize * ownerPercent) / 100\n            }(\"\");\n            ownerSent = sent;\n            if (!ownerSent) {\n                emit cantSendEthOwner(\n                    owner(),\n                    (total_prize * ownerPercent) / 100\n                );\n                return 1;\n            }\n        }\n\n        (bool sent, bytes memory data) = recentWinner.call{\n            value: (total_prize * pricePercent) / 100\n        }(\"\");\n        if (!sent) {\n            emit cantSendEthWinner(\n                recentWinner,\n                (total_prize * pricePercent) / 100\n            );\n            return 1;\n        }\n        return 0;\n    }\n\n    /*function test(address sender)\n        external\n        returns (\n            uint256,\n            uint256,\n            uint256\n        )\n    {\n        uint256 total_prize = address(this).balance;\n        (bool sent, bytes memory data) = sender.call{\n            value: ((total_prize * pricePercent) / 100)\n        }(\"\");\n        require(sent, \"Failed to send Ether\");\n        uint256 calc_prize = total_prize * (pricePercent / 100);\n        return (calc_prize, total_prize, pricePercent);\n    }*/\n\n    function not_enough_participant() internal {\n        for (uint8 i = 0; i < players.length; i++) {\n            //players[i].transfer(EntryFee);\n            // burasi de\u011fi\u015fecek\n            (bool sent, bytes memory data) = players[i].call{value: EntryFee}(\n                \"\"\n            );\n            isUserEntered[players[i]] = false;\n            //require(sent, \"Failed to send Ether\");\n            if (!sent) {\n                emit cantSendEthParticipants(players[i], EntryFee);\n            }\n        }\n        clearPlayers();\n    }\n\n    function transferOwner(address newOwner) external onlyOwner {\n        transferOwnership(newOwner);\n    }\n\n    function clearPlayers() internal {\n        for (uint8 i = 0; i < players.length; i++) {\n            isUserEntered[players[i]] = false;\n        }\n        players = new address payable[](0);\n        lottery_state = LOTTERY_STATE.CLOSED;\n        errorFlag = 0;\n        ownerSent = false;\n        lotteryEnd = block.timestamp;\n        //randomness = 0;\n    }\n}\n",
    "sourceMap": "1221:10574:4:-:0;;;2958:469;;;;;;;;;-1:-1:-1;936:32:0;719:10:2;936:18:0;:32::i;:::-;1701:1:1;1806:22;;3000:15:4;2989:8;:26;3040:13;:36;;-1:-1:-1;;3086:33:4;;;;;3151:2;3129:19;:24;;;3185:3;3163:19;:25;3213:2;3198:12;:17;3240:2;3225:17;;3252:15;:20;3298:1;-1:-1:-1;3282:17:4;3327:6;3309:15;:24;3392:5;3370:19;:27;1221:10574;;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:127:5:-;1221:10574:4;;;;;;",
    "sourcePath": "contracts/MyLottery.sol",
    "type": "contract",
    "deployment": {
        "address": "0x0C655acbC6e3a840dA49e99977065aeDf5bE341C",
        "chainid": "56",
        "blockHeight": 23896105
    }
}